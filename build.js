!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function n(t,e){var n=(e=e||U).createElement("script");n.text=t,e.head.appendChild(n).parentNode.removeChild(n)}function i(t){var e=!!t&&"length"in t&&t.length,n=rt.type(t);return"function"!==n&&!rt.isWindow(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}function r(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}function o(t,e,n){return rt.isFunction(e)?rt.grep(t,function(t,i){return!!e.call(t,i,t)!==n}):e.nodeType?rt.grep(t,function(t){return t===e!==n}):"string"!=typeof e?rt.grep(t,function(t){return J.call(e,t)>-1!==n}):dt.test(e)?rt.filter(e,t,n):(e=rt.filter(e,t),rt.grep(t,function(t){return J.call(e,t)>-1!==n&&1===t.nodeType}))}function s(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function a(t){return t}function l(t){throw t}function c(t,e,n,i){var r;try{t&&rt.isFunction(r=t.promise)?r.call(t).done(e).fail(n):t&&rt.isFunction(r=t.then)?r.call(t,e,n):e.apply(void 0,[t].slice(i))}catch(t){n.apply(void 0,[t])}}function u(){U.removeEventListener("DOMContentLoaded",u),t.removeEventListener("load",u),rt.ready()}function h(){this.expando=rt.expando+h.uid++}function f(t,e,n){var i;if(void 0===n&&1===t.nodeType)if(i="data-"+e.replace(Et,"-$&").toLowerCase(),"string"==typeof(n=t.getAttribute(i))){try{n=function(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:kt.test(t)?JSON.parse(t):t)}(n)}catch(t){}Ct.set(t,e,n)}else n=void 0;return n}function d(t,e,n,i){var r,o=1,s=20,a=i?function(){return i.cur()}:function(){return rt.css(t,e,"")},l=a(),c=n&&n[3]||(rt.cssNumber[e]?"":"px"),u=(rt.cssNumber[e]||"px"!==c&&+l)&&At.exec(rt.css(t,e));if(u&&u[3]!==c){c=c||u[3],n=n||[],u=+l||1;do{o=o||".5",u/=o,rt.style(t,e,u+c)}while(o!==(o=a()/l)&&1!==o&&--s)}return n&&(u=+u||+l||0,r=n[1]?u+(n[1]+1)*n[2]:+n[2],i&&(i.unit=c,i.start=u,i.end=r)),r}function p(t,e){for(var n,i,r=[],o=0,s=t.length;o<s;o++)(i=t[o]).style&&(n=i.style.display,e?("none"===n&&(r[o]=$t.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&Dt(i)&&(r[o]=function(t){var e,n=t.ownerDocument,i=t.nodeName,r=It[i];return r||(e=n.body.appendChild(n.createElement(i)),r=rt.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),It[i]=r,r)}(i))):"none"!==n&&(r[o]="none",$t.set(i,"display",n)));for(o=0;o<s;o++)null!=r[o]&&(t[o].style.display=r[o]);return t}function g(t,e){var n;return n=void 0!==t.getElementsByTagName?t.getElementsByTagName(e||"*"):void 0!==t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&r(t,e)?rt.merge([t],n):n}function m(t,e){for(var n=0,i=t.length;n<i;n++)$t.set(t[n],"globalEval",!e||$t.get(e[n],"globalEval"))}function v(t,e,n,i,r){for(var o,s,a,l,c,u,h=e.createDocumentFragment(),f=[],d=0,p=t.length;d<p;d++)if((o=t[d])||0===o)if("object"===rt.type(o))rt.merge(f,o.nodeType?[o]:o);else if(Lt.test(o)){for(s=s||h.appendChild(e.createElement("div")),a=(Ot.exec(o)||["",""])[1].toLowerCase(),l=Pt[a]||Pt._default,s.innerHTML=l[1]+rt.htmlPrefilter(o)+l[2],u=l[0];u--;)s=s.lastChild;rt.merge(f,s.childNodes),(s=h.firstChild).textContent=""}else f.push(e.createTextNode(o));for(h.textContent="",d=0;o=f[d++];)if(i&&rt.inArray(o,i)>-1)r&&r.push(o);else if(c=rt.contains(o.ownerDocument,o),s=g(h.appendChild(o),"script"),c&&m(s),n)for(u=0;o=s[u++];)Ht.test(o.type||"")&&n.push(o);return h}function y(){return!0}function b(){return!1}function w(){try{return U.activeElement}catch(t){}}function x(t,e,n,i,r,o){var s,a;if("object"==typeof e){"string"!=typeof n&&(i=i||n,n=void 0);for(a in e)x(t,a,n,i,e[a],o);return t}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),!1===r)r=b;else if(!r)return t;return 1===o&&(s=r,r=function(t){return rt().off(t),s.apply(this,arguments)},r.guid=s.guid||(s.guid=rt.guid++)),t.each(function(){rt.event.add(this,e,r,i,n)})}function T(t,e){return r(t,"table")&&r(11!==e.nodeType?e:e.firstChild,"tr")?rt(">tbody",t)[0]||t:t}function $(t,e){var n,i,r,o,s,a,l,c;if(1===e.nodeType){if($t.hasData(t)&&(o=$t.access(t),s=$t.set(e,o),c=o.events)){delete s.handle,s.events={};for(r in c)for(n=0,i=c[r].length;n<i;n++)rt.event.add(e,r,c[r][n])}Ct.hasData(t)&&(a=Ct.access(t),l=rt.extend({},a),Ct.set(e,l))}}function C(t,e,i,r){e=X.apply([],e);var o,s,a,l,c,u,h=0,f=t.length,d=f-1,p=e[0],m=rt.isFunction(p);if(m||f>1&&"string"==typeof p&&!nt.checkClone&&zt.test(p))return t.each(function(n){var o=t.eq(n);m&&(e[0]=p.call(this,n,o.html())),C(o,e,i,r)});if(f&&(o=v(e,t[0].ownerDocument,!1,t,r),s=o.firstChild,1===o.childNodes.length&&(o=s),s||r)){for(l=(a=rt.map(g(o,"script"),function(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t})).length;h<f;h++)c=o,h!==d&&(c=rt.clone(c,!0,!0),l&&rt.merge(a,g(c,"script"))),i.call(t[h],c,h);if(l)for(u=a[a.length-1].ownerDocument,rt.map(a,function(t){var e=Ut.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}),h=0;h<l;h++)c=a[h],Ht.test(c.type||"")&&!$t.access(c,"globalEval")&&rt.contains(u,c)&&(c.src?rt._evalUrl&&rt._evalUrl(c.src):n(c.textContent.replace(Vt,""),u))}return t}function k(t,e,n){for(var i,r=e?rt.filter(e,t):t,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||rt.cleanData(g(i)),i.parentNode&&(n&&rt.contains(i.ownerDocument,i)&&m(g(i,"script")),i.parentNode.removeChild(i));return t}function E(t,e,n){var i,r,o,s,a=t.style;return(n=n||Gt(t))&&(""!==(s=n.getPropertyValue(e)||n[e])||rt.contains(t.ownerDocument,t)||(s=rt.style(t,e)),!nt.pixelMarginRight()&&Xt.test(s)&&Yt.test(e)&&(i=a.width,r=a.minWidth,o=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=n.width,a.width=i,a.minWidth=r,a.maxWidth=o)),void 0!==s?s+"":s}function S(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function A(t){var e=rt.cssProps[t];return e||(e=rt.cssProps[t]=function(t){if(t in ee)return t;for(var e=t[0].toUpperCase()+t.slice(1),n=te.length;n--;)if((t=te[n]+e)in ee)return t}(t)||t),e}function N(t,e,n){var i=At.exec(e);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):e}function D(t,e,n,i,r){var o,s=0;for(o=n===(i?"border":"content")?4:"width"===e?1:0;o<4;o+=2)"margin"===n&&(s+=rt.css(t,n+Nt[o],!0,r)),i?("content"===n&&(s-=rt.css(t,"padding"+Nt[o],!0,r)),"margin"!==n&&(s-=rt.css(t,"border"+Nt[o]+"Width",!0,r))):(s+=rt.css(t,"padding"+Nt[o],!0,r),"padding"!==n&&(s+=rt.css(t,"border"+Nt[o]+"Width",!0,r)));return s}function _(t,e,n){var i,r=Gt(t),o=E(t,e,r),s="border-box"===rt.css(t,"boxSizing",!1,r);return Xt.test(o)?o:(i=s&&(nt.boxSizingReliable()||o===t.style[e]),"auto"===o&&(o=t["offset"+e[0].toUpperCase()+e.slice(1)]),(o=parseFloat(o)||0)+D(t,e,n||(s?"border":"content"),i,r)+"px")}function I(t,e,n,i,r){return new I.prototype.init(t,e,n,i,r)}function j(){ie&&(!1===U.hidden&&t.requestAnimationFrame?t.requestAnimationFrame(j):t.setTimeout(j,rt.fx.interval),rt.fx.tick())}function O(){return t.setTimeout(function(){ne=void 0}),ne=rt.now()}function H(t,e){var n,i=0,r={height:t};for(e=e?1:0;i<4;i+=2-e)n=Nt[i],r["margin"+n]=r["padding"+n]=t;return e&&(r.opacity=r.width=t),r}function P(t,e,n){for(var i,r=(L.tweeners[e]||[]).concat(L.tweeners["*"]),o=0,s=r.length;o<s;o++)if(i=r[o].call(n,e,t))return i}function L(t,e,n){var i,r,o=0,s=L.prefilters.length,a=rt.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ne||O(),n=Math.max(0,c.startTime+c.duration-e),i=1-(n/c.duration||0),o=0,s=c.tweens.length;o<s;o++)c.tweens[o].run(i);return a.notifyWith(t,[c,i,n]),i<1&&s?n:(s||a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c]),!1)},c=a.promise({elem:t,props:rt.extend({},e),opts:rt.extend(!0,{specialEasing:{},easing:rt.easing._default},n),originalProperties:e,originalOptions:n,startTime:ne||O(),duration:n.duration,tweens:[],createTween:function(e,n){var i=rt.Tween(t,c.opts,e,n,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(i),i},stop:function(e){var n=0,i=e?c.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)c.tweens[n].run(1);return e?(a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c,e])):a.rejectWith(t,[c,e]),this}}),u=c.props;for(function(t,e){var n,i,r,o,s;for(n in t)if(i=rt.camelCase(n),r=e[i],o=t[n],Array.isArray(o)&&(r=o[1],o=t[n]=o[0]),n!==i&&(t[i]=o,delete t[n]),(s=rt.cssHooks[i])&&"expand"in s){o=s.expand(o),delete t[i];for(n in o)n in t||(t[n]=o[n],e[n]=r)}else e[i]=r}(u,c.opts.specialEasing);o<s;o++)if(i=L.prefilters[o].call(c,t,u,c.opts))return rt.isFunction(i.stop)&&(rt._queueHooks(c.elem,c.opts.queue).stop=rt.proxy(i.stop,i)),i;return rt.map(u,P,c),rt.isFunction(c.opts.start)&&c.opts.start.call(t,c),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always),rt.fx.timer(rt.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c}function M(t){return(t.match(yt)||[]).join(" ")}function B(t){return t.getAttribute&&t.getAttribute("class")||""}function q(t,e,n,i){var r;if(Array.isArray(e))rt.each(e,function(e,r){n||ge.test(t)?i(t,r):q(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,n,i)});else if(n||"object"!==rt.type(e))i(t,e);else for(r in e)q(t+"["+r+"]",e[r],n,i)}function F(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var i,r=0,o=e.toLowerCase().match(yt)||[];if(rt.isFunction(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(t[i]=t[i]||[]).unshift(n)):(t[i]=t[i]||[]).push(n)}}function R(t,e,n,i){function r(a){var l;return o[a]=!0,rt.each(t[a]||[],function(t,a){var c=a(e,n,i);return"string"!=typeof c||s||o[c]?s?!(l=c):void 0:(e.dataTypes.unshift(c),r(c),!1)}),l}var o={},s=t===Ee;return r(e.dataTypes[0])||!o["*"]&&r("*")}function W(t,e){var n,i,r=rt.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((r[n]?t:i||(i={}))[n]=e[n]);return i&&rt.extend(!0,t,i),t}var z=[],U=t.document,V=Object.getPrototypeOf,Y=z.slice,X=z.concat,G=z.push,J=z.indexOf,Q={},K=Q.toString,Z=Q.hasOwnProperty,tt=Z.toString,et=tt.call(Object),nt={},it="3.2.1",rt=function(t,e){return new rt.fn.init(t,e)},ot=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,st=/^-ms-/,at=/-([a-z])/g;rt.fn=rt.prototype={jquery:it,constructor:rt,length:0,toArray:function(){return Y.call(this)},get:function(t){return null==t?Y.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=rt.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return rt.each(this,t)},map:function(t){return this.pushStack(rt.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return this.pushStack(Y.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:G,sort:z.sort,splice:z.splice},rt.extend=rt.fn.extend=function(){var t,e,n,i,r,o,s=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[a]||{},a++),"object"==typeof s||rt.isFunction(s)||(s={}),a===l&&(s=this,a--);a<l;a++)if(null!=(t=arguments[a]))for(e in t)n=s[e],i=t[e],s!==i&&(c&&i&&(rt.isPlainObject(i)||(r=Array.isArray(i)))?(r?(r=!1,o=n&&Array.isArray(n)?n:[]):o=n&&rt.isPlainObject(n)?n:{},s[e]=rt.extend(c,o,i)):void 0!==i&&(s[e]=i));return s},rt.extend({expando:"jQuery"+(it+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===rt.type(t)},isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=rt.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==K.call(t)||(e=V(t))&&("function"!=typeof(n=Z.call(e,"constructor")&&e.constructor)||tt.call(n)!==et))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?Q[K.call(t)]||"object":typeof t},globalEval:function(t){n(t)},camelCase:function(t){return t.replace(st,"ms-").replace(at,function(t,e){return e.toUpperCase()})},each:function(t,e){var n,r=0;if(i(t))for(n=t.length;r<n&&!1!==e.call(t[r],r,t[r]);r++);else for(r in t)if(!1===e.call(t[r],r,t[r]))break;return t},trim:function(t){return null==t?"":(t+"").replace(ot,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(i(Object(t))?rt.merge(n,"string"==typeof t?[t]:t):G.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:J.call(e,t,n)},merge:function(t,e){for(var n=+e.length,i=0,r=t.length;i<n;i++)t[r++]=e[i];return t.length=r,t},grep:function(t,e,n){for(var i=[],r=0,o=t.length,s=!n;r<o;r++)!e(t[r],r)!==s&&i.push(t[r]);return i},map:function(t,e,n){var r,o,s=0,a=[];if(i(t))for(r=t.length;s<r;s++)null!=(o=e(t[s],s,n))&&a.push(o);else for(s in t)null!=(o=e(t[s],s,n))&&a.push(o);return X.apply([],a)},guid:1,proxy:function(t,e){var n,i,r;if("string"==typeof e&&(n=t[e],e=t,t=n),rt.isFunction(t))return i=Y.call(arguments,2),r=function(){return t.apply(e||this,i.concat(Y.call(arguments)))},r.guid=t.guid=t.guid||rt.guid++,r},now:Date.now,support:nt}),"function"==typeof Symbol&&(rt.fn[Symbol.iterator]=z[Symbol.iterator]),rt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){Q["[object "+e+"]"]=e.toLowerCase()});var lt=function(t){function e(t,e,n,i){var r,o,s,a,l,u,f,d=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!i&&((e?e.ownerDocument||e:M)!==D&&N(e),e=e||D,I)){if(11!==p&&(l=pt.exec(t)))if(r=l[1]){if(9===p){if(!(s=e.getElementById(r)))return n;if(s.id===r)return n.push(s),n}else if(d&&(s=d.getElementById(r))&&P(e,s)&&s.id===r)return n.push(s),n}else{if(l[2])return G.apply(n,e.getElementsByTagName(t)),n;if((r=l[3])&&b.getElementsByClassName&&e.getElementsByClassName)return G.apply(n,e.getElementsByClassName(r)),n}if(b.qsa&&!W[t+" "]&&(!j||!j.test(t))){if(1!==p)d=e,f=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(yt,bt):e.setAttribute("id",a=L),o=(u=$(t)).length;o--;)u[o]="#"+a+" "+h(u[o]);f=u.join(","),d=gt.test(t)&&c(e.parentNode)||e}if(f)try{return G.apply(n,d.querySelectorAll(f)),n}catch(t){}finally{a===L&&e.removeAttribute("id")}}}return k(t.replace(rt,"$1"),e,n,i)}function n(){function t(n,i){return e.push(n+" ")>w.cacheLength&&delete t[e.shift()],t[n+" "]=i}var e=[];return t}function i(t){return t[L]=!0,t}function r(t){var e=D.createElement("fieldset");try{return!!t(e)}catch(t){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var n=t.split("|"),i=n.length;i--;)w.attrHandle[n[i]]=e}function s(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function a(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&xt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function l(t){return i(function(e){return e=+e,i(function(n,i){for(var r,o=t([],n.length,e),s=o.length;s--;)n[r=o[s]]&&(n[r]=!(i[r]=n[r]))})})}function c(t){return t&&void 0!==t.getElementsByTagName&&t}function u(){}function h(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e].value;return i}function f(t,e,n){var i=e.dir,r=e.next,o=r||i,s=n&&"parentNode"===o,a=q++;return e.first?function(e,n,r){for(;e=e[i];)if(1===e.nodeType||s)return t(e,n,r);return!1}:function(e,n,l){var c,u,h,f=[B,a];if(l){for(;e=e[i];)if((1===e.nodeType||s)&&t(e,n,l))return!0}else for(;e=e[i];)if(1===e.nodeType||s)if(h=e[L]||(e[L]={}),u=h[e.uniqueID]||(h[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[i]||e;else{if((c=u[o])&&c[0]===B&&c[1]===a)return f[2]=c[2];if(u[o]=f,f[2]=t(e,n,l))return!0}return!1}}function d(t){return t.length>1?function(e,n,i){for(var r=t.length;r--;)if(!t[r](e,n,i))return!1;return!0}:t[0]}function p(t,e,n,i,r){for(var o,s=[],a=0,l=t.length,c=null!=e;a<l;a++)(o=t[a])&&(n&&!n(o,i,r)||(s.push(o),c&&e.push(a)));return s}function g(t,n,r,o,s,a){return o&&!o[L]&&(o=g(o)),s&&!s[L]&&(s=g(s,a)),i(function(i,a,l,c){var u,h,f,d=[],g=[],m=a.length,v=i||function(t,n,i){for(var r=0,o=n.length;r<o;r++)e(t,n[r],i);return i}(n||"*",l.nodeType?[l]:l,[]),y=!t||!i&&n?v:p(v,d,t,l,c),b=r?s||(i?t:m||o)?[]:a:y;if(r&&r(y,b,l,c),o)for(u=p(b,g),o(u,[],l,c),h=u.length;h--;)(f=u[h])&&(b[g[h]]=!(y[g[h]]=f));if(i){if(s||t){if(s){for(u=[],h=b.length;h--;)(f=b[h])&&u.push(y[h]=f);s(null,b=[],u,c)}for(h=b.length;h--;)(f=b[h])&&(u=s?Q(i,f):d[h])>-1&&(i[u]=!(a[u]=f))}}else b=p(b===a?b.splice(m,b.length):b),s?s(null,a,b,c):G.apply(a,b)})}function m(t){for(var e,n,i,r=t.length,o=w.relative[t[0].type],s=o||w.relative[" "],a=o?1:0,l=f(function(t){return t===e},s,!0),c=f(function(t){return Q(e,t)>-1},s,!0),u=[function(t,n,i){var r=!o&&(i||n!==E)||((e=n).nodeType?l(t,n,i):c(t,n,i));return e=null,r}];a<r;a++)if(n=w.relative[t[a].type])u=[f(d(u),n)];else{if((n=w.filter[t[a].type].apply(null,t[a].matches))[L]){for(i=++a;i<r&&!w.relative[t[i].type];i++);return g(a>1&&d(u),a>1&&h(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(rt,"$1"),n,a<i&&m(t.slice(a,i)),i<r&&m(t=t.slice(i)),i<r&&h(t))}u.push(n)}return d(u)}function v(t,n){var r=n.length>0,o=t.length>0,s=function(i,s,a,l,c){var u,h,f,d=0,g="0",m=i&&[],v=[],y=E,b=i||o&&w.find.TAG("*",c),x=B+=null==y?1:Math.random()||.1,T=b.length;for(c&&(E=s===D||s||c);g!==T&&null!=(u=b[g]);g++){if(o&&u){for(h=0,s||u.ownerDocument===D||(N(u),a=!I);f=t[h++];)if(f(u,s||D,a)){l.push(u);break}c&&(B=x)}r&&((u=!f&&u)&&d--,i&&m.push(u))}if(d+=g,r&&g!==d){for(h=0;f=n[h++];)f(m,v,s,a);if(i){if(d>0)for(;g--;)m[g]||v[g]||(v[g]=Y.call(l));v=p(v)}G.apply(l,v),c&&!i&&v.length>0&&d+n.length>1&&e.uniqueSort(l)}return c&&(B=x,E=y),m};return r?i(s):s}var y,b,w,x,T,$,C,k,E,S,A,N,D,_,I,j,O,H,P,L="sizzle"+1*new Date,M=t.document,B=0,q=0,F=n(),R=n(),W=n(),z=function(t,e){return t===e&&(A=!0),0},U={}.hasOwnProperty,V=[],Y=V.pop,X=V.push,G=V.push,J=V.slice,Q=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1},K="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",Z="[\\x20\\t\\r\\n\\f]",tt="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",et="\\["+Z+"*("+tt+")(?:"+Z+"*([*^$|!~]?=)"+Z+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+tt+"))|)"+Z+"*\\]",nt=":("+tt+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+et+")*)|.*)\\)|)",it=new RegExp(Z+"+","g"),rt=new RegExp("^"+Z+"+|((?:^|[^\\\\])(?:\\\\.)*)"+Z+"+$","g"),ot=new RegExp("^"+Z+"*,"+Z+"*"),st=new RegExp("^"+Z+"*([>+~]|"+Z+")"+Z+"*"),at=new RegExp("="+Z+"*([^\\]'\"]*?)"+Z+"*\\]","g"),lt=new RegExp(nt),ct=new RegExp("^"+tt+"$"),ut={ID:new RegExp("^#("+tt+")"),CLASS:new RegExp("^\\.("+tt+")"),TAG:new RegExp("^("+tt+"|[*])"),ATTR:new RegExp("^"+et),PSEUDO:new RegExp("^"+nt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+Z+"*(even|odd|(([+-]|)(\\d*)n|)"+Z+"*(?:([+-]|)"+Z+"*(\\d+)|))"+Z+"*\\)|)","i"),bool:new RegExp("^(?:"+K+")$","i"),needsContext:new RegExp("^"+Z+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+Z+"*((?:-\\d)?\\d*)"+Z+"*\\)|)(?=[^-]|$)","i")},ht=/^(?:input|select|textarea|button)$/i,ft=/^h\d$/i,dt=/^[^{]+\{\s*\[native \w/,pt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,gt=/[+~]/,mt=new RegExp("\\\\([\\da-f]{1,6}"+Z+"?|("+Z+")|.)","ig"),vt=function(t,e,n){var i="0x"+e-65536;return i!=i||n?e:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},yt=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,bt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},wt=function(){N()},xt=f(function(t){return!0===t.disabled&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{G.apply(V=J.call(M.childNodes),M.childNodes),V[M.childNodes.length].nodeType}catch(t){G={apply:V.length?function(t,e){X.apply(t,J.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}b=e.support={},T=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},N=e.setDocument=function(t){var e,n,i=t?t.ownerDocument||t:M;return i!==D&&9===i.nodeType&&i.documentElement?(D=i,_=D.documentElement,I=!T(D),M!==D&&(n=D.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",wt,!1):n.attachEvent&&n.attachEvent("onunload",wt)),b.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),b.getElementsByTagName=r(function(t){return t.appendChild(D.createComment("")),!t.getElementsByTagName("*").length}),b.getElementsByClassName=dt.test(D.getElementsByClassName),b.getById=r(function(t){return _.appendChild(t).id=L,!D.getElementsByName||!D.getElementsByName(L).length}),b.getById?(w.filter.ID=function(t){var e=t.replace(mt,vt);return function(t){return t.getAttribute("id")===e}},w.find.ID=function(t,e){if(void 0!==e.getElementById&&I){var n=e.getElementById(t);return n?[n]:[]}}):(w.filter.ID=function(t){var e=t.replace(mt,vt);return function(t){var n=void 0!==t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},w.find.ID=function(t,e){if(void 0!==e.getElementById&&I){var n,i,r,o=e.getElementById(t);if(o){if((n=o.getAttributeNode("id"))&&n.value===t)return[o];for(r=e.getElementsByName(t),i=0;o=r[i++];)if((n=o.getAttributeNode("id"))&&n.value===t)return[o]}return[]}}),w.find.TAG=b.getElementsByTagName?function(t,e){return void 0!==e.getElementsByTagName?e.getElementsByTagName(t):b.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],r=0,o=e.getElementsByTagName(t);if("*"===t){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},w.find.CLASS=b.getElementsByClassName&&function(t,e){if(void 0!==e.getElementsByClassName&&I)return e.getElementsByClassName(t)},O=[],j=[],(b.qsa=dt.test(D.querySelectorAll))&&(r(function(t){_.appendChild(t).innerHTML="<a id='"+L+"'></a><select id='"+L+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&j.push("[*^$]="+Z+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||j.push("\\["+Z+"*(?:value|"+K+")"),t.querySelectorAll("[id~="+L+"-]").length||j.push("~="),t.querySelectorAll(":checked").length||j.push(":checked"),t.querySelectorAll("a#"+L+"+*").length||j.push(".#.+[+~]")}),r(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=D.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&j.push("name"+Z+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&j.push(":enabled",":disabled"),_.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&j.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),j.push(",.*:")})),(b.matchesSelector=dt.test(H=_.matches||_.webkitMatchesSelector||_.mozMatchesSelector||_.oMatchesSelector||_.msMatchesSelector))&&r(function(t){b.disconnectedMatch=H.call(t,"*"),H.call(t,"[s!='']:x"),O.push("!=",nt)}),j=j.length&&new RegExp(j.join("|")),O=O.length&&new RegExp(O.join("|")),e=dt.test(_.compareDocumentPosition),P=e||dt.test(_.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},z=e?function(t,e){if(t===e)return A=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n||(1&(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1)||!b.sortDetached&&e.compareDocumentPosition(t)===n?t===D||t.ownerDocument===M&&P(M,t)?-1:e===D||e.ownerDocument===M&&P(M,e)?1:S?Q(S,t)-Q(S,e):0:4&n?-1:1)}:function(t,e){if(t===e)return A=!0,0;var n,i=0,r=t.parentNode,o=e.parentNode,a=[t],l=[e];if(!r||!o)return t===D?-1:e===D?1:r?-1:o?1:S?Q(S,t)-Q(S,e):0;if(r===o)return s(t,e);for(n=t;n=n.parentNode;)a.unshift(n);for(n=e;n=n.parentNode;)l.unshift(n);for(;a[i]===l[i];)i++;return i?s(a[i],l[i]):a[i]===M?-1:l[i]===M?1:0},D):D},e.matches=function(t,n){return e(t,null,null,n)},e.matchesSelector=function(t,n){if((t.ownerDocument||t)!==D&&N(t),n=n.replace(at,"='$1']"),b.matchesSelector&&I&&!W[n+" "]&&(!O||!O.test(n))&&(!j||!j.test(n)))try{var i=H.call(t,n);if(i||b.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(t){}return e(n,D,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==D&&N(t),P(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==D&&N(t);var n=w.attrHandle[e.toLowerCase()],i=n&&U.call(w.attrHandle,e.toLowerCase())?n(t,e,!I):void 0;return void 0!==i?i:b.attributes||!I?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},e.escape=function(t){return(t+"").replace(yt,bt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,n=[],i=0,r=0;if(A=!b.detectDuplicates,S=!b.sortStable&&t.slice(0),t.sort(z),A){for(;e=t[r++];)e===t[r]&&(i=n.push(r));for(;i--;)t.splice(n[i],1)}return S=null,t},x=e.getText=function(t){var e,n="",i=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=x(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[i++];)n+=x(e);return n},(w=e.selectors={cacheLength:50,createPseudo:i,match:ut,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(mt,vt),t[3]=(t[3]||t[4]||t[5]||"").replace(mt,vt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return ut.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&lt.test(n)&&(e=$(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(mt,vt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=F[t+" "];return e||(e=new RegExp("(^|"+Z+")"+t+"("+Z+"|$)"))&&F(t,function(t){return e.test("string"==typeof t.className&&t.className||void 0!==t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(r){var o=e.attr(r,t);return null==o?"!="===n:!n||(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o.replace(it," ")+" ").indexOf(i)>-1:"|="===n&&(o===i||o.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,n,i,r){var o="nth"!==t.slice(0,3),s="last"!==t.slice(-4),a="of-type"===e;return 1===i&&0===r?function(t){return!!t.parentNode}:function(e,n,l){var c,u,h,f,d,p,g=o!==s?"nextSibling":"previousSibling",m=e.parentNode,v=a&&e.nodeName.toLowerCase(),y=!l&&!a,b=!1;if(m){if(o){for(;g;){for(f=e;f=f[g];)if(a?f.nodeName.toLowerCase()===v:1===f.nodeType)return!1;p=g="only"===t&&!p&&"nextSibling"}return!0}if(p=[s?m.firstChild:m.lastChild],s&&y){for(b=(d=(c=(u=(h=(f=m)[L]||(f[L]={}))[f.uniqueID]||(h[f.uniqueID]={}))[t]||[])[0]===B&&c[1])&&c[2],f=d&&m.childNodes[d];f=++d&&f&&f[g]||(b=d=0)||p.pop();)if(1===f.nodeType&&++b&&f===e){u[t]=[B,d,b];break}}else if(y&&(f=e,h=f[L]||(f[L]={}),u=h[f.uniqueID]||(h[f.uniqueID]={}),c=u[t]||[],d=c[0]===B&&c[1],b=d),!1===b)for(;(f=++d&&f&&f[g]||(b=d=0)||p.pop())&&((a?f.nodeName.toLowerCase()!==v:1!==f.nodeType)||!++b||(y&&(h=f[L]||(f[L]={}),u=h[f.uniqueID]||(h[f.uniqueID]={}),u[t]=[B,b]),f!==e)););return(b-=r)===i||b%i==0&&b/i>=0}}},PSEUDO:function(t,n){var r,o=w.pseudos[t]||w.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[L]?o(n):o.length>1?(r=[t,t,"",n],w.setFilters.hasOwnProperty(t.toLowerCase())?i(function(t,e){for(var i,r=o(t,n),s=r.length;s--;)i=Q(t,r[s]),t[i]=!(e[i]=r[s])}):function(t){return o(t,0,r)}):o}},pseudos:{not:i(function(t){var e=[],n=[],r=C(t.replace(rt,"$1"));return r[L]?i(function(t,e,n,i){for(var o,s=r(t,null,i,[]),a=t.length;a--;)(o=s[a])&&(t[a]=!(e[a]=o))}):function(t,i,o){return e[0]=t,r(e,null,o,n),e[0]=null,!n.pop()}}),has:i(function(t){return function(n){return e(t,n).length>0}}),contains:i(function(t){return t=t.replace(mt,vt),function(e){return(e.textContent||e.innerText||x(e)).indexOf(t)>-1}}),lang:i(function(t){return ct.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(mt,vt).toLowerCase(),function(e){var n;do{if(n=I?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(n=n.toLowerCase())===t||0===n.indexOf(t+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===_},focus:function(t){return t===D.activeElement&&(!D.hasFocus||D.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:a(!1),disabled:a(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,!0===t.selected},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!w.pseudos.empty(t)},header:function(t){return ft.test(t.nodeName)},input:function(t){return ht.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:l(function(){return[0]}),last:l(function(t,e){return[e-1]}),eq:l(function(t,e,n){return[n<0?n+e:n]}),even:l(function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t}),odd:l(function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t}),lt:l(function(t,e,n){for(var i=n<0?n+e:n;--i>=0;)t.push(i);return t}),gt:l(function(t,e,n){for(var i=n<0?n+e:n;++i<e;)t.push(i);return t})}}).pseudos.nth=w.pseudos.eq;for(y in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})w.pseudos[y]=function(t){return function(e){return"input"===e.nodeName.toLowerCase()&&e.type===t}}(y);for(y in{submit:!0,reset:!0})w.pseudos[y]=function(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}(y);return u.prototype=w.filters=w.pseudos,w.setFilters=new u,$=e.tokenize=function(t,n){var i,r,o,s,a,l,c,u=R[t+" "];if(u)return n?0:u.slice(0);for(a=t,l=[],c=w.preFilter;a;){i&&!(r=ot.exec(a))||(r&&(a=a.slice(r[0].length)||a),l.push(o=[])),i=!1,(r=st.exec(a))&&(i=r.shift(),o.push({value:i,type:r[0].replace(rt," ")}),a=a.slice(i.length));for(s in w.filter)!(r=ut[s].exec(a))||c[s]&&!(r=c[s](r))||(i=r.shift(),o.push({value:i,type:s,matches:r}),a=a.slice(i.length));if(!i)break}return n?a.length:a?e.error(t):R(t,l).slice(0)},C=e.compile=function(t,e){var n,i=[],r=[],o=W[t+" "];if(!o){for(e||(e=$(t)),n=e.length;n--;)(o=m(e[n]))[L]?i.push(o):r.push(o);(o=W(t,v(r,i))).selector=t}return o},k=e.select=function(t,e,n,i){var r,o,s,a,l,u="function"==typeof t&&t,f=!i&&$(t=u.selector||t);if(n=n||[],1===f.length){if((o=f[0]=f[0].slice(0)).length>2&&"ID"===(s=o[0]).type&&9===e.nodeType&&I&&w.relative[o[1].type]){if(!(e=(w.find.ID(s.matches[0].replace(mt,vt),e)||[])[0]))return n;u&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(r=ut.needsContext.test(t)?0:o.length;r--&&(s=o[r],!w.relative[a=s.type]);)if((l=w.find[a])&&(i=l(s.matches[0].replace(mt,vt),gt.test(o[0].type)&&c(e.parentNode)||e))){if(o.splice(r,1),!(t=i.length&&h(o)))return G.apply(n,i),n;break}}return(u||C(t,f))(i,e,!I,n,!e||gt.test(t)&&c(e.parentNode)||e),n},b.sortStable=L.split("").sort(z).join("")===L,b.detectDuplicates=!!A,N(),b.sortDetached=r(function(t){return 1&t.compareDocumentPosition(D.createElement("fieldset"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),b.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||o(K,function(t,e,n){var i;if(!n)return!0===t[e]?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null}),e}(t);rt.find=lt,rt.expr=lt.selectors,rt.expr[":"]=rt.expr.pseudos,rt.uniqueSort=rt.unique=lt.uniqueSort,rt.text=lt.getText,rt.isXMLDoc=lt.isXML,rt.contains=lt.contains,rt.escapeSelector=lt.escape;var ct=function(t,e,n){for(var i=[],r=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&rt(t).is(n))break;i.push(t)}return i},ut=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},ht=rt.expr.match.needsContext,ft=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,dt=/^.[^:#\[\.,]*$/;rt.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?rt.find.matchesSelector(i,t)?[i]:[]:rt.find.matches(t,rt.grep(e,function(t){return 1===t.nodeType}))},rt.fn.extend({find:function(t){var e,n,i=this.length,r=this;if("string"!=typeof t)return this.pushStack(rt(t).filter(function(){for(e=0;e<i;e++)if(rt.contains(r[e],this))return!0}));for(n=this.pushStack([]),e=0;e<i;e++)rt.find(t,r[e],n);return i>1?rt.uniqueSort(n):n},filter:function(t){return this.pushStack(o(this,t||[],!1))},not:function(t){return this.pushStack(o(this,t||[],!0))},is:function(t){return!!o(this,"string"==typeof t&&ht.test(t)?rt(t):t||[],!1).length}});var pt,gt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(rt.fn.init=function(t,e,n){var i,r;if(!t)return this;if(n=n||pt,"string"==typeof t){if(!(i="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:gt.exec(t))||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof rt?e[0]:e,rt.merge(this,rt.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:U,!0)),ft.test(i[1])&&rt.isPlainObject(e))for(i in e)rt.isFunction(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}return(r=U.getElementById(i[2]))&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):rt.isFunction(t)?void 0!==n.ready?n.ready(t):t(rt):rt.makeArray(t,this)}).prototype=rt.fn,pt=rt(U);var mt=/^(?:parents|prev(?:Until|All))/,vt={children:!0,contents:!0,next:!0,prev:!0};rt.fn.extend({has:function(t){var e=rt(t,this),n=e.length;return this.filter(function(){for(var t=0;t<n;t++)if(rt.contains(this,e[t]))return!0})},closest:function(t,e){var n,i=0,r=this.length,o=[],s="string"!=typeof t&&rt(t);if(!ht.test(t))for(;i<r;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(s?s.index(n)>-1:1===n.nodeType&&rt.find.matchesSelector(n,t))){o.push(n);break}return this.pushStack(o.length>1?rt.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?J.call(rt(t),this[0]):J.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(rt.uniqueSort(rt.merge(this.get(),rt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),rt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return ct(t,"parentNode")},parentsUntil:function(t,e,n){return ct(t,"parentNode",n)},next:function(t){return s(t,"nextSibling")},prev:function(t){return s(t,"previousSibling")},nextAll:function(t){return ct(t,"nextSibling")},prevAll:function(t){return ct(t,"previousSibling")},nextUntil:function(t,e,n){return ct(t,"nextSibling",n)},prevUntil:function(t,e,n){return ct(t,"previousSibling",n)},siblings:function(t){return ut((t.parentNode||{}).firstChild,t)},children:function(t){return ut(t.firstChild)},contents:function(t){return r(t,"iframe")?t.contentDocument:(r(t,"template")&&(t=t.content||t),rt.merge([],t.childNodes))}},function(t,e){rt.fn[t]=function(n,i){var r=rt.map(this,e,n);return"Until"!==t.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=rt.filter(i,r)),this.length>1&&(vt[t]||rt.uniqueSort(r),mt.test(t)&&r.reverse()),this.pushStack(r)}});var yt=/[^\x20\t\r\n\f]+/g;rt.Callbacks=function(t){t="string"==typeof t?function(t){var e={};return rt.each(t.match(yt)||[],function(t,n){e[n]=!0}),e}(t):rt.extend({},t);var e,n,i,r,o=[],s=[],a=-1,l=function(){for(r=r||t.once,i=e=!0;s.length;a=-1)for(n=s.shift();++a<o.length;)!1===o[a].apply(n[0],n[1])&&t.stopOnFalse&&(a=o.length,n=!1);t.memory||(n=!1),e=!1,r&&(o=n?[]:"")},c={add:function(){return o&&(n&&!e&&(a=o.length-1,s.push(n)),function e(n){rt.each(n,function(n,i){rt.isFunction(i)?t.unique&&c.has(i)||o.push(i):i&&i.length&&"string"!==rt.type(i)&&e(i)})}(arguments),n&&!e&&l()),this},remove:function(){return rt.each(arguments,function(t,e){for(var n;(n=rt.inArray(e,o,n))>-1;)o.splice(n,1),n<=a&&a--}),this},has:function(t){return t?rt.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return r=s=[],o=n="",this},disabled:function(){return!o},lock:function(){return r=s=[],n||e||(o=n=""),this},locked:function(){return!!r},fireWith:function(t,n){return r||(n=n||[],n=[t,n.slice?n.slice():n],s.push(n),e||l()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!i}};return c},rt.extend({Deferred:function(e){var n=[["notify","progress",rt.Callbacks("memory"),rt.Callbacks("memory"),2],["resolve","done",rt.Callbacks("once memory"),rt.Callbacks("once memory"),0,"resolved"],["reject","fail",rt.Callbacks("once memory"),rt.Callbacks("once memory"),1,"rejected"]],i="pending",r={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},catch:function(t){return r.then(null,t)},pipe:function(){var t=arguments;return rt.Deferred(function(e){rt.each(n,function(n,i){var r=rt.isFunction(t[i[4]])&&t[i[4]];o[i[1]](function(){var t=r&&r.apply(this,arguments);t&&rt.isFunction(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[i[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(e,i,r){function o(e,n,i,r){return function(){var c=this,u=arguments,h=function(){var t,h;if(!(e<s)){if((t=i.apply(c,u))===n.promise())throw new TypeError("Thenable self-resolution");h=t&&("object"==typeof t||"function"==typeof t)&&t.then,rt.isFunction(h)?r?h.call(t,o(s,n,a,r),o(s,n,l,r)):(s++,h.call(t,o(s,n,a,r),o(s,n,l,r),o(s,n,a,n.notifyWith))):(i!==a&&(c=void 0,u=[t]),(r||n.resolveWith)(c,u))}},f=r?h:function(){try{h()}catch(t){rt.Deferred.exceptionHook&&rt.Deferred.exceptionHook(t,f.stackTrace),e+1>=s&&(i!==l&&(c=void 0,u=[t]),n.rejectWith(c,u))}};e?f():(rt.Deferred.getStackHook&&(f.stackTrace=rt.Deferred.getStackHook()),t.setTimeout(f))}}var s=0;return rt.Deferred(function(t){n[0][3].add(o(0,t,rt.isFunction(r)?r:a,t.notifyWith)),n[1][3].add(o(0,t,rt.isFunction(e)?e:a)),n[2][3].add(o(0,t,rt.isFunction(i)?i:l))}).promise()},promise:function(t){return null!=t?rt.extend(t,r):r}},o={};return rt.each(n,function(t,e){var s=e[2],a=e[5];r[e[1]]=s.add,a&&s.add(function(){i=a},n[3-t][2].disable,n[0][2].lock),s.add(e[3].fire),o[e[0]]=function(){return o[e[0]+"With"](this===o?void 0:this,arguments),this},o[e[0]+"With"]=s.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(t){var e=arguments.length,n=e,i=Array(n),r=Y.call(arguments),o=rt.Deferred(),s=function(t){return function(n){i[t]=this,r[t]=arguments.length>1?Y.call(arguments):n,--e||o.resolveWith(i,r)}};if(e<=1&&(c(t,o.done(s(n)).resolve,o.reject,!e),"pending"===o.state()||rt.isFunction(r[n]&&r[n].then)))return o.then();for(;n--;)c(r[n],s(n),o.reject);return o.promise()}});var bt=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;rt.Deferred.exceptionHook=function(e,n){t.console&&t.console.warn&&e&&bt.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,n)},rt.readyException=function(e){t.setTimeout(function(){throw e})};var wt=rt.Deferred();rt.fn.ready=function(t){return wt.then(t).catch(function(t){rt.readyException(t)}),this},rt.extend({isReady:!1,readyWait:1,ready:function(t){(!0===t?--rt.readyWait:rt.isReady)||(rt.isReady=!0,!0!==t&&--rt.readyWait>0||wt.resolveWith(U,[rt]))}}),rt.ready.then=wt.then,"complete"===U.readyState||"loading"!==U.readyState&&!U.documentElement.doScroll?t.setTimeout(rt.ready):(U.addEventListener("DOMContentLoaded",u),t.addEventListener("load",u));var xt=function(t,e,n,i,r,o,s){var a=0,l=t.length,c=null==n;if("object"===rt.type(n)){r=!0;for(a in n)xt(t,e,a,n[a],!0,o,s)}else if(void 0!==i&&(r=!0,rt.isFunction(i)||(s=!0),c&&(s?(e.call(t,i),e=null):(c=e,e=function(t,e,n){return c.call(rt(t),n)})),e))for(;a<l;a++)e(t[a],n,s?i:i.call(t[a],a,e(t[a],n)));return r?t:c?e.call(t):l?e(t[0],n):o},Tt=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};h.uid=1,h.prototype={cache:function(t){var e=t[this.expando];return e||(e={},Tt(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var i,r=this.cache(t);if("string"==typeof e)r[rt.camelCase(e)]=n;else for(i in e)r[rt.camelCase(i)]=e[i];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][rt.camelCase(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,i=t[this.expando];if(void 0!==i){if(void 0!==e){Array.isArray(e)?e=e.map(rt.camelCase):(e=rt.camelCase(e),e=e in i?[e]:e.match(yt)||[]),n=e.length;for(;n--;)delete i[e[n]]}(void 0===e||rt.isEmptyObject(i))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!rt.isEmptyObject(e)}};var $t=new h,Ct=new h,kt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Et=/[A-Z]/g;rt.extend({hasData:function(t){return Ct.hasData(t)||$t.hasData(t)},data:function(t,e,n){return Ct.access(t,e,n)},removeData:function(t,e){Ct.remove(t,e)},_data:function(t,e,n){return $t.access(t,e,n)},_removeData:function(t,e){$t.remove(t,e)}}),rt.fn.extend({data:function(t,e){var n,i,r,o=this[0],s=o&&o.attributes;if(void 0===t){if(this.length&&(r=Ct.get(o),1===o.nodeType&&!$t.get(o,"hasDataAttrs"))){for(n=s.length;n--;)s[n]&&0===(i=s[n].name).indexOf("data-")&&(i=rt.camelCase(i.slice(5)),f(o,i,r[i]));$t.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Ct.set(this,t)}):xt(this,function(e){var n;if(o&&void 0===e){if(void 0!==(n=Ct.get(o,t)))return n;if(void 0!==(n=f(o,t)))return n}else this.each(function(){Ct.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Ct.remove(this,t)})}}),rt.extend({queue:function(t,e,n){var i;if(t)return e=(e||"fx")+"queue",i=$t.get(t,e),n&&(!i||Array.isArray(n)?i=$t.access(t,e,rt.makeArray(n)):i.push(n)),i||[]},dequeue:function(t,e){e=e||"fx";var n=rt.queue(t,e),i=n.length,r=n.shift(),o=rt._queueHooks(t,e);"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===e&&n.unshift("inprogress"),delete o.stop,r.call(t,function(){rt.dequeue(t,e)},o)),!i&&o&&o.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return $t.get(t,n)||$t.access(t,n,{empty:rt.Callbacks("once memory").add(function(){$t.remove(t,[e+"queue",n])})})}}),rt.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?rt.queue(this[0],t):void 0===e?this:this.each(function(){var n=rt.queue(this,t,e);rt._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&rt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){rt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,r=rt.Deferred(),o=this,s=this.length,a=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";s--;)(n=$t.get(o[s],t+"queueHooks"))&&n.empty&&(i++,n.empty.add(a));return a(),r.promise(e)}});var St=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,At=new RegExp("^(?:([+-])=|)("+St+")([a-z%]*)$","i"),Nt=["Top","Right","Bottom","Left"],Dt=function(t,e){return"none"===(t=e||t).style.display||""===t.style.display&&rt.contains(t.ownerDocument,t)&&"none"===rt.css(t,"display")},_t=function(t,e,n,i){var r,o,s={};for(o in e)s[o]=t.style[o],t.style[o]=e[o];r=n.apply(t,i||[]);for(o in e)t.style[o]=s[o];return r},It={};rt.fn.extend({show:function(){return p(this,!0)},hide:function(){return p(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Dt(this)?rt(this).show():rt(this).hide()})}});var jt=/^(?:checkbox|radio)$/i,Ot=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Ht=/^$|\/(?:java|ecma)script/i,Pt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Pt.optgroup=Pt.option,Pt.tbody=Pt.tfoot=Pt.colgroup=Pt.caption=Pt.thead,Pt.th=Pt.td;var Lt=/<|&#?\w+;/;!function(){var t=U.createDocumentFragment().appendChild(U.createElement("div")),e=U.createElement("input");e.setAttribute("type","radio"),e.setAttribute("checked","checked"),e.setAttribute("name","t"),t.appendChild(e),nt.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,t.innerHTML="<textarea>x</textarea>",nt.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue}();var Mt=U.documentElement,Bt=/^key/,qt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Ft=/^([^.]*)(?:\.(.+)|)/;rt.event={global:{},add:function(t,e,n,i,r){var o,s,a,l,c,u,h,f,d,p,g,m=$t.get(t);if(m)for(n.handler&&(o=n,n=o.handler,r=o.selector),r&&rt.find.matchesSelector(Mt,r),n.guid||(n.guid=rt.guid++),(l=m.events)||(l=m.events={}),(s=m.handle)||(s=m.handle=function(e){return void 0!==rt&&rt.event.triggered!==e.type?rt.event.dispatch.apply(t,arguments):void 0}),c=(e=(e||"").match(yt)||[""]).length;c--;)a=Ft.exec(e[c])||[],d=g=a[1],p=(a[2]||"").split(".").sort(),d&&(h=rt.event.special[d]||{},d=(r?h.delegateType:h.bindType)||d,h=rt.event.special[d]||{},u=rt.extend({type:d,origType:g,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&rt.expr.match.needsContext.test(r),namespace:p.join(".")},o),(f=l[d])||(f=l[d]=[],f.delegateCount=0,h.setup&&!1!==h.setup.call(t,i,p,s)||t.addEventListener&&t.addEventListener(d,s)),h.add&&(h.add.call(t,u),u.handler.guid||(u.handler.guid=n.guid)),r?f.splice(f.delegateCount++,0,u):f.push(u),rt.event.global[d]=!0)},remove:function(t,e,n,i,r){var o,s,a,l,c,u,h,f,d,p,g,m=$t.hasData(t)&&$t.get(t);if(m&&(l=m.events)){for(c=(e=(e||"").match(yt)||[""]).length;c--;)if(a=Ft.exec(e[c])||[],d=g=a[1],p=(a[2]||"").split(".").sort(),d){for(h=rt.event.special[d]||{},f=l[d=(i?h.delegateType:h.bindType)||d]||[],a=a[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),s=o=f.length;o--;)u=f[o],!r&&g!==u.origType||n&&n.guid!==u.guid||a&&!a.test(u.namespace)||i&&i!==u.selector&&("**"!==i||!u.selector)||(f.splice(o,1),u.selector&&f.delegateCount--,h.remove&&h.remove.call(t,u));s&&!f.length&&(h.teardown&&!1!==h.teardown.call(t,p,m.handle)||rt.removeEvent(t,d,m.handle),delete l[d])}else for(d in l)rt.event.remove(t,d+e[c],n,i,!0);rt.isEmptyObject(l)&&$t.remove(t,"handle events")}},dispatch:function(t){var e,n,i,r,o,s,a=rt.event.fix(t),l=new Array(arguments.length),c=($t.get(this,"events")||{})[a.type]||[],u=rt.event.special[a.type]||{};for(l[0]=a,e=1;e<arguments.length;e++)l[e]=arguments[e];if(a.delegateTarget=this,!u.preDispatch||!1!==u.preDispatch.call(this,a)){for(s=rt.event.handlers.call(this,a,c),e=0;(r=s[e++])&&!a.isPropagationStopped();)for(a.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!a.isImmediatePropagationStopped();)a.rnamespace&&!a.rnamespace.test(o.namespace)||(a.handleObj=o,a.data=o.data,void 0!==(i=((rt.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l))&&!1===(a.result=i)&&(a.preventDefault(),a.stopPropagation()));return u.postDispatch&&u.postDispatch.call(this,a),a.result}},handlers:function(t,e){var n,i,r,o,s,a=[],l=e.delegateCount,c=t.target;if(l&&c.nodeType&&!("click"===t.type&&t.button>=1))for(;c!==this;c=c.parentNode||this)if(1===c.nodeType&&("click"!==t.type||!0!==c.disabled)){for(o=[],s={},n=0;n<l;n++)i=e[n],r=i.selector+" ",void 0===s[r]&&(s[r]=i.needsContext?rt(r,this).index(c)>-1:rt.find(r,this,null,[c]).length),s[r]&&o.push(i);o.length&&a.push({elem:c,handlers:o})}return c=this,l<e.length&&a.push({elem:c,handlers:e.slice(l)}),a},addProp:function(t,e){Object.defineProperty(rt.Event.prototype,t,{enumerable:!0,configurable:!0,get:rt.isFunction(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[rt.expando]?t:new rt.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==w()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===w()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&r(this,"input"))return this.click(),!1},_default:function(t){return r(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},rt.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},rt.Event=function(t,e){return this instanceof rt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&!1===t.returnValue?y:b,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&rt.extend(this,e),this.timeStamp=t&&t.timeStamp||rt.now(),void(this[rt.expando]=!0)):new rt.Event(t,e)},rt.Event.prototype={constructor:rt.Event,isDefaultPrevented:b,isPropagationStopped:b,isImmediatePropagationStopped:b,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=y,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=y,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=y,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},rt.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,char:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Bt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&qt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},rt.event.addProp),rt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){rt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,i=t.relatedTarget,r=t.handleObj;return i&&(i===this||rt.contains(this,i))||(t.type=r.origType,n=r.handler.apply(this,arguments),t.type=e),n}}}),rt.fn.extend({on:function(t,e,n,i){return x(this,t,e,n,i)},one:function(t,e,n,i){return x(this,t,e,n,i,1)},off:function(t,e,n){var i,r;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,rt(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return!1!==e&&"function"!=typeof e||(n=e,e=void 0),!1===n&&(n=b),this.each(function(){rt.event.remove(this,t,n,e)})}});var Rt=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,Wt=/<script|<style|<link/i,zt=/checked\s*(?:[^=]|=\s*.checked.)/i,Ut=/^true\/(.*)/,Vt=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;rt.extend({htmlPrefilter:function(t){return t.replace(Rt,"<$1></$2>")},clone:function(t,e,n){var i,r,o,s,a=t.cloneNode(!0),l=rt.contains(t.ownerDocument,t);if(!(nt.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||rt.isXMLDoc(t)))for(s=g(a),o=g(t),i=0,r=o.length;i<r;i++)!function(t,e){var n=e.nodeName.toLowerCase();"input"===n&&jt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}(o[i],s[i]);if(e)if(n)for(o=o||g(t),s=s||g(a),i=0,r=o.length;i<r;i++)$(o[i],s[i]);else $(t,a);return(s=g(a,"script")).length>0&&m(s,!l&&g(t,"script")),a},cleanData:function(t){for(var e,n,i,r=rt.event.special,o=0;void 0!==(n=t[o]);o++)if(Tt(n)){if(e=n[$t.expando]){if(e.events)for(i in e.events)r[i]?rt.event.remove(n,i):rt.removeEvent(n,i,e.handle);n[$t.expando]=void 0}n[Ct.expando]&&(n[Ct.expando]=void 0)}}}),rt.fn.extend({detach:function(t){return k(this,t,!0)},remove:function(t){return k(this,t)},text:function(t){return xt(this,function(t){return void 0===t?rt.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return C(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){T(this,t).appendChild(t)}})},prepend:function(){return C(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=T(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return C(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return C(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(rt.cleanData(g(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return rt.clone(this,t,e)})},html:function(t){return xt(this,function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!Wt.test(t)&&!Pt[(Ot.exec(t)||["",""])[1].toLowerCase()]){t=rt.htmlPrefilter(t);try{for(;n<i;n++)1===(e=this[n]||{}).nodeType&&(rt.cleanData(g(e,!1)),e.innerHTML=t);e=0}catch(t){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return C(this,arguments,function(e){var n=this.parentNode;rt.inArray(this,t)<0&&(rt.cleanData(g(this)),n&&n.replaceChild(e,this))},t)}}),rt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){rt.fn[t]=function(t){for(var n,i=[],r=rt(t),o=r.length-1,s=0;s<=o;s++)n=s===o?this:this.clone(!0),rt(r[s])[e](n),G.apply(i,n.get());return this.pushStack(i)}});var Yt=/^margin/,Xt=new RegExp("^("+St+")(?!px)[a-z%]+$","i"),Gt=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)};!function(){function e(){if(a){a.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",a.innerHTML="",Mt.appendChild(s);var e=t.getComputedStyle(a);n="1%"!==e.top,o="2px"===e.marginLeft,i="4px"===e.width,a.style.marginRight="50%",r="4px"===e.marginRight,Mt.removeChild(s),a=null}}var n,i,r,o,s=U.createElement("div"),a=U.createElement("div");a.style&&(a.style.backgroundClip="content-box",a.cloneNode(!0).style.backgroundClip="",nt.clearCloneStyle="content-box"===a.style.backgroundClip,s.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",s.appendChild(a),rt.extend(nt,{pixelPosition:function(){return e(),n},boxSizingReliable:function(){return e(),i},pixelMarginRight:function(){return e(),r},reliableMarginLeft:function(){return e(),o}}))}();var Jt=/^(none|table(?!-c[ea]).+)/,Qt=/^--/,Kt={position:"absolute",visibility:"hidden",display:"block"},Zt={letterSpacing:"0",fontWeight:"400"},te=["Webkit","Moz","ms"],ee=U.createElement("div").style;rt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=E(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{float:"cssFloat"},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,o,s,a=rt.camelCase(e),l=Qt.test(e),c=t.style;return l||(e=A(a)),s=rt.cssHooks[e]||rt.cssHooks[a],void 0===n?s&&"get"in s&&void 0!==(r=s.get(t,!1,i))?r:c[e]:("string"===(o=typeof n)&&(r=At.exec(n))&&r[1]&&(n=d(t,e,r),o="number"),void(null!=n&&n==n&&("number"===o&&(n+=r&&r[3]||(rt.cssNumber[a]?"":"px")),nt.clearCloneStyle||""!==n||0!==e.indexOf("background")||(c[e]="inherit"),s&&"set"in s&&void 0===(n=s.set(t,n,i))||(l?c.setProperty(e,n):c[e]=n))))}},css:function(t,e,n,i){var r,o,s,a=rt.camelCase(e);return Qt.test(e)||(e=A(a)),(s=rt.cssHooks[e]||rt.cssHooks[a])&&"get"in s&&(r=s.get(t,!0,n)),void 0===r&&(r=E(t,e,i)),"normal"===r&&e in Zt&&(r=Zt[e]),""===n||n?(o=parseFloat(r),!0===n||isFinite(o)?o||0:r):r}}),rt.each(["height","width"],function(t,e){rt.cssHooks[e]={get:function(t,n,i){if(n)return!Jt.test(rt.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?_(t,e,i):_t(t,Kt,function(){return _(t,e,i)})},set:function(t,n,i){var r,o=i&&Gt(t),s=i&&D(t,e,i,"border-box"===rt.css(t,"boxSizing",!1,o),o);return s&&(r=At.exec(n))&&"px"!==(r[3]||"px")&&(t.style[e]=n,n=rt.css(t,e)),N(0,n,s)}}}),rt.cssHooks.marginLeft=S(nt.reliableMarginLeft,function(t,e){if(e)return(parseFloat(E(t,"marginLeft"))||t.getBoundingClientRect().left-_t(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),rt.each({margin:"",padding:"",border:"Width"},function(t,e){rt.cssHooks[t+e]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[t+Nt[i]+e]=o[i]||o[i-2]||o[0];return r}},Yt.test(t)||(rt.cssHooks[t+e].set=N)}),rt.fn.extend({css:function(t,e){return xt(this,function(t,e,n){var i,r,o={},s=0;if(Array.isArray(e)){for(i=Gt(t),r=e.length;s<r;s++)o[e[s]]=rt.css(t,e[s],!1,i);return o}return void 0!==n?rt.style(t,e,n):rt.css(t,e)},t,e,arguments.length>1)}}),rt.Tween=I,(I.prototype={constructor:I,init:function(t,e,n,i,r,o){this.elem=t,this.prop=n,this.easing=r||rt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=o||(rt.cssNumber[n]?"":"px")},cur:function(){var t=I.propHooks[this.prop];return t&&t.get?t.get(this):I.propHooks._default.get(this)},run:function(t){var e,n=I.propHooks[this.prop];return this.options.duration?this.pos=e=rt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):I.propHooks._default.set(this),this}}).init.prototype=I.prototype,(I.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=rt.css(t.elem,t.prop,""))&&"auto"!==e?e:0},set:function(t){rt.fx.step[t.prop]?rt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[rt.cssProps[t.prop]]&&!rt.cssHooks[t.prop]?t.elem[t.prop]=t.now:rt.style(t.elem,t.prop,t.now+t.unit)}}}).scrollTop=I.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},rt.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},rt.fx=I.prototype.init,rt.fx.step={};var ne,ie,re=/^(?:toggle|show|hide)$/,oe=/queueHooks$/;rt.Animation=rt.extend(L,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return d(n.elem,t,At.exec(e),n),n}]},tweener:function(t,e){rt.isFunction(t)?(e=t,t=["*"]):t=t.match(yt);for(var n,i=0,r=t.length;i<r;i++)n=t[i],L.tweeners[n]=L.tweeners[n]||[],L.tweeners[n].unshift(e)},prefilters:[function(t,e,n){var i,r,o,s,a,l,c,u,h="width"in e||"height"in e,f=this,d={},g=t.style,m=t.nodeType&&Dt(t),v=$t.get(t,"fxshow");n.queue||(null==(s=rt._queueHooks(t,"fx")).unqueued&&(s.unqueued=0,a=s.empty.fire,s.empty.fire=function(){s.unqueued||a()}),s.unqueued++,f.always(function(){f.always(function(){s.unqueued--,rt.queue(t,"fx").length||s.empty.fire()})}));for(i in e)if(r=e[i],re.test(r)){if(delete e[i],o=o||"toggle"===r,r===(m?"hide":"show")){if("show"!==r||!v||void 0===v[i])continue;m=!0}d[i]=v&&v[i]||rt.style(t,i)}if((l=!rt.isEmptyObject(e))||!rt.isEmptyObject(d)){h&&1===t.nodeType&&(n.overflow=[g.overflow,g.overflowX,g.overflowY],null==(c=v&&v.display)&&(c=$t.get(t,"display")),"none"===(u=rt.css(t,"display"))&&(c?u=c:(p([t],!0),c=t.style.display||c,u=rt.css(t,"display"),p([t]))),("inline"===u||"inline-block"===u&&null!=c)&&"none"===rt.css(t,"float")&&(l||(f.done(function(){g.display=c}),null==c&&(u=g.display,c="none"===u?"":u)),g.display="inline-block")),n.overflow&&(g.overflow="hidden",f.always(function(){g.overflow=n.overflow[0],g.overflowX=n.overflow[1],g.overflowY=n.overflow[2]})),l=!1;for(i in d)l||(v?"hidden"in v&&(m=v.hidden):v=$t.access(t,"fxshow",{display:c}),o&&(v.hidden=!m),m&&p([t],!0),f.done(function(){m||p([t]),$t.remove(t,"fxshow");for(i in d)rt.style(t,i,d[i])})),l=P(m?v[i]:0,i,f),i in v||(v[i]=l.start,m&&(l.end=l.start,l.start=0))}}],prefilter:function(t,e){e?L.prefilters.unshift(t):L.prefilters.push(t)}}),rt.speed=function(t,e,n){var i=t&&"object"==typeof t?rt.extend({},t):{complete:n||!n&&e||rt.isFunction(t)&&t,duration:t,easing:n&&e||e&&!rt.isFunction(e)&&e};return rt.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in rt.fx.speeds?i.duration=rt.fx.speeds[i.duration]:i.duration=rt.fx.speeds._default),null!=i.queue&&!0!==i.queue||(i.queue="fx"),i.old=i.complete,i.complete=function(){rt.isFunction(i.old)&&i.old.call(this),i.queue&&rt.dequeue(this,i.queue)},i},rt.fn.extend({fadeTo:function(t,e,n,i){return this.filter(Dt).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(t,e,n,i){var r=rt.isEmptyObject(t),o=rt.speed(e,n,i),s=function(){var e=L(this,rt.extend({},t),o);(r||$t.get(this,"finish"))&&e.stop(!0)};return s.finish=s,r||!1===o.queue?this.each(s):this.queue(o.queue,s)},stop:function(t,e,n){var i=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&!1!==t&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",o=rt.timers,s=$t.get(this);if(r)s[r]&&s[r].stop&&i(s[r]);else for(r in s)s[r]&&s[r].stop&&oe.test(r)&&i(s[r]);for(r=o.length;r--;)o[r].elem!==this||null!=t&&o[r].queue!==t||(o[r].anim.stop(n),e=!1,o.splice(r,1));!e&&n||rt.dequeue(this,t)})},finish:function(t){return!1!==t&&(t=t||"fx"),this.each(function(){var e,n=$t.get(this),i=n[t+"queue"],r=n[t+"queueHooks"],o=rt.timers,s=i?i.length:0;for(n.finish=!0,rt.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<s;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete n.finish})}}),rt.each(["toggle","show","hide"],function(t,e){var n=rt.fn[e];rt.fn[e]=function(t,i,r){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(H(e,!0),t,i,r)}}),rt.each({slideDown:H("show"),slideUp:H("hide"),slideToggle:H("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){rt.fn[t]=function(t,n,i){return this.animate(e,t,n,i)}}),rt.timers=[],rt.fx.tick=function(){var t,e=0,n=rt.timers;for(ne=rt.now();e<n.length;e++)(t=n[e])()||n[e]!==t||n.splice(e--,1);n.length||rt.fx.stop(),ne=void 0},rt.fx.timer=function(t){rt.timers.push(t),rt.fx.start()},rt.fx.interval=13,rt.fx.start=function(){ie||(ie=!0,j())},rt.fx.stop=function(){ie=null},rt.fx.speeds={slow:600,fast:200,_default:400},rt.fn.delay=function(e,n){return e=rt.fx?rt.fx.speeds[e]||e:e,n=n||"fx",this.queue(n,function(n,i){var r=t.setTimeout(n,e);i.stop=function(){t.clearTimeout(r)}})},function(){var t=U.createElement("input"),e=U.createElement("select").appendChild(U.createElement("option"));t.type="checkbox",nt.checkOn=""!==t.value,nt.optSelected=e.selected,(t=U.createElement("input")).value="t",t.type="radio",nt.radioValue="t"===t.value}();var se,ae=rt.expr.attrHandle;rt.fn.extend({attr:function(t,e){return xt(this,rt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){rt.removeAttr(this,t)})}}),rt.extend({attr:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return void 0===t.getAttribute?rt.prop(t,e,n):(1===o&&rt.isXMLDoc(t)||(r=rt.attrHooks[e.toLowerCase()]||(rt.expr.match.bool.test(e)?se:void 0)),void 0!==n?null===n?void rt.removeAttr(t,e):r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:(t.setAttribute(e,n+""),n):r&&"get"in r&&null!==(i=r.get(t,e))?i:null==(i=rt.find.attr(t,e))?void 0:i)},attrHooks:{type:{set:function(t,e){if(!nt.radioValue&&"radio"===e&&r(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i=0,r=e&&e.match(yt);if(r&&1===t.nodeType)for(;n=r[i++];)t.removeAttribute(n)}}),se={set:function(t,e,n){return!1===e?rt.removeAttr(t,n):t.setAttribute(n,n),n}},rt.each(rt.expr.match.bool.source.match(/\w+/g),function(t,e){var n=ae[e]||rt.find.attr;ae[e]=function(t,e,i){var r,o,s=e.toLowerCase();return i||(o=ae[s],ae[s]=r,r=null!=n(t,e,i)?s:null,ae[s]=o),r}});var le=/^(?:input|select|textarea|button)$/i,ce=/^(?:a|area)$/i;rt.fn.extend({prop:function(t,e){return xt(this,rt.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[rt.propFix[t]||t]})}}),rt.extend({prop:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&rt.isXMLDoc(t)||(e=rt.propFix[e]||e,r=rt.propHooks[e]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:t[e]=n:r&&"get"in r&&null!==(i=r.get(t,e))?i:t[e]},propHooks:{tabIndex:{get:function(t){var e=rt.find.attr(t,"tabindex");return e?parseInt(e,10):le.test(t.nodeName)||ce.test(t.nodeName)&&t.href?0:-1}}},propFix:{for:"htmlFor",class:"className"}}),nt.optSelected||(rt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),rt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){rt.propFix[this.toLowerCase()]=this}),rt.fn.extend({addClass:function(t){var e,n,i,r,o,s,a,l=0;if(rt.isFunction(t))return this.each(function(e){rt(this).addClass(t.call(this,e,B(this)))});if("string"==typeof t&&t)for(e=t.match(yt)||[];n=this[l++];)if(r=B(n),i=1===n.nodeType&&" "+M(r)+" "){for(s=0;o=e[s++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");r!==(a=M(i))&&n.setAttribute("class",a)}return this},removeClass:function(t){var e,n,i,r,o,s,a,l=0;if(rt.isFunction(t))return this.each(function(e){rt(this).removeClass(t.call(this,e,B(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(yt)||[];n=this[l++];)if(r=B(n),i=1===n.nodeType&&" "+M(r)+" "){for(s=0;o=e[s++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");r!==(a=M(i))&&n.setAttribute("class",a)}return this},toggleClass:function(t,e){var n=typeof t;return"boolean"==typeof e&&"string"===n?e?this.addClass(t):this.removeClass(t):rt.isFunction(t)?this.each(function(n){rt(this).toggleClass(t.call(this,n,B(this),e),e)}):this.each(function(){var e,i,r,o;if("string"===n)for(i=0,r=rt(this),o=t.match(yt)||[];e=o[i++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==n||((e=B(this))&&$t.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||!1===t?"":$t.get(this,"__className__")||""))})},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&(" "+M(B(n))+" ").indexOf(e)>-1)return!0;return!1}});var ue=/\r/g;rt.fn.extend({val:function(t){var e,n,i,r=this[0];return arguments.length?(i=rt.isFunction(t),this.each(function(n){var r;1===this.nodeType&&(null==(r=i?t.call(this,n,rt(this).val()):t)?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=rt.map(r,function(t){return null==t?"":t+""})),(e=rt.valHooks[this.type]||rt.valHooks[this.nodeName.toLowerCase()])&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=rt.valHooks[r.type]||rt.valHooks[r.nodeName.toLowerCase()])&&"get"in e&&void 0!==(n=e.get(r,"value"))?n:"string"==typeof(n=r.value)?n.replace(ue,""):null==n?"":n:void 0}}),rt.extend({valHooks:{option:{get:function(t){var e=rt.find.attr(t,"value");return null!=e?e:M(rt.text(t))}},select:{get:function(t){var e,n,i,o=t.options,s=t.selectedIndex,a="select-one"===t.type,l=a?null:[],c=a?s+1:o.length;for(i=s<0?c:a?s:0;i<c;i++)if(((n=o[i]).selected||i===s)&&!n.disabled&&(!n.parentNode.disabled||!r(n.parentNode,"optgroup"))){if(e=rt(n).val(),a)return e;l.push(e)}return l},set:function(t,e){for(var n,i,r=t.options,o=rt.makeArray(e),s=r.length;s--;)i=r[s],(i.selected=rt.inArray(rt.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(t.selectedIndex=-1),o}}}}),rt.each(["radio","checkbox"],function(){rt.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=rt.inArray(rt(t).val(),e)>-1}},nt.checkOn||(rt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var he=/^(?:focusinfocus|focusoutblur)$/;rt.extend(rt.event,{trigger:function(e,n,i,r){var o,s,a,l,c,u,h,f=[i||U],d=Z.call(e,"type")?e.type:e,p=Z.call(e,"namespace")?e.namespace.split("."):[];if(s=a=i=i||U,3!==i.nodeType&&8!==i.nodeType&&!he.test(d+rt.event.triggered)&&(d.indexOf(".")>-1&&(p=d.split("."),d=p.shift(),p.sort()),c=d.indexOf(":")<0&&"on"+d,e=e[rt.expando]?e:new rt.Event(d,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),n=null==n?[e]:rt.makeArray(n,[e]),h=rt.event.special[d]||{},r||!h.trigger||!1!==h.trigger.apply(i,n))){if(!r&&!h.noBubble&&!rt.isWindow(i)){for(l=h.delegateType||d,he.test(l+d)||(s=s.parentNode);s;s=s.parentNode)f.push(s),a=s;a===(i.ownerDocument||U)&&f.push(a.defaultView||a.parentWindow||t)}for(o=0;(s=f[o++])&&!e.isPropagationStopped();)e.type=o>1?l:h.bindType||d,(u=($t.get(s,"events")||{})[e.type]&&$t.get(s,"handle"))&&u.apply(s,n),(u=c&&s[c])&&u.apply&&Tt(s)&&(e.result=u.apply(s,n),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||h._default&&!1!==h._default.apply(f.pop(),n)||!Tt(i)||c&&rt.isFunction(i[d])&&!rt.isWindow(i)&&((a=i[c])&&(i[c]=null),rt.event.triggered=d,i[d](),rt.event.triggered=void 0,a&&(i[c]=a)),e.result}},simulate:function(t,e,n){var i=rt.extend(new rt.Event,n,{type:t,isSimulated:!0});rt.event.trigger(i,null,e)}}),rt.fn.extend({trigger:function(t,e){return this.each(function(){rt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];if(n)return rt.event.trigger(t,e,n,!0)}}),rt.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){rt.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}),rt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),nt.focusin="onfocusin"in t,nt.focusin||rt.each({focus:"focusin",blur:"focusout"},function(t,e){var n=function(t){rt.event.simulate(e,t.target,rt.event.fix(t))};rt.event.special[e]={setup:function(){var i=this.ownerDocument||this,r=$t.access(i,e);r||i.addEventListener(t,n,!0),$t.access(i,e,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=$t.access(i,e)-1;r?$t.access(i,e,r):(i.removeEventListener(t,n,!0),$t.remove(i,e))}}});var fe=t.location,de=rt.now(),pe=/\?/;rt.parseXML=function(e){var n;if(!e||"string"!=typeof e)return null;try{n=(new t.DOMParser).parseFromString(e,"text/xml")}catch(t){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||rt.error("Invalid XML: "+e),n};var ge=/\[\]$/,me=/\r?\n/g,ve=/^(?:submit|button|image|reset|file)$/i,ye=/^(?:input|select|textarea|keygen)/i;rt.param=function(t,e){var n,i=[],r=function(t,e){var n=rt.isFunction(e)?e():e;i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(t)||t.jquery&&!rt.isPlainObject(t))rt.each(t,function(){r(this.name,this.value)});else for(n in t)q(n,t[n],e,r);return i.join("&")},rt.fn.extend({serialize:function(){return rt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=rt.prop(this,"elements");return t?rt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!rt(this).is(":disabled")&&ye.test(this.nodeName)&&!ve.test(t)&&(this.checked||!jt.test(t))}).map(function(t,e){var n=rt(this).val();return null==n?null:Array.isArray(n)?rt.map(n,function(t){return{name:e.name,value:t.replace(me,"\r\n")}}):{name:e.name,value:n.replace(me,"\r\n")}}).get()}});var be=/%20/g,we=/#.*$/,xe=/([?&])_=[^&]*/,Te=/^(.*?):[ \t]*([^\r\n]*)$/gm,$e=/^(?:GET|HEAD)$/,Ce=/^\/\//,ke={},Ee={},Se="*/".concat("*"),Ae=U.createElement("a");Ae.href=fe.href,rt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:fe.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(fe.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Se,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":rt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?W(W(t,rt.ajaxSettings),e):W(rt.ajaxSettings,t)},ajaxPrefilter:F(ke),ajaxTransport:F(Ee),ajax:function(e,n){function i(e,n,i,a){var c,f,d,w,x,T=n;u||(u=!0,l&&t.clearTimeout(l),r=void 0,s=a||"",$.readyState=e>0?4:0,c=e>=200&&e<300||304===e,i&&(w=function(t,e,n){for(var i,r,o,s,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=t.mimeType||e.getResponseHeader("Content-Type"));if(i)for(r in a)if(a[r]&&a[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||t.converters[r+" "+l[0]]){o=r;break}s||(s=r)}o=o||s}if(o)return o!==l[0]&&l.unshift(o),n[o]}(p,$,i)),w=function(t,e,n,i){var r,o,s,a,l,c={},u=t.dataTypes.slice();if(u[1])for(s in t.converters)c[s.toLowerCase()]=t.converters[s];for(o=u.shift();o;)if(t.responseFields[o]&&(n[t.responseFields[o]]=e),!l&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=u.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(!(s=c[l+" "+o]||c["* "+o]))for(r in c)if((a=r.split(" "))[1]===o&&(s=c[l+" "+a[0]]||c["* "+a[0]])){!0===s?s=c[r]:!0!==c[r]&&(o=a[0],u.unshift(a[1]));break}if(!0!==s)if(s&&t.throws)e=s(e);else try{e=s(e)}catch(t){return{state:"parsererror",error:s?t:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}(p,w,$,c),c?(p.ifModified&&((x=$.getResponseHeader("Last-Modified"))&&(rt.lastModified[o]=x),(x=$.getResponseHeader("etag"))&&(rt.etag[o]=x)),204===e||"HEAD"===p.type?T="nocontent":304===e?T="notmodified":(T=w.state,f=w.data,d=w.error,c=!d)):(d=T,!e&&T||(T="error",e<0&&(e=0))),$.status=e,$.statusText=(n||T)+"",c?v.resolveWith(g,[f,T,$]):v.rejectWith(g,[$,T,d]),$.statusCode(b),b=void 0,h&&m.trigger(c?"ajaxSuccess":"ajaxError",[$,p,c?f:d]),y.fireWith(g,[$,T]),h&&(m.trigger("ajaxComplete",[$,p]),--rt.active||rt.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=void 0),n=n||{};var r,o,s,a,l,c,u,h,f,d,p=rt.ajaxSetup({},n),g=p.context||p,m=p.context&&(g.nodeType||g.jquery)?rt(g):rt.event,v=rt.Deferred(),y=rt.Callbacks("once memory"),b=p.statusCode||{},w={},x={},T="canceled",$={readyState:0,getResponseHeader:function(t){var e;if(u){if(!a)for(a={};e=Te.exec(s);)a[e[1].toLowerCase()]=e[2];e=a[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return u?s:null},setRequestHeader:function(t,e){return null==u&&(t=x[t.toLowerCase()]=x[t.toLowerCase()]||t,w[t]=e),this},overrideMimeType:function(t){return null==u&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(u)$.always(t[$.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||T;return r&&r.abort(e),i(0,e),this}};if(v.promise($),p.url=((e||p.url||fe.href)+"").replace(Ce,fe.protocol+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(yt)||[""],null==p.crossDomain){c=U.createElement("a");try{c.href=p.url,c.href=c.href,p.crossDomain=Ae.protocol+"//"+Ae.host!=c.protocol+"//"+c.host}catch(t){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=rt.param(p.data,p.traditional)),R(ke,p,n,$),u)return $;(h=rt.event&&p.global)&&0==rt.active++&&rt.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!$e.test(p.type),o=p.url.replace(we,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(be,"+")):(d=p.url.slice(o.length),p.data&&(o+=(pe.test(o)?"&":"?")+p.data,delete p.data),!1===p.cache&&(o=o.replace(xe,"$1"),d=(pe.test(o)?"&":"?")+"_="+de+++d),p.url=o+d),p.ifModified&&(rt.lastModified[o]&&$.setRequestHeader("If-Modified-Since",rt.lastModified[o]),rt.etag[o]&&$.setRequestHeader("If-None-Match",rt.etag[o])),(p.data&&p.hasContent&&!1!==p.contentType||n.contentType)&&$.setRequestHeader("Content-Type",p.contentType),$.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Se+"; q=0.01":""):p.accepts["*"]);for(f in p.headers)$.setRequestHeader(f,p.headers[f]);if(p.beforeSend&&(!1===p.beforeSend.call(g,$,p)||u))return $.abort();if(T="abort",y.add(p.complete),$.done(p.success),$.fail(p.error),r=R(Ee,p,n,$)){if($.readyState=1,h&&m.trigger("ajaxSend",[$,p]),u)return $;p.async&&p.timeout>0&&(l=t.setTimeout(function(){$.abort("timeout")},p.timeout));try{u=!1,r.send(w,i)}catch(t){if(u)throw t;i(-1,t)}}else i(-1,"No Transport");return $},getJSON:function(t,e,n){return rt.get(t,e,n,"json")},getScript:function(t,e){return rt.get(t,void 0,e,"script")}}),rt.each(["get","post"],function(t,e){rt[e]=function(t,n,i,r){return rt.isFunction(n)&&(r=r||i,i=n,n=void 0),rt.ajax(rt.extend({url:t,type:e,dataType:r,data:n,success:i},rt.isPlainObject(t)&&t))}}),rt._evalUrl=function(t){return rt.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,throws:!0})},rt.fn.extend({wrapAll:function(t){var e;return this[0]&&(rt.isFunction(t)&&(t=t.call(this[0])),e=rt(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return rt.isFunction(t)?this.each(function(e){rt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=rt(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)})},wrap:function(t){var e=rt.isFunction(t);return this.each(function(n){rt(this).wrapAll(e?t.call(this,n):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){rt(this).replaceWith(this.childNodes)}),this}}),rt.expr.pseudos.hidden=function(t){return!rt.expr.pseudos.visible(t)},rt.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},rt.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(t){}};var Ne={0:200,1223:204},De=rt.ajaxSettings.xhr();nt.cors=!!De&&"withCredentials"in De,nt.ajax=De=!!De,rt.ajaxTransport(function(e){var n,i;if(nt.cors||De&&!e.crossDomain)return{send:function(r,o){var s,a=e.xhr();if(a.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(s in e.xhrFields)a[s]=e.xhrFields[s];e.mimeType&&a.overrideMimeType&&a.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(s in r)a.setRequestHeader(s,r[s]);n=function(t){return function(){n&&(n=i=a.onload=a.onerror=a.onabort=a.onreadystatechange=null,"abort"===t?a.abort():"error"===t?"number"!=typeof a.status?o(0,"error"):o(a.status,a.statusText):o(Ne[a.status]||a.status,a.statusText,"text"!==(a.responseType||"text")||"string"!=typeof a.responseText?{binary:a.response}:{text:a.responseText},a.getAllResponseHeaders()))}},a.onload=n(),i=a.onerror=n("error"),void 0!==a.onabort?a.onabort=i:a.onreadystatechange=function(){4===a.readyState&&t.setTimeout(function(){n&&i()})},n=n("abort");try{a.send(e.hasContent&&e.data||null)}catch(t){if(n)throw t}},abort:function(){n&&n()}}}),rt.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),rt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return rt.globalEval(t),t}}}),rt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),rt.ajaxTransport("script",function(t){if(t.crossDomain){var e,n;return{send:function(i,r){e=rt("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&r("error"===t.type?404:200,t.type)}),U.head.appendChild(e[0])},abort:function(){n&&n()}}}});var _e=[],Ie=/(=)\?(?=&|$)|\?\?/;rt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=_e.pop()||rt.expando+"_"+de++;return this[t]=!0,t}}),rt.ajaxPrefilter("json jsonp",function(e,n,i){var r,o,s,a=!1!==e.jsonp&&(Ie.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Ie.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=rt.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Ie,"$1"+r):!1!==e.jsonp&&(e.url+=(pe.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return s||rt.error(r+" was not called"),s[0]},e.dataTypes[0]="json",o=t[r],t[r]=function(){s=arguments},i.always(function(){void 0===o?rt(t).removeProp(r):t[r]=o,e[r]&&(e.jsonpCallback=n.jsonpCallback,_e.push(r)),s&&rt.isFunction(o)&&o(s[0]),s=o=void 0}),"script"}),nt.createHTMLDocument=function(){var t=U.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),rt.parseHTML=function(t,e,n){if("string"!=typeof t)return[];"boolean"==typeof e&&(n=e,e=!1);var i,r,o;return e||(nt.createHTMLDocument?(e=U.implementation.createHTMLDocument(""),i=e.createElement("base"),i.href=U.location.href,e.head.appendChild(i)):e=U),r=ft.exec(t),o=!n&&[],r?[e.createElement(r[1])]:(r=v([t],e,o),o&&o.length&&rt(o).remove(),rt.merge([],r.childNodes))},rt.fn.load=function(t,e,n){var i,r,o,s=this,a=t.indexOf(" ");return a>-1&&(i=M(t.slice(a)),t=t.slice(0,a)),rt.isFunction(e)?(n=e,e=void 0):e&&"object"==typeof e&&(r="POST"),s.length>0&&rt.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){o=arguments,s.html(i?rt("<div>").append(rt.parseHTML(t)).find(i):t)}).always(n&&function(t,e){s.each(function(){n.apply(this,o||[t.responseText,e,t])})}),this},rt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){rt.fn[e]=function(t){return this.on(e,t)}}),rt.expr.pseudos.animated=function(t){return rt.grep(rt.timers,function(e){return t===e.elem}).length},rt.offset={setOffset:function(t,e,n){var i,r,o,s,a,l,c=rt.css(t,"position"),u=rt(t),h={};"static"===c&&(t.style.position="relative"),a=u.offset(),o=rt.css(t,"top"),l=rt.css(t,"left"),("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1?(i=u.position(),s=i.top,r=i.left):(s=parseFloat(o)||0,r=parseFloat(l)||0),rt.isFunction(e)&&(e=e.call(t,n,rt.extend({},a))),null!=e.top&&(h.top=e.top-a.top+s),null!=e.left&&(h.left=e.left-a.left+r),"using"in e?e.using.call(t,h):u.css(h)}},rt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){rt.offset.setOffset(this,t,e)});var e,n,i,r,o=this[0];return o?o.getClientRects().length?(i=o.getBoundingClientRect(),e=o.ownerDocument,n=e.documentElement,r=e.defaultView,{top:i.top+r.pageYOffset-n.clientTop,left:i.left+r.pageXOffset-n.clientLeft}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n=this[0],i={top:0,left:0};return"fixed"===rt.css(n,"position")?e=n.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),r(t[0],"html")||(i=t.offset()),i={top:i.top+rt.css(t[0],"borderTopWidth",!0),left:i.left+rt.css(t[0],"borderLeftWidth",!0)}),{top:e.top-i.top-rt.css(n,"marginTop",!0),left:e.left-i.left-rt.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===rt.css(t,"position");)t=t.offsetParent;return t||Mt})}}),rt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var n="pageYOffset"===e;rt.fn[t]=function(i){return xt(this,function(t,i,r){var o;return rt.isWindow(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===r?o?o[e]:t[i]:void(o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):t[i]=r)},t,i,arguments.length)}}),rt.each(["top","left"],function(t,e){rt.cssHooks[e]=S(nt.pixelPosition,function(t,n){if(n)return n=E(t,e),Xt.test(n)?rt(t).position()[e]+"px":n})}),rt.each({Height:"height",Width:"width"},function(t,e){rt.each({padding:"inner"+t,content:e,"":"outer"+t},function(n,i){rt.fn[i]=function(r,o){var s=arguments.length&&(n||"boolean"!=typeof r),a=n||(!0===r||!0===o?"margin":"border");return xt(this,function(e,n,r){var o;return rt.isWindow(e)?0===i.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===r?rt.css(e,n,a):rt.style(e,n,r,a)},e,s?r:void 0,s)}})}),rt.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)}}),rt.holdReady=function(t){t?rt.readyWait++:rt.ready(!0)},rt.isArray=Array.isArray,rt.parseJSON=JSON.parse,rt.nodeName=r,"function"==typeof define&&define.amd&&define("jquery",[],function(){return rt});var je=t.jQuery,Oe=t.$;return rt.noConflict=function(e){return t.$===rt&&(t.$=Oe),e&&t.jQuery===rt&&(t.jQuery=je),rt},e||(t.jQuery=t.$=rt),rt}),function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e():"function"==typeof define&&define.amd?define("uikit",e):t.ncUIkit=e()}(this,function(){"use strict";function t(t){this.state=Ne,this.value=void 0,this.deferred=[];var e=this;try{t(function(t){e.resolve(t)},function(t){e.reject(t)})}catch(t){e.reject(t)}}function e(t,e){return function(n){var i=arguments.length;return i?i>1?t.apply(e,arguments):t.call(e,n):t.call(e)}}function n(t,e){return He.call(t,e)}function i(t){return t.replace(Le,function(t,e){return e?e.toUpperCase():""})}function r(t){return t.replace(Me,"$1-$2").toLowerCase()}function o(t){return t.replace(Be,s)}function s(t,e){return e?e.toUpperCase():""}function a(t){return t.length?s(0,t.charAt(0))+t.slice(1):""}function l(t,e){return Fe.call(t,e)}function c(t,e){return Re.call(t,e)}function u(t,e){return t&&(v(t)?ze:Ue).call(t,e)}function h(t){return"function"==typeof t}function f(t){return null!==t&&"object"==typeof t}function d(t){return f(t)&&Object.getPrototypeOf(t)===Object.prototype}function p(t){return f(t)&&t===t.window}function g(t){return f(t)&&9===t.nodeType}function m(t){return"boolean"==typeof t}function v(t){return"string"==typeof t}function y(t){return"number"==typeof t}function b(t){return y(t)||v(t)&&!isNaN(t-parseFloat(t))}function w(t){return void 0===t}function x(t){return m(t)?t:"true"===t||"1"===t||""===t||"false"!==t&&"0"!==t&&t}function T(t){var e=Number(t);return!isNaN(e)&&e}function C(t){return parseFloat(t)||0}function k(t){return Ve(t)?t:v(t)?t.split(",").map(function(t){return b(t)?T(t):x(t.trim())}):[t]}function E(t){if(v(t))if("@"===t[0]){var e="media-"+t.substr(1);t=Ye[e]||(Ye[e]=C(At(e)))}else if(isNaN(t))return t;return!(!t||isNaN(t))&&"(min-width: "+t+"px)"}function S(t,e,n){return t===Boolean?x(e):t===Number?T(e):"query"===t?B(e,n):"list"===t?k(e):"media"===t?E(e):t?t(e):e}function A(t){return t?c(t,"ms")?C(t):1e3*C(t):0}function N(t,e,n){return t.replace(new RegExp(e+"|"+n,"mg"),function(t){return t===e?n:e})}function D(t,e){for(var n in t)if(!1===e.call(t[n],t[n],n))break}function _(t,e,n){return void 0===e&&(e=0),void 0===n&&(n=1),Math.min(Math.max(t,e),n)}function I(){}function j(t,e){return t.left<=e.right&&e.left<=t.right&&t.top<=e.bottom&&e.top<=t.bottom}function O(t,e){return j({top:t.y,bottom:t.y,left:t.x,right:t.x},e)}function H(t,e){return new Pe(function(n,i){var r=Xe({data:null,method:"GET",headers:{},xhr:new XMLHttpRequest,beforeSend:I,responseType:""},e),o=r.xhr;r.beforeSend(r);for(var s in r)if(s in o)try{o[s]=r[s]}catch(t){}o.open(r.method.toUpperCase(),t);for(var a in r.headers)o.setRequestHeader(a,r.headers[a]);Bt(o,"load",function(){0===o.status||o.status>=200&&o.status<300||304===o.status?n(o):i(Xe(Error(o.statusText),{xhr:o,status:o.status}))}),Bt(o,"error",function(){return i(Xe(Error("Network Error"),{xhr:o}))}),Bt(o,"timeout",function(){return i(Xe(Error("Network Timeout"),{xhr:o}))}),o.send(r.data)})}function P(t,e){return v(t)?M(t)?Q($t(t)):function(t,e){return Q(F(t,e,"querySelector"))}(t,e):Q(t)}function L(t,e){return v(t)?M(t)?K($t(t)):function(t,e){return K(F(t,e,"querySelectorAll"))}(t,e):K(t)}function M(t){return"<"===t[0]||t.match(/^\s*</)}function B(t,e){return P(t,z(t)?e:nn)}function q(t,e){return L(t,z(t)?e:nn)}function F(t,e,n){if(void 0===e&&(e=nn),!t||!v(t))return null;var i;z(t=t.replace(Qe,"$1 *"))&&(i=[],t=t.split(",").map(function(t,n){var r=e;if("!"===(t=t.trim())[0]){var o=t.substr(1).trim().split(" ");r=V(e.parentNode,o[0]),t=o.slice(1).join(" ")}return r?(r.id||(r.id="nc-"+Date.now()+n,i.push(function(){return et(r,"id")})),"#"+r.id+" "+t):null}).filter(Boolean).join(","),e=nn);try{return e[n](t)}catch(t){return null}finally{i&&i.forEach(function(t){return t()})}}function R(t,e){return L(t).filter(function(t){return U(t,e)})}function W(t,e){return v(e)?U(t,e)||V(t,e):t===e||Q(e).contains(Q(t))}function z(t){return v(t)&&t.match(Je)}function U(t,e){return K(t).some(function(t){return Ze.call(t,e)})}function V(t,e){return l(e,">")&&(e=e.slice(1)),G(t)?t.parentNode&&tn.call(t,e):K(t).map(function(t){return t.parentNode&&tn.call(t,e)}).filter(Boolean)}function Y(t,e){for(var n=[],i=Q(t).parentNode;i&&1===i.nodeType;)U(i,e)&&n.push(i),i=i.parentNode;return n}function X(t){return f(t)&&!!t.jquery}function G(t){return t instanceof Node||f(t)&&1===t.nodeType}function J(t){return t instanceof NodeList||t instanceof HTMLCollection}function Q(t){return G(t)||p(t)||g(t)?t:J(t)||X(t)?t[0]:Ve(t)?Q(t[0]):null}function K(t){return G(t)?[t]:J(t)?Ge.slice.call(t):Ve(t)?t.map(Q).filter(Boolean):X(t)?t.toArray():[]}function Z(t,e,n){if(f(e))for(var i in e)Z(t,i,e[i]);else{if(w(n))return(t=Q(t))&&t.getAttribute(e);K(t).forEach(function(t){h(n)&&(n=n.call(t,Z(t,e))),null===n?et(t,e):t.setAttribute(e,n)})}}function tt(t,e){return K(t).some(function(t){return t.hasAttribute(e)})}function et(t,e){t=K(t),e.split(" ").forEach(function(e){return t.forEach(function(t){return t.removeAttribute(e)})})}function nt(t,e,n,i){Z(t,e,function(t){return t?t.replace(n,i):t})}function it(t,e){for(var n=0,i=[e,"data-"+e];n<i.length;n++)if(tt(t,i[n]))return Z(t,i[n])}function rt(){return"complete"===nn.readyState||"loading"!==nn.readyState&&!rn.doScroll}function ot(t){if(rt())t();else var e=function(){n(),i(),t()},n=Bt(nn,"DOMContentLoaded",e),i=Bt(en,"load",e)}function st(t,e,n,i){return void 0===n&&(n=400),void 0===i&&(i="linear"),Pe.all(K(t).map(function(t){return new Pe(function(r,o){for(var s in e){var a=kt(t,s);""===a&&kt(t,s,a)}var l=setTimeout(function(){return Rt(t,jn)},n);Ft(t,jn+" "+sn,function(e){var n=e.type;clearTimeout(l),_t(t,"nc-transition"),kt(t,"transition",""),n===sn?o():r()},!1,function(e){var n=e.target;return t===n}),Dt(t,"nc-transition"),kt(t,Xe({transition:"all "+n+"ms "+i},e))})}))}function at(t,e,n,i,r){var o=arguments;return void 0===n&&(n=200),Pe.all(K(t).map(function(t){return new Pe(function(s,a){function c(){kt(t,"animationDuration",""),It(t,cn+"\\S*")}if(Ot(t,un))Cn(function(){return Pe.resolve().then(function(){return at.apply(null,o).then(s,a)})});else{var u=e+" "+cn+(r?"leave":"enter");l(e,cn)&&(i&&(u+=" "+cn+i),r&&(u+=" "+cn+"reverse")),c(),Ft(t,(Hn||"animationend")+" "+ln,function(e){var n=!1;e.type===ln?(a(),c()):(s(),Pe.resolve().then(function(){n=!0,c()})),Cn(function(){n||(Dt(t,un),Cn(function(){return _t(t,un)}))})},!1,function(e){var n=e.target;return t===n}),kt(t,"animationDuration",n+"ms"),Dt(t,u),Hn||Cn(function(){return fn.cancel(t)})}})}))}function lt(t,e,n){return void 0===e&&(e=0),void 0===n&&(n=0),j(Q(t).getBoundingClientRect(),{top:e,left:n,bottom:e+Vn(en),right:n+Yn(en)})}function ct(t,e,n){void 0===n&&(n=0);var i=(e=K(e)).length;return(t=(b(t)?T(t):"next"===t?n+1:"previous"===t?n-1:Ct(e,t))%i)<0?t+i:t}function ut(t){return dn[Q(t).tagName.toLowerCase()]}function ht(t){return K(t).some(function(t){return t.offsetHeight})}function ft(t){return K(t).some(function(t){return U(t,gn)})}function dt(t){return t=Q(t),t.innerHTML="",t}function pt(t,e){return t=Q(t),w(e)?t.innerHTML:gt(t.hasChildNodes()?dt(t):t,e)}function gt(t,e){return t=Q(t),yt(e,function(e){return t.appendChild(e)})}function mt(t,e){return t=Q(t),yt(e,function(e){return t.parentNode.insertBefore(e,t)})}function vt(t,e){return t=Q(t),yt(e,function(e){return t.nextSibling?mt(t.nextSibling,e):gt(t.parentNode,e)})}function yt(t,e){return"length"in(t=v(t)?$t(t):t)?K(t).map(e):e(t)}function bt(t){K(t).map(function(t){return t.parentNode&&t.parentNode.removeChild(t)})}function wt(t,e){for(e=Q(mt(t,e));e.firstChild;)e=e.firstChild;return gt(e,t),e}function xt(t,e){return K(K(t).map(function(t){return t.hasChildNodes?wt(K(t.childNodes),e):gt(t,e)}))}function Tt(t){K(t).map(function(t){return t.parentNode}).filter(function(t,e,n){return n.indexOf(t)===e}).forEach(function(t){mt(t,t.childNodes),bt(t)})}function $t(t){var e;if(e=vn.exec(t))return nn.createElement(e[1]);var n=nn.createElement("div");return mn.test(t)?n.insertAdjacentHTML("beforeend",t.trim()):n.textContent=t,n.childNodes.length>1?K(n.childNodes):n.firstChild}function Ct(t,e){return e?K(t).indexOf(Q(e)):K((t=Q(t))&&t.parentNode.children).indexOf(t)}function kt(t,e,n){return K(t).map(function(t){if(v(e)){if(e=Nt(e),w(n))return St(t,e);n||0===n?t.style[e]=b(n)&&!yn[e]?n+"px":n:t.style.removeProperty(e)}else{if(Ve(e)){var i=Et(t);return e.reduce(function(t,e){return t[e]=Nt(i[e]),t},{})}f(e)&&D(e,function(e,n){return kt(t,n,e)})}return t})[0]}function Et(t,e){return(t=Q(t)).ownerDocument.defaultView.getComputedStyle(t,e)}function St(t,e,n){return Et(t,n)[e]}function At(t){if(!(t in bn)){var e=gt(rn,nn.createElement("div"));Dt(e,"var-"+t);try{bn[t]=St(e,"content",":before").replace(/^["'](.*)["']$/,"$1"),bn[t]=JSON.parse(bn[t])}catch(t){}rn.removeChild(e)}return bn[t]}function Nt(t){var e=wn[t];return e||(e=wn[t]=function(t){if((t=r(t))in Tn)return t;for(var e,n=xn.length;n--;)if((e="-"+xn[n]+t)in Tn)return e}(t)||t),e}function Dt(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];Pt(t,e,"add")}function _t(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];Pt(t,e,"remove")}function It(t,e){nt(t,"class",new RegExp("(^|\\s)"+e+"(?!\\S)","g"),"")}function jt(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];e[0]&&_t(t,e[0]),e[1]&&Dt(t,e[1])}function Ot(t,e){return Ie&&K(t).some(function(t){return t.classList.contains(e)})}function Ht(t){for(var e=[],n=arguments.length-1;n-- >0;)e[n]=arguments[n+1];if(Ie&&e.length){var i=v((e=Lt(e))[e.length-1])?void 0:e.pop();K(t).forEach(function(t){for(var n=t.classList,r=0;r<e.length;r++)Oe?n.toggle(e[r],i):n[(w(i)?!n.contains(e[r]):i)?"add":"remove"](e[r])})}}function Pt(t,e,n){e=Lt(e).filter(function(t){return t}),Ie&&e.length&&K(t).forEach(function(t){var i=t.classList;je?i[n].apply(i,e):e.forEach(function(t){return i[n](t)})})}function Lt(t){return t.reduce(function(t,e){return t.push.apply(t,v(e)&&u(e," ")?e.trim().split(" "):[e]),t},[])}function Mt(t,e){var n,r=i(t),o=i(e).toLowerCase(),s=i(e),a=nn.body||rn,l=(n={},n[t]=o,n["Webkit"+r]="webkit"+s,n["Moz"+r]=o,n["o"+r]="o"+s+" o"+o,n);for(t in l)if(void 0!==a.style[t])return l[t]}function Bt(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];var n=zt(t),i=n[0],r=n[1],o=n[2],s=n[3],a=n[4];return i=Vt(i),o&&(s=function(t,e,n){var i=this;return function(r){var o=r.target,s=">"===e[0]?L(e,t).filter(function(t){return W(o,t)})[0]:V(o,e);s&&(r.delegate=t,r.current=s,n.call(i,r))}}(i,o,s)),s.length>1&&(s=function(t){return function(e){return Ve(e.detail)?t.apply(t,[e].concat(e.detail)):t(e)}}(s)),r.split(" ").forEach(function(t){return i.addEventListener(t,s,a)}),function(){return qt(i,r,s,a)}}function qt(t,e,n,i){void 0===i&&(i=!1),e.split(" ").forEach(function(e){return Vt(t).removeEventListener(e,n,i)})}function Ft(){for(var t=[],e=arguments.length;e--;)t[e]=arguments[e];var n=zt(t),i=n[0],r=n[1],o=n[2],s=n[3],a=n[4],l=n[5],c=Bt(i,r,o,function(t){var e=!l||l(t);e&&(c(),s(t,e))},a);return c}function Rt(t,e,n){return Yt(t).reduce(function(t,i){return t&&i.dispatchEvent(Wt(e,!0,!0,n))},!0)}function Wt(t,e,n,i){if(void 0===e&&(e=!0),void 0===n&&(n=!1),v(t)){var r=nn.createEvent("CustomEvent");r.initCustomEvent(t,e,n,i),t=r}return t}function zt(t){return v(t[0])&&(t[0]=P(t[0])),h(t[2])&&t.splice(2,0,!1),t}function Ut(t){return"EventTarget"in en?t instanceof EventTarget:"addEventListener"in t}function Vt(t){return Ut(t)?t:Q(t)}function Yt(t){return Ut(t)?[t]:Ve(t)?t.map(Vt).filter(Boolean):K(t)}function Xt(){Pn.scheduled||(Pn.scheduled=!0,Cn(Pn.flush.bind(Pn)))}function Gt(t){for(var e;e=t.shift();)e()}function Jt(t,e){var n=t.indexOf(e);return!!~n&&!!t.splice(n,1)}function Qt(){}function Kt(t,e){return(e.y-t.y)/(e.x-t.x)}function Zt(t,e){function i(n){o[n]=(Ln[n]||Mn)(t[n],e[n])}var r,o={};if(e.mixins)for(var s=0,a=e.mixins.length;s<a;s++)t=Zt(t,e.mixins[s]);for(r in t)i(r);for(r in e)n(t,r)||i(r);return o}function te(t,e){try{t.contentWindow.postMessage(JSON.stringify(Xe({event:"command"},e)),"*")}catch(t){}}function ee(t,e,n,i,r,o,s,a){n=ce(n),i=ce(i);var l={element:n,target:i};if(!t||!e)return l;var c=ie(t),h=ie(e),f=h;return le(f,n,c,-1),le(f,i,h,1),r=ue(r,c.width,c.height),o=ue(o,h.width,h.height),r.x+=o.x,r.y+=o.y,f.left+=r.x,f.top+=r.y,a=ie(a||ae(t)),s&&D(Un,function(t,e){function o(t,n){var i=f[p]+t+n-2*r[d];if(i>=a[p]&&i+c[e]<=a[g])return f[p]=i,["element","target"].forEach(function(n){l[n][d]=t?l[n][d]===Un[e][1]?Un[e][2]:Un[e][1]:l[n][d]}),!0}var d=t[0],p=t[1],g=t[2];if(!0===s||u(s,d)){var m=n[d]===p?-c[e]:n[d]===g?c[e]:0,v=i[d]===p?h[e]:i[d]===g?-h[e]:0;if(f[p]<a[p]||f[p]+c[e]>a[g]){var y=c[e]/2,b="center"===i[d]?-h[e]/2:0;"center"===n[d]&&(o(y,b)||o(-y,-b))||o(m,v)}}}),ne(t,f),l}function ne(t,e){if(t=Q(t),!e)return ie(t);var n=ne(t),i=kt(t,"position");["left","top"].forEach(function(r){if(r in e){var o=kt(t,r);t.style[r]=e[r]-n[r]+C("absolute"===i&&"auto"===o?re(t)[r]:o)+"px"}})}function ie(t){var e=ae(t=Q(t)),n=e.pageYOffset,i=e.pageXOffset;if(p(t)){var r=t.innerHeight,o=t.innerWidth;return{top:n,left:i,height:r,width:o,bottom:n+r,right:i+o}}var s=!1;ht(t)||(s=t.style.display,t.style.display="block");var a=t.getBoundingClientRect();return!1!==s&&(t.style.display=s),{height:a.height,width:a.width,top:a.top+n,left:a.left+i,bottom:a.bottom+n,right:a.right+i}}function re(t){var e=function(t){for(var e=Q(t).offsetParent;e&&"static"===kt(e,"position");)e=e.offsetParent;return e||de(t)}(t=Q(t)),n=e===de(t)?{top:0,left:0}:ne(e);return["top","left"].reduce(function(i,r){var o=a(r);return i[r]-=n[r]+(C(kt(t,"margin"+o))||0)+(C(kt(e,"border"+o+"Width"))||0),i},ne(t))}function oe(t){var e=a(t);return function(n,i){if(n=Q(n),w(i)){if(p(n))return n["inner"+e];if(g(n)){var r=n.documentElement;return Math.max(r.offsetHeight,r.scrollHeight)}return i=kt(n,t),i="auto"===i?n["offset"+e]:C(i)||0,se(t,n,i)}kt(n,t,i||0===i?se(t,n,i)+"px":"")}}function se(t,e,n){return"border-box"===kt(e,"boxSizing")?Un[t].slice(1).map(a).reduce(function(t,n){return t-C(kt(e,"padding"+n))-C(kt(e,"border"+n+"Width"))},n):n}function ae(t){return p(t)?t:fe(t).defaultView}function le(t,e,n,i){D(Un,function(r,o){var s=r[0],a=r[1],l=r[2];e[s]===l?t[a]+=n[o]*i:"center"===e[s]&&(t[a]+=n[o]*i/2)})}function ce(t){var e=/left|center|right/,n=/top|center|bottom/;return 1===(t=(t||"").split(" ")).length&&(t=e.test(t[0])?t.concat(["center"]):n.test(t[0])?["center"].concat(t):["center","center"]),{x:e.test(t[0])?t[0]:"center",y:n.test(t[1])?t[1]:"center"}}function ue(t,e,n){var i=(t||"").split(" "),r=i[0],o=i[1];return{x:r?C(r)*(c(r,"%")?e/100:1):0,y:o?C(o)*(c(o,"%")?n/100:1):0}}function he(t){switch(t){case"left":return"right";case"right":return"left";case"top":return"bottom";case"bottom":return"top";default:return t}}function fe(t){return Q(t).ownerDocument}function de(t){return fe(t).documentElement}function pe(){Fn&&clearTimeout(Fn),Rn&&clearTimeout(Rn),Wn&&clearTimeout(Wn),Fn=Rn=Wn=null,Xn={}}function ge(t){return Gn||"touch"===t.pointerType}function me(t){var e=t.touches,n=t.changedTouches,i=e&&e[0]||n&&n[0]||t;return{x:i.pageX,y:i.pageY}}function ve(t){if(!ve.installed){var e=t.util,n=e.$,i=e.doc,r=e.empty,o=e.html;t.component("countdown",{mixins:[t.mixin.class],attrs:!0,props:{date:String,clsWrapper:String},defaults:{date:"",clsWrapper:".nc-countdown-%unit%"},computed:{date:function(t){var e=t.date;return Date.parse(e)},days:function(t,e){var i=t.clsWrapper;return n(i.replace("%unit%","days"),e)},hours:function(t,e){var i=t.clsWrapper;return n(i.replace("%unit%","hours"),e)},minutes:function(t,e){var i=t.clsWrapper;return n(i.replace("%unit%","minutes"),e)},seconds:function(t,e){var i=t.clsWrapper;return n(i.replace("%unit%","seconds"),e)},units:function(){var t=this;return["days","hours","minutes","seconds"].filter(function(e){return t[e]})}},connected:function(){this.start()},disconnected:function(){var t=this;this.stop(),this.units.forEach(function(e){return r(t[e])})},events:[{name:"visibilitychange",el:i,handler:function(){i.hidden?this.stop():this.start()}}],update:{write:function(){var t=this,e=function(t){var e=t-Date.now();return{total:e,seconds:e/1e3%60,minutes:e/1e3/60%60,hours:e/1e3/60/60%24,days:e/1e3/60/60/24}}(this.date);e.total<=0&&(this.stop(),e.days=e.hours=e.minutes=e.seconds=0),this.units.forEach(function(n){var i=String(Math.floor(e[n]));i=i.length<2?"0"+i:i;var r=t[n];r.textContent!==i&&((i=i.split("")).length!==r.children.length&&o(r,i.map(function(){return"<span></span>"}).join("")),i.forEach(function(t,e){return r.children[e].textContent=t}))})}},methods:{start:function(){var t=this;this.stop(),this.date&&this.units.length&&(this.$emit(),this.timer=setInterval(function(){return t.$emit()},1e3))},stop:function(){this.timer&&(clearInterval(this.timer),this.timer=null)}}})}}function ye(t){if(!ye.installed){var e=t.util,n=e.$$,i=e.addClass,r=e.css,o=e.scrolledOver,s=e.toFloat,a=e.toNodes;t.component("grid-parallax",t.components.grid.extend({props:{target:String,translate:Number},defaults:{target:!1,translate:150},computed:{translate:function(t){var e=t.translate;return Math.abs(e)},items:function(t,e){var i=t.target;return i?n(i,e):a(e.children)}},init:function(){i(this.$el,"nc-grid")},disconnected:function(){this.reset(),r(this.$el,"marginBottom","")},update:[{read:function(){this.columns=this.rows&&this.rows[0]&&this.rows[0].length||0,this.rows=this.rows&&this.rows.map(function(t){return function(t,e){return t.sort(function(t,n){return t[e]>n[e]?1:n[e]>t[e]?-1:0})}(t,"offsetLeft")})},write:function(){r(this.$el,"marginBottom",this.columns>1?this.translate+s(r(r(this.$el,"marginBottom",""),"marginBottom")):"")},events:["load","resize"]},{read:function(){this.scrolled=o(this.$el)*this.translate},write:function(){var t=this;if(!this.rows||1===this.columns||!this.scrolled)return this.reset();this.rows.forEach(function(e){return e.forEach(function(e,n){return r(e,"transform","translateY("+(n%2?t.scrolled:t.scrolled/8)+"px)")})})},events:["scroll","load","resize"]}],methods:{reset:function(){r(this.items,"transform","")}}})),t.component("grid-parallax").options.update.unshift({read:function(){this.reset()},events:["load","resize"]})}}function be(t){return void 0===t&&(t=0),"translate("+t+(t?"%":"")+", 0)"}function we(t){return"scale3d("+t+", "+t+", 1)"}function xe(t){function e(t,e,i,r,o,s){var a=t.percent,l=t.translate,c=(0,t.show)(o);return{animation:t,dir:o,current:i,next:r,show:function(t,a,l){var u=this;void 0===a&&(a=0);var h=l?"linear":e;return t-=Math.round(t*a),this.translate(a),n(r,"itemin",{percent:a,duration:t,ease:h,dir:o}),i&&n(i,"itemout",{percent:1-a,duration:t,ease:h,dir:o}),S.all([_.start(r,c[1],t,h),i&&_.start(i,c[0],t,h)]).then(function(){u.reset(),s()},w)},stop:function(){return _.stop([r,i])},cancel:function(){_.cancel([r,i])},reset:function(){for(var t in c[0])u([r,i],t,"")},forward:function(t){var e=this.percent();_.cancel([r,i]),this.show(t,e,!0)},translate:function(t){var e=l(t,o);u(r,e[1]),i&&u(i,e[0]),n(r,"itemtranslatein",{percent:t,dir:o}),i&&n(i,"itemtranslateout",{percent:1-t,dir:o})},percent:function(){return a(i,r,o)}}}function n(t,e,n){I(t,c(e,!1,!1,n))}function i(t){return~~t}if(!xe.installed){var r=t.util,o=r.$$,s=r.$,a=r.addClass,l=r.assign,c=r.createEvent,u=r.css,h=r.data,f=r.doc,d=r.endsWith,p=r.fastdom,g=r.getIndex,m=r.getPos,v=r.hasClass,y=r.index,b=r.isTouch,w=r.noop,x=r.off,T=r.on,$=r.pointerDown,C=r.pointerMove,k=r.pointerUp,E=r.preventClick,S=r.Promise,A=r.removeClass,N=r.toggleClass,D=r.toNodes,_=r.Transition,I=r.trigger,j=r.win,O=Math.abs;t.mixin.slideshow={attrs:!0,props:{autoplay:Boolean,autoplayInterval:Number,pauseOnHover:Boolean,animation:String,easing:String,velocity:Number},defaults:{autoplay:!1,autoplayInterval:7e3,pauseOnHover:!0,animation:"slide",easing:"ease",velocity:1,index:0,stack:[],threshold:10,percent:0,clsActive:"nc-active",clsActivated:"nc-transition-active",initialAnimation:!1,Animations:ai(t)},computed:{list:function(t,e){var n=t.selList;return s(n,e)},slides:function(){return D(this.list.children)},animation:function(t){var e=t.animation,n=t.Animations;return l(e in n?n[e]:n.slide,{name:e})},duration:function(t,e){var n=t.velocity;return function(t){return.5*t+300}(e.offsetWidth/n)}},init:function(){var t=this;["start","move","end"].forEach(function(e){var n=t[e];t[e]=function(e){var i=m(e).x;t.prevPos=i!==t.pos?t.pos:t.prevPos,t.pos=i,n(e)}})},connected:function(){this.startAutoplay()},disconnected:function(){this.stopAutoplay()},update:[{read:function(){delete this._computeds.duration},events:["load","resize"]}],events:[{name:"click",delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(t){t.preventDefault(),t.current.blur(),this.show(h(t.current,this.attrItem))}},{name:$,delegate:function(){return this.selList+" > *"},handler:function(t){!b(t)&&function(t){return!t.children.length&&t.childNodes.length}(t.target)||this.start(t)}},{name:"visibilitychange",el:f,handler:function(){f.hidden?this.stopAutoplay():this.startAutoplay()}},{name:$,handler:"stopAutoplay"},{name:"mouseenter",filter:function(){return this.autoplay},handler:function(){this.isHovering=!0}},{name:"mouseleave",filter:function(){return this.autoplay},handler:function(){this.isHovering=!1}},{name:"beforeitemshow",self:!0,delegate:function(){return this.selList+" > *"},handler:function(t){var e=t.target;a(e,this.clsActive)}},{name:"itemshown",self:!0,delegate:function(){return this.selList+" > *"},handler:function(t){var e=t.target;a(e,this.clsActivated)}},{name:"itemshow itemhide",self:!0,delegate:function(){return this.selList+" > *"},handler:function(t){var e=t.type,n=t.target;N(o("["+this.attrItem+'="'+y(n)+'"],[data-'+this.attrItem+'="'+y(n)+'"]',this.$el),this.clsActive,d(e,"show"))}},{name:"itemhidden",self:!0,delegate:function(){return this.selList+" > *"},handler:function(t){var e=t.target;A(e,this.clsActive),A(e,this.clsActivated)}},{name:"itemshow itemhide itemshown itemhidden",self:!0,delegate:function(){return this.selList+" > *"},handler:function(e){var n=e.target;t.update(null,n)}},{name:"dragstart",handler:function(t){t.preventDefault()}}],methods:{start:function(t){if(!(t.button&&0!==t.button||this.slides.length<2||this._animation&&this._animation.animation!==this.animation)){var e=0;if(this.stack.length){var n=this._animation,i=n.dir,r=n.percent,o=n.cancel,s=n.translate;e=r()*i,this.percent=O(e)*-i,this.stack.splice(0,this.stack.length),o(),s(O(e)),this.index=this.getIndex(this.index-i),this.dragging=!0}this.unbindMove=T(f,C,this.move,{capture:!0,passive:!1}),T(j,"scroll",this.unbindMove),T(f,k,this.end,!0),this.drag=this.pos+this.$el.offsetWidth*e}},move:function(n){var r=this,o=this.pos-this.drag;if(!(this.prevPos===this.pos||!this.dragging&&O(o)<this.threshold)){n.cancelable&&n.preventDefault(),this.dragging=!0;var s=o/this.$el.offsetWidth;if(this.percent!==s){var a=this.getIndex(this.index-i(this.percent)),l=this.getIndex(this.index-i(s)),c=this.slides[l],u=s<0?1:-1,h=g(s<0?"next":"previous",this.slides,l),f=this.slides[h];this.slides.forEach(function(t,e){return N(t,r.clsActive,e===l||e===h)}),this._animation&&this._animation.reset(),l!==a&&(I(this.slides[a],"itemhide",[this]),I(c,"itemshow",[this])),this._animation=new e(this.animation,this.easing,c,f,u,w),this._animation.translate(O(s%1)),this.percent=s,t.update(null,c),t.update(null,f)}}},end:function(){if(x(j,"scroll",this.unbindMove),this.unbindMove(),x(f,k,this.end,!0),this.dragging){var t=this.percent;this.percent=O(this.percent)%1,this.index=this.getIndex(this.index-i(t)),(this.percent<.1||t<0==this.pos>this.prevPos)&&(this.index=this.getIndex(t>0?"previous":"next"),this.percent=1-this.percent,t*=-1),this._animation&&this._animation.reset(),this.show(t>0?"previous":"next",!0),E()}this.drag=this.dragging=this.percent=null},show:function(t,e){var n=this;if(void 0===e&&(e=!1),e||!this.drag)if(this.stack[e?"unshift":"push"](t),!e&&this.stack.length>1)2===this.stack.length&&this._animation.forward(250);else{var i=this.index,r=this.getIndex(t),o=v(this.slides,"nc-active")&&this.slides[i],s=this.slides[r];if(o!==s){o&&I(o,"beforeitemhide",[this]),I(s,"beforeitemshow",[this]),this.index=r;var a=function(){o&&I(o,"itemhidden",[n]),I(s,"itemshown",[n]),p.mutate(function(){n.stack.shift(),n.stack.length?n.show(n.stack.shift(),!0):n._animation=null})};(o||this.initialAnimation)&&this._show(o?this.animation:this.Animations[this.initialAnimation],e?"cubic-bezier(0.165, 0.840, 0.440, 1.000)":this.easing,o,s,function(t,e){return"next"===t?1:"previous"===t?-1:t<e?-1:1}(t,i),this.stack.length>1,a),o&&I(o,"itemhide",[this]),I(s,"itemshow",[this]),o||this.initialAnimation||a(),o&&p.flush()}else this.stack[e?"shift":"pop"]()}},_show:function(t,n,i,r,o,s,a){this._animation=new e(t,n,i,r,o,a),this._animation.show(i===r?300:s?150:this.duration,this.percent,s)},getIndex:function(t){return void 0===t&&(t=this.index),g(t,this.slides,this.index)},startAutoplay:function(){var t=this;this.stopAutoplay(),this.autoplay&&(this.interval=setInterval(function(){t.isHovering&&t.pauseOnHover||t.stack.length||t.show("next")},this.autoplayInterval))},stopAutoplay:function(){this.interval&&clearInterval(this.interval)}}}}}function Te(t){function e(t,e,n,i){return'<iframe src="'+t+'" width="'+e+'" height="'+n+'" style="max-width: 100%; box-sizing: border-box;" frameborder="0" allowfullscreen nc-video="autoplay: '+i+'" nc-responsive></iframe>'}if(!Te.installed){t.use(xe);var n=t.mixin,i=t.util,r=i.$,o=i.$$,s=i.addClass,a=i.ajax,l=i.append,c=i.assign,u=i.attr,h=i.css,f=i.doc,d=i.docEl,p=i.data,g=i.getImage,m=i.html,v=i.index,y=i.on,b=i.pointerDown,w=i.pointerMove,x=i.removeClass,T=i.Transition,$=i.trigger;t.component("lightbox",{attrs:!0,props:{animation:String,toggle:String,autoplay:Boolean,autoplayInterval:Number,videoAutoplay:Boolean},defaults:{animation:void 0,toggle:"a",autoplay:0,videoAutoplay:!1},computed:{toggles:function(t,e){var n=this,i=t.toggle,r=o(i,e);return this._changed=!this._toggles||r.length!==this._toggles.length||r.some(function(t,e){return t!==n._toggles[e]}),this._toggles=r}},disconnected:function(){this.panel&&(this.panel.$destroy(!0),this.panel=null)},events:[{name:"click",delegate:function(){return this.toggle+":not(.nc-disabled)"},handler:function(t){t.preventDefault(),t.current.blur(),this.show(v(this.toggles,t.current))}}],update:function(){this.panel&&this.animation&&(this.panel.$props.animation=this.animation,this.panel.$emit()),this.toggles.length&&this._changed&&this.panel&&(this.panel.$destroy(!0),this._init())},methods:{_init:function(){return this.panel=this.panel||t.lightboxPanel(c({},this.$props,{items:this.toggles.reduce(function(t,e){return t.push(["href","caption","type","poster"].reduce(function(t,n){return t["href"===n?"source":n]=p(e,n),t},{})),t},[])}))},show:function(t){return this.panel||this._init(),this.panel.show(t)},hide:function(){return this.panel&&this.panel.hide()}}}),t.component("lightbox-panel",{mixins:[n.container,n.togglable,n.slideshow],functional:!0,defaults:{preload:1,videoAutoplay:!1,delayControls:3e3,items:[],cls:"nc-open",clsPage:"nc-lightbox-page",selList:".nc-lightbox-items",attrItem:"nc-lightbox-item",initialAnimation:"scale",pauseOnHover:!1,velocity:2,Animations:li(t),template:'<div class="nc-lightbox nc-overflow-hidden"> <ul class="nc-lightbox-items"></ul> <div class="nc-lightbox-toolbar nc-position-top nc-text-right nc-transition-slide-top nc-transition-opaque"> <button class="nc-lightbox-toolbar-icon nc-close-large" type="button" nc-close nc-toggle="!.nc-lightbox"></button> </div> <a class="nc-lightbox-button nc-position-center-left nc-position-medium nc-transition-fade" href="#" nc-slidenav-previous nc-lightbox-item="previous"></a> <a class="nc-lightbox-button nc-position-center-right nc-position-medium nc-transition-fade" href="#" nc-slidenav-next nc-lightbox-item="next"></a> <div class="nc-lightbox-toolbar nc-lightbox-caption nc-position-bottom nc-text-center nc-transition-slide-bottom nc-transition-opaque"></div> </div>'},created:function(){var t=this;this.$mount(l(this.container,this.template)),this.caption=r(".nc-lightbox-caption",this.$el),this.items.forEach(function(e,n){return l(t.list,"<li></li>")})},events:[{name:w+" "+b+" keydown",handler:"showControls"},{name:"click",self:!0,delegate:function(){return this.selList+" > *"},handler:function(t){t.preventDefault(),this.hide()}},{name:"show",self:!0,handler:function(){s(d,this.clsPage)}},{name:"shown",self:!0,handler:"showControls"},{name:"hide",self:!0,handler:"hideControls"},{name:"hidden",self:!0,handler:function(){x(d,this.clsPage)}},{name:"keyup",el:function(){return f},handler:function(t){if(this.isToggled(this.$el))switch(t.keyCode){case 27:this.hide();break;case 37:this.show("previous");break;case 39:this.show("next")}}},{name:"toggle",handler:function(t){t.preventDefault(),this.toggle()}},{name:"beforeitemshow",self:!0,delegate:function(){return this.selList+" > *"},handler:function(){this.isToggled()||this.toggleNow(this.$el,!0)}},{name:"itemshow",self:!0,delegate:function(){return this.selList+" > *"},handler:function(t){var e=this,n=t.target,i=v(n),r=this.getItem(i).caption;h(this.caption,"display",r?"":"none"),m(this.caption,r);for(var o=0;o<=this.preload;o++)e.loadItem(e.getIndex(i+o)),e.loadItem(e.getIndex(i-o))}},{name:"itemload",handler:function(t,n){var i,o=this,s=n.source,l=n.type;if(this.setItem(n,"<span nc-spinner></span>"),s)if("image"===l||s.match(/\.(jp(e)?g|png|gif|svg)$/i))g(s).then(function(t){return o.setItem(n,'<img width="'+t.width+'" height="'+t.height+'" src="'+s+'">')},function(){return o.setError(n)});else if("video"===l||s.match(/\.(mp4|webm|ogv)$/i)){var c=r("<video controls playsinline"+(n.poster?' poster="'+n.poster+'"':"")+' nc-video="autoplay: '+this.videoAutoplay+'"></video>');u(c,"src",s),y(c,"error",function(){return o.setError(n)}),y(c,"loadedmetadata",function(){u(c,{width:c.videoWidth,height:c.videoHeight}),o.setItem(n,c)})}else if("iframe"===l)this.setItem(n,'<iframe class="nc-lightbox-iframe" src="'+s+'" frameborder="0" allowfullscreen></iframe>');else if(i=s.match(/\/\/.*?youtube\.[a-z]+\/watch\?v=([^&\s]+)/)||s.match(/youtu\.be\/(.*)/)){var h=i[1],f=function(t,i){return void 0===t&&(t=640),void 0===i&&(i=450),o.setItem(n,e("//www.youtube.com/embed/"+h,t,i,o.videoAutoplay))};g("//img.youtube.com/vi/"+h+"/maxresdefault.jpg").then(function(t){var e=t.width,n=t.height;120===e&&90===n?g("//img.youtube.com/vi/"+h+"/0.jpg").then(function(t){var e=t.width,n=t.height;return f(e,n)},f):f(e,n)},f)}else(i=s.match(/(\/\/.*?)vimeo\.[a-z]+\/([0-9]+).*?/))&&a("//vimeo.com/api/oembed.json?maxwidth=1920&url="+encodeURI(s),{responseType:"json"}).then(function(t){var r=t.response,s=r.height,a=r.width;return o.setItem(n,e("//player.vimeo.com/video/"+i[2],a,s,o.videoAutoplay))})}}],methods:{toggle:function(){return this.isToggled()?this.hide():this.show()},hide:function(){this.isToggled()&&this.toggleNow(this.$el,!1),x(this.slides,this.clsActive),T.stop(this.slides),delete this.index,delete this.percent,delete this._animation},loadItem:function(t){void 0===t&&(t=this.index);var e=this.getItem(t);e.content||$(this.$el,"itemload",[e])},getItem:function(t){return void 0===t&&(t=this.index),this.items[t]||{}},setItem:function(e,n){c(e,{content:n});var i=m(this.slides[this.items.indexOf(e)],n);$(this.$el,"itemloaded",[this,i]),t.update(null,i)},setError:function(t){this.setItem(t,'<span nc-icon="icon: bolt; ratio: 2"></span>')},showControls:function(){clearTimeout(this.controlsTimer),this.controlsTimer=setTimeout(this.hideControls,this.delayControls),u(o("["+this.attrItem+"],[data-"+this.attrItem+"]",this.$el),"hidden",this.items.length<2?"":null),s(this.$el,"nc-active nc-transition-active")},hideControls:function(){x(this.$el,"nc-active nc-transition-active")}}})}}function $e(t){if(!$e.installed){var e=t.util,n=e.append,i=e.closest,r=e.css,o=e.each,s=e.pointerEnter,a=e.pointerLeave,l=e.remove,c=e.toFloat,u=e.Transition,h=e.trigger,f={};t.component("notification",{functional:!0,args:["message","status"],defaults:{message:"",status:"",timeout:5e3,group:null,pos:"top-center",clsClose:"nc-notification-close",clsMsg:"nc-notification-message"},created:function(){f[this.pos]||(f[this.pos]=n(t.container,'<div class="nc-notification nc-notification-'+this.pos+'"></div>'));var e=r(f[this.pos],"display","block");this.$mount(n(e,'<div class="'+this.clsMsg+(this.status?" "+this.clsMsg+"-"+this.status:"")+'"> <a href="#" class="'+this.clsClose+'" data-nc-close></a> <div>'+this.message+"</div> </div>"))},ready:function(){var t=this,e=c(r(this.$el,"marginBottom"));u.start(r(this.$el,{opacity:0,marginTop:-1*this.$el.offsetHeight,marginBottom:0}),{opacity:1,marginTop:0,marginBottom:e}).then(function(){t.timeout&&(t.timer=setTimeout(t.close,t.timeout))})},events:(d={click:function(t){i(t.target,'a[href="#"]')&&t.preventDefault(),this.close()}},d[s]=function(){this.timer&&clearTimeout(this.timer)},d[a]=function(){this.timeout&&(this.timer=setTimeout(this.close,this.timeout))},d),methods:{close:function(t){var e=this,n=function(){h(e.$el,"close",[e]),l(e.$el),f[e.pos].children.length||r(f[e.pos],"display","none")};this.timer&&clearTimeout(this.timer),t?n():u.start(this.$el,{opacity:0,marginTop:-1*this.$el.offsetHeight,marginBottom:0}).then(n)}}});var d;t.notification.closeAll=function(e,n){o(t.instances,function(t){"notification"!==t.$options.name||e&&e!==t.group||t.close(n)})}}}function Ce(t){function e(t,e){var n=t.length-1,i=Math.min(Math.floor(n*e),n-1),r=t.slice(i,i+2);return r.push(1===e?1:e%(1/n)*n),r}function n(t,n){var i=e(t,n),r=i[0],o=i[1],s=i[2];return(h(r)?r+Math.abs(r-o)*s*(r<o?1:-1):+o).toFixed(2)}if(!Ce.installed){var i=t.mixin,r=t.util,o=r.clamp,s=r.css,a=r.Dimensions,l=r.each,c=r.getImage,u=r.includes,h=r.isNumber,f=r.isUndefined,d=r.scrolledOver,p=r.toFloat,g=r.query,m=r.win,v=["x","y","bgx","bgy","rotate","scale","color","backgroundColor","borderColor","opacity","blur","hue","grayscale","invert","saturate","sepia","fopacity"];i.parallax={props:v.reduce(function(t,e){return t[e]="list",t},{media:"media"}),defaults:v.reduce(function(t,e){return t[e]=void 0,t},{media:!1}),computed:{props:function(t,e){var n=this;return v.reduce(function(i,r){if(f(t[r]))return i;var o,a,l,c=r.match(/color/i),h=c||"opacity"===r,d=t[r].slice(0);h&&s(e,r,""),d.length<2&&d.unshift(("scale"===r?1:h?s(e,r):0)||0);var g=u(d.join(""),"%")?"%":"px";if(c){var m=e.style.color;d=d.map(function(t){return function(t,e){return s(s(t,"color",e),"color").split(/[(),]/g).slice(1,-1).concat(1).slice(0,4).map(function(t){return p(t)})}(e,t)}),e.style.color=m}else d=d.map(p);if(r.match(/^bg/))if(s(e,"background-position-"+r[2],""),a=s(e,"backgroundPosition").split(" ")["x"===r[2]?0:1],n.covers){var v=Math.min.apply(Math,d),y=Math.max.apply(Math,d),b=d.indexOf(v)<d.indexOf(y);l=y-v,d=d.map(function(t){return t-(b?v:y)}),o=(b?-l:0)+"px"}else o=a;return i[r]={steps:d,unit:g,pos:o,bgPos:a,diff:l},i},{})},bgProps:function(){var t=this;return["bgx","bgy"].filter(function(e){return e in t.props})},covers:function(t,e){return"cover"===s(""!==e.style.backgroundSize?s(e,"backgroundSize",""):e,"backgroundSize")}},disconnected:function(){delete this._image},update:[{read:function(){var t=this;if(delete this._computeds.props,this._active=!this.media||m.matchMedia(this.media).matches,this._image&&(this._image.dimEl={width:this.$el.offsetWidth,height:this.$el.offsetHeight}),f(this._image)&&this.covers&&this.bgProps.length){var e=s(this.$el,"backgroundImage").replace(/^none|url\(["']?(.+?)["']?\)$/,"$1");e&&(this._image=!1,c(e).then(function(e){t._image={width:e.naturalWidth,height:e.naturalHeight},t.$emit()}))}},write:function(){var t=this;if(this._image)if(this._active){var e=this._image,n=e.dimEl,i=a.cover(e,n);this.bgProps.forEach(function(r){var o=t.props[r],s=o.diff,l=o.bgPos,c=o.steps,u="bgy"===r?"height":"width",h=i[u]-n[u];l.match(/%$|0px/)&&(h<s?n[u]=i[u]+s-h:h>s&&(l=parseFloat(l))&&(t.props[r].steps=c.map(function(t){return t-(h-s)/(100/l)})),i=a.cover(e,n))}),s(this.$el,{backgroundSize:i.width+"px "+i.height+"px",backgroundRepeat:"no-repeat"})}else s(this.$el,{backgroundSize:"",backgroundRepeat:""})},events:["load","resize"]}],methods:{reset:function(){var t=this;l(this.getCss(0),function(e,n){return s(t.$el,n,"")})},getCss:function(t){var i=!1,r=this.props;return Object.keys(r).reduce(function(o,s){var a=r[s],l=a.steps,c=a.unit,u=a.pos,h=n(l,t);switch(s){case"x":case"y":if(i)break;var f=["x","y"].map(function(e){return s===e?h+c:r[e]?n(r[e].steps,t)+r[e].unit:0}),d=f[0],g=f[1];i=o.transform+=" translate3d("+d+", "+g+", 0)";break;case"rotate":o.transform+=" rotate("+h+"deg)";break;case"scale":o.transform+=" scale("+h+")";break;case"bgy":case"bgx":o["background-position-"+s[2]]="calc("+u+" + "+(h+c)+")";break;case"color":case"backgroundColor":case"borderColor":var m=e(l,t),v=m[0],y=m[1],b=m[2];o[s]="rgba("+v.map(function(t,e){return t+=b*(y[e]-t),3===e?p(t):parseInt(t,10)}).join(",")+")";break;case"blur":o.filter+=" blur("+h+"px)";break;case"hue":o.filter+=" hue-rotate("+h+"deg)";break;case"fopacity":o.filter+=" opacity("+h+"%)";break;case"grayscale":case"invert":case"saturate":case"sepia":o.filter+=" "+s+"("+h+"%)";break;default:o[s]=h}return o},{transform:"",filter:""})}}},t.component("parallax",{mixins:[i.parallax],props:{target:String,viewport:Number,easing:Number},defaults:{target:!1,viewport:1,easing:1},computed:{target:function(t,e){var n=t.target;return n&&g(n,e)||e}},disconnected:function(){delete this._prev},update:[{read:function(){this._percent=function(t,e){return o(t*(1-(e-e*t)))}(d(this.target)/(this.viewport||1),this.easing)},write:function(t){"scroll"!==t.type&&delete this._prev,this._active?this._prev!==this._percent&&(s(this.$el,this.getCss(this._percent)),this._prev=this._percent):this.reset()},events:["scroll","load","resize"]}]})}}function ke(t){function e(t){return l(t,"in")}function n(t,n,i){return i/=2,e(t)?n<0?1-i:i:n<0?i:1-i}if(!ke.installed){t.use(Ce),t.use(xe);var i=t.mixin,r=t.util,o=r.closest,s=r.css,a=r.fastdom,l=r.endsWith,c=r.height,u=r.noop,h=r.Transition;t.component("slideshow",{mixins:[i.class,i.slideshow],props:{ratio:String,minHeight:Boolean,maxHeight:Boolean},defaults:{ratio:"16:9",minHeight:!1,maxHeight:!1,selList:".nc-slideshow-items",attrItem:"nc-slideshow-item",Animations:ci(t)},ready:function(){var t=this;a.mutate(function(){return t.show(t.index)})},update:{read:function(){var t=this.ratio.split(":").map(Number),e=t[0],n=t[1];this.height=n*this.$el.offsetWidth/e,this.minHeight&&(this.height=Math.max(this.minHeight,this.height)),this.maxHeight&&(this.height=Math.min(this.maxHeight,this.height))},write:function(){c(this.list,Math.floor(this.height))},events:["load","resize"]}}),t.component("slideshow-parallax",{mixins:[i.parallax],computed:{item:function(){var e=t.getComponent(o(this.$el,".nc-slideshow"),"slideshow");return e&&o(this.$el,e.selList+" > *")}},events:[{name:"itemshown",self:!0,el:function(){return this.item},handler:function(){s(this.$el,this.getCss(.5))}},{name:"itemin itemout",self:!0,el:function(){return this.item},handler:function(t){var i=t.type,r=t.detail,o=r.percent,a=r.duration,l=r.ease,c=r.dir;h.cancel(this.$el),s(this.$el,this.getCss(n(i,c,o))),h.start(this.$el,this.getCss(e(i)?.5:c>0?1:0),a,l).catch(u)}},{name:"transitioncanceled transitionend",self:!0,el:function(){return this.item},handler:function(){h.cancel(this.$el)}},{name:"itemtranslatein itemtranslateout",self:!0,el:function(){return this.item},handler:function(t){var e=t.type,i=t.detail,r=i.percent,o=i.dir;h.cancel(this.$el),s(this.$el,this.getCss(n(e,o,r)))}}]})}}function Ee(t){function e(n){return n&&(t.getComponent(n,"sortable")||e(n.parentNode))}if(!Ee.installed){var n=t.mixin,i=t.util,r=i.addClass,o=i.after,s=i.assign,a=i.append,l=i.attr,c=i.before,u=i.closest,h=i.css,f=i.doc,d=i.docEl,p=i.height,g=i.fastdom,m=i.getPos,v=i.includes,y=i.index,b=i.isInput,w=i.noop,x=i.offset,T=i.off,$=i.on,C=i.pointerDown,k=i.pointerMove,E=i.pointerUp,S=i.position,A=i.preventClick,N=i.Promise,D=i.remove,_=i.removeClass,I=i.toggleClass,j=i.toNodes,O=i.Transition,H=i.trigger,P=i.win,L=i.within;t.component("sortable",{mixins:[n.class],props:{group:String,animation:Number,threshold:Number,clsItem:String,clsPlaceholder:String,clsDrag:String,clsDragState:String,clsBase:String,clsNoDrag:String,clsEmpty:String,clsCustom:String,handle:String},defaults:{group:!1,animation:150,threshold:5,clsItem:"nc-sortable-item",clsPlaceholder:"nc-sortable-placeholder",clsDrag:"nc-sortable-drag",clsDragState:"nc-drag",clsBase:"nc-sortable",clsNoDrag:"nc-sortable-nodrag",clsEmpty:"nc-sortable-empty",clsCustom:"",handle:!1},init:function(){var t=this;["init","start","move","end"].forEach(function(e){var n=t[e];t[e]=function(e){t.scrollY=P.scrollY;var i=m(e),r=i.x,o=i.y;t.pos={x:r,y:o},n(e)}})},events:(M={},M[C]="init",M),update:{write:function(){if(this.clsEmpty&&I(this.$el,this.clsEmpty,!this.$el.children.length),this.drag){x(this.drag,{top:this.pos.y+this.origin.top,left:this.pos.x+this.origin.left});var t,e=x(this.drag).top,n=e+this.drag.offsetHeight;e>0&&e<this.scrollY?t=this.scrollY-5:n<p(f)&&n>p(P)+this.scrollY&&(t=this.scrollY+5),t&&setTimeout(function(){return P.scrollTo(P.scrollX,t)},5)}}},methods:{init:function(t){var e=t.target,n=t.button,i=t.defaultPrevented,r=j(this.$el.children).filter(function(t){return L(e,t)})[0];!r||b(t.target)||this.handle&&!L(e,this.handle)||0!==n||L(e,"."+this.clsNoDrag)||i||(t.preventDefault(),this.touched=[this],this.placeholder=r,this.origin=s({target:e,index:y(r)},this.pos),$(d,k,this.move),$(d,E,this.end),$(P,"scroll",this.scroll),this.threshold||this.start(t))},start:function(e){this.drag=a(t.container,this.placeholder.outerHTML.replace(/^<li/i,"<div").replace(/li>$/i,"div>")),h(this.drag,s({boxSizing:"border-box",width:this.placeholder.offsetWidth,height:this.placeholder.offsetHeight},h(this.placeholder,["paddingLeft","paddingRight","paddingTop","paddingBottom"]))),l(this.drag,"nc-no-boot",""),r(this.drag,this.clsDrag+" "+this.clsCustom),p(this.drag.firstElementChild,p(this.placeholder.firstElementChild));var n=x(this.placeholder),i=n.left,o=n.top;s(this.origin,{left:i-this.pos.x,top:o-this.pos.y}),r(this.placeholder,this.clsPlaceholder),r(this.$el.children,this.clsItem),r(d,this.clsDragState),H(this.$el,"start",[this,this.placeholder,this.drag]),this.move(e)},move:function(t){if(this.drag){this.$emit();var n="mousemove"===t.type?t.target:f.elementFromPoint(this.pos.x-f.body.scrollLeft,this.pos.y-f.body.scrollTop),i=e(n),r=e(this.placeholder),o=i!==r;if(i&&!L(n,this.placeholder)&&(!o||i.group&&i.group===r.group)){if(n=i.$el===n.parentNode&&n||j(i.$el.children).filter(function(t){return L(n,t)})[0],o)r.remove(this.placeholder);else if(!n)return;i.insert(this.placeholder,n),v(this.touched,i)||this.touched.push(i)}}else(Math.abs(this.pos.x-this.origin.x)>this.threshold||Math.abs(this.pos.y-this.origin.y)>this.threshold)&&this.start(t)},scroll:function(){var t=P.scrollY;t!==this.scrollY&&(this.pos.y+=t-this.scrollY,this.scrollY=t,this.$emit())},end:function(t){if(T(d,k,this.move),T(d,E,this.end),T(P,"scroll",this.scroll),this.drag){A();var n=e(this.placeholder);this===n?this.origin.index!==y(this.placeholder)&&H(this.$el,"moved",[this,this.placeholder]):(H(n.$el,"added",[n,this.placeholder]),H(this.$el,"removed",[this,this.placeholder])),H(this.$el,"stop",[this]),D(this.drag),this.drag=null;var i=this.touched.map(function(t){return t.clsPlaceholder+" "+t.clsItem}).join(" ");this.touched.forEach(function(t){return _(t.$el.children,i)}),_(d,this.clsDragState)}else"mouseup"!==t.type&&L(t.target,"a[href]")&&(location.href=u(t.target,"a[href]").href)},insert:function(t,e){var n=this;r(this.$el.children,this.clsItem);var i=function(){e?!L(t,n.$el)||function(t,e){return t.parentNode===e.parentNode&&y(t)>y(e)}(t,e)?c(e,t):o(e,t):a(n.$el,t)};this.animation?this.animate(i):i()},remove:function(t){L(t,this.$el)&&(this.animation?this.animate(function(){return D(t)}):D(t))},animate:function(t){var e=this,n=[],i=j(this.$el.children),r={position:"",width:"",height:"",pointerEvents:"",top:"",left:"",bottom:"",right:""};i.forEach(function(t){n.push(s({position:"absolute",pointerEvents:"none",width:t.offsetWidth,height:t.offsetHeight},S(t)))}),t(),i.forEach(O.cancel),h(this.$el.children,r),this.$update("update",!0),g.flush(),h(this.$el,"minHeight",p(this.$el));var o=i.map(function(t){return S(t)});N.all(i.map(function(t,i){return O.start(h(t,n[i]),o[i],e.animation)})).then(function(){h(e.$el,"minHeight",""),h(i,r),e.$update("update",!0),g.flush()},w)}}});var M}}function Se(t){if(!Se.installed){var e=t.util,n=t.mixin,i=e.append,r=e.attr,o=e.doc,s=e.fastdom,a=e.flipPosition,l=e.includes,c=e.isTouch,u=e.isVisible,h=e.matches,f=e.on,d=e.pointerDown,p=e.pointerEnter,g=e.pointerLeave,m=e.remove,v=e.within,y=[];t.component("tooltip",{attrs:!0,mixins:[n.container,n.togglable,n.position],props:{delay:Number,title:String},defaults:{pos:"top",title:"",delay:0,animation:["nc-animation-scale-up"],duration:100,cls:"nc-active",clsPos:"nc-tooltip"},connected:function(){var t=this;s.mutate(function(){return r(t.$el,{title:null,"aria-expanded":!1})})},disconnected:function(){this.hide()},methods:{show:function(){var t=this;l(y,this)||(y.forEach(function(t){return t.hide()}),y.push(this),this._unbind=f(o,"click",function(e){return!v(e.target,t.$el)&&t.hide()}),clearTimeout(this.showTimer),this.tooltip=i(this.container,'<div class="'+this.clsPos+'" aria-hidden><div class="'+this.clsPos+'-inner">'+this.title+"</div></div>"),r(this.$el,"aria-expanded",!0),this.positionAt(this.tooltip,this.$el),this.origin="y"===this.getAxis()?a(this.dir)+"-"+this.align:this.align+"-"+a(this.dir),this.showTimer=setTimeout(function(){t.toggleElement(t.tooltip,!0),t.hideTimer=setInterval(function(){u(t.$el)||t.hide()},150)},this.delay))},hide:function(){var t=y.indexOf(this);!~t||h(this.$el,"input")&&this.$el===o.activeElement||(y.splice(t,1),clearTimeout(this.showTimer),clearInterval(this.hideTimer),r(this.$el,"aria-expanded",!1),this.toggleElement(this.tooltip,!1),this.tooltip&&m(this.tooltip),this.tooltip=!1,this._unbind())}},events:(b={blur:"hide"},b["focus "+p+" "+d]=function(t){t.type===d&&c(t)||this.show()},b[g]=function(t){c(t)||this.hide()},b)});var b}}function Ae(t){function e(t,e){return e.match(new RegExp("^"+t.replace(/\//g,"\\/").replace(/\*\*/g,"(\\/[^\\/]+)*").replace(/\*/g,"[^\\/]+").replace(/((?!\\))\?/g,"$1.")+"$","i"))}function n(t){t.preventDefault(),t.stopPropagation()}if(!Ae.installed){var i=t.util,r=i.addClass,o=i.ajax,s=i.matches,a=i.noop,l=i.on,c=i.removeClass,u=i.trigger;t.component("upload",{props:{allow:String,clsDragover:String,concurrent:Number,mime:String,msgInvalidMime:String,msgInvalidName:String,multiple:Boolean,name:String,params:Object,type:String,url:String},defaults:{allow:!1,clsDragover:"nc-dragover",concurrent:1,mime:!1,msgInvalidMime:"Invalid File Type: %s",msgInvalidName:"Invalid File Name: %s",multiple:!1,name:"files[]",params:{},type:"POST",url:"",abort:a,beforeAll:a,beforeSend:a,complete:a,completeAll:a,error:a,fail:a,load:a,loadEnd:a,loadStart:a,progress:a},events:{change:function(t){s(t.target,'input[type="file"]')&&(t.preventDefault(),t.target.files&&this.upload(t.target.files),t.target.value="")},drop:function(t){n(t);var e=t.dataTransfer;e&&e.files&&(c(this.$el,this.clsDragover),this.upload(e.files))},dragenter:function(t){n(t)},dragover:function(t){n(t),r(this.$el,this.clsDragover)},dragleave:function(t){n(t),c(this.$el,this.clsDragover)}},methods:{upload:function(t){var n=this;if(t.length){u(this.$el,"upload",[t]);for(var i=0;i<t.length;i++){if(n.allow&&!e(n.allow,t[i].name))return void n.fail(n.msgInvalidName.replace(/%s/,n.allow));if(n.mime&&!e(n.mime,t[i].type))return void n.fail(n.msgInvalidMime.replace(/%s/,n.mime))}this.multiple||(t=[t[0]]),this.beforeAll(this,t);var r=function(t,e){for(var n=[],i=0;i<t.length;i+=e){for(var r=[],o=0;o<e;o++)r.push(t[i+o]);n.push(r)}return n}(t,this.concurrent),s=function(t){var e=new FormData;t.forEach(function(t){return e.append(n.name,t)});for(var i in n.params)e.append(i,n.params[i]);o(n.url,{data:e,method:n.type,beforeSend:function(t){var e=t.xhr;e.upload&&l(e.upload,"progress",n.progress),["loadStart","load","loadEnd","abort"].forEach(function(t){return l(e,t.toLowerCase(),n[t])}),n.beforeSend(t)}}).then(function(t){n.complete(t),r.length?s(r.shift()):n.completeAll(t)},function(t){return n.error(t.message)})};s(r.shift())}}}})}}var Ne=2,De="setImmediate"in window?setImmediate:setTimeout;t.reject=function(e){return new t(function(t,n){n(e)})},t.resolve=function(e){return new t(function(t,n){t(e)})},t.all=function(e){return new t(function(n,i){var r=0,o=[];0===e.length&&n(o);for(var s=0;s<e.length;s+=1)t.resolve(e[s]).then(function(t){return function(i){o[t]=i,(r+=1)===e.length&&n(o)}}(s),i)})},t.race=function(e){return new t(function(n,i){for(var r=0;r<e.length;r+=1)t.resolve(e[r]).then(n,i)})};var _e=t.prototype;_e.resolve=function(t){var e=this;if(e.state===Ne){if(t===e)throw new TypeError("Promise settled with itself.");var n=!1;try{var i=t&&t.then;if(null!==t&&f(t)&&h(i))return void i.call(t,function(t){n||e.resolve(t),n=!0},function(t){n||e.reject(t),n=!0})}catch(t){return void(n||e.reject(t))}e.state=0,e.value=t,e.notify()}},_e.reject=function(t){var e=this;if(e.state===Ne){if(t===e)throw new TypeError("Promise settled with itself.");e.state=1,e.value=t,e.notify()}},_e.notify=function(){var t=this;De(function(){if(t.state!==Ne)for(;t.deferred.length;){var e=t.deferred.shift(),n=e[0],i=e[1],r=e[2],o=e[3];try{0===t.state?r(h(n)?n.call(void 0,t.value):t.value):1===t.state&&(h(i)?r(i.call(void 0,t.value)):o(t.value))}catch(t){o(t)}}})},_e.then=function(e,n){var i=this;return new t(function(t,r){i.deferred.push([e,n,t,r]),i.notify()})},_e.catch=function(t){return this.then(void 0,t)};var Ie,je,Oe,He=Object.prototype.hasOwnProperty,Pe="Promise"in window?window.Promise:t,Le=/(?:^|[-_\/])(\w)/g,Me=/([a-z\d])([A-Z])/g,Be=/-(\w)/g,qe=String.prototype,Fe=qe.startsWith||function(t){return 0===this.lastIndexOf(t,0)},Re=qe.endsWith||function(t){return this.substr(-1*t.length)===t},We=function(t){return~this.indexOf(t)},ze=qe.includes||We,Ue=Array.prototype.includes||We,Ve=Array.isArray,Ye={},Xe=Object.assign||function(t){for(var e=[],i=arguments.length-1;i-- >0;)e[i]=arguments[i+1];t=Object(t);for(var r=0;r<e.length;r++){var o=e[r];if(null!==o)for(var s in o)n(o,s)&&(t[s]=o[s])}return t},Ge=Array.prototype,Je=/(^|,)\s*[!>+~]/,Qe=/([!>+~])(?=\s+[!>+~]|\s*$)/g,Ke=Element.prototype,Ze=Ke.matches||Ke.msMatchesSelector,tn=Ke.closest||function(t){var e=this;do{if(U(e,t))return e;e=e.parentNode}while(e&&1===e.nodeType)},en=window,nn=document,rn=nn.documentElement,on="rtl"===Z(rn,"dir"),sn="transitioncanceled",an={start:st,stop:function(t){return Rt(t,jn),Pe.resolve()},cancel:function(t){Rt(t,sn)},inProgress:function(t){return Ot(t,"nc-transition")}},ln="animationcancel",cn="nc-animation-",un="nc-cancel-animation",hn=new RegExp(cn+"(enter|leave)"),fn={in:function(t,e,n,i){return at(t,e,n,i,!1)},out:function(t,e,n,i){return at(t,e,n,i,!0)},inProgress:function(t){return hn.test(Z(t,"class"))},cancel:function(t){Rt(t,ln)}},dn={area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,menuitem:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0},pn={ratio:function(t,e,n){var i="width"===e?"height":"width";return r={},r[i]=Math.round(n*t[i]/t[e]),r[e]=n,r;var r},contain:function(t,e){var n=this;return t=Xe({},t),D(t,function(i,r){return t=t[r]>e[r]?n.ratio(t,r,e[r]):t}),t},cover:function(t,e){var n=this;return t=this.contain(t,e),D(t,function(i,r){return t=t[r]<e[r]?n.ratio(t,r,e[r]):t}),t}},gn="input,select,textarea,button",mn=/^\s*<(\w+|!)[^>]*>/,vn=/^<(\w+)\s*\/?>(?:<\/\1>)?$/,yn={"animation-iteration-count":!0,"column-count":!0,"fill-opacity":!0,"flex-grow":!0,"flex-shrink":!0,"font-weight":!0,"line-height":!0,opacity:!0,order:!0,orphans:!0,widows:!0,"z-index":!0,zoom:!0},bn={},wn={},xn=["webkit","moz","ms"],Tn=nn.createElement("div").style;!function(){var t=nn.createElement("_").classList;t&&(t.add("a","b"),t.toggle("c",!1),je=t.contains("b"),Oe=!t.contains("c"),Ie=!0),t=null}();var $n=en.MutationObserver||en.WebKitMutationObserver,Cn=en.requestAnimationFrame||function(t){return setTimeout(t,1e3/60)},kn="ontouchstart"in en,En=en.PointerEvent,Sn="ontouchstart"in en||en.DocumentTouch&&nn instanceof DocumentTouch||navigator.msPointerEnabled&&navigator.msMaxTouchPoints||navigator.pointerEnabled&&navigator.maxTouchPoints,An=Sn?"mousedown "+(kn?"touchstart":"pointerdown"):"mousedown",Nn=Sn?"mousemove "+(kn?"touchmove":"pointermove"):"mousemove",Dn=Sn?"mouseup "+(kn?"touchend":"pointerup"):"mouseup",_n=Sn&&En?"pointerenter":"mouseenter",In=Sn&&En?"pointerleave":"mouseleave",jn=Mt("transition","transition-end"),On=Mt("animation","animation-start"),Hn=Mt("animation","animation-end"),Pn={reads:[],writes:[],measure:function(t){return this.reads.push(t),Xt(),t},mutate:function(t){return this.writes.push(t),Xt(),t},clear:function(t){return Jt(this.reads,t)||Jt(this.writes,t)},flush:function(){Gt(this.reads),Gt(this.writes.splice(0,this.writes.length)),this.scheduled=!1,(this.reads.length||this.writes.length)&&Xt()}};Qt.prototype={positions:[],position:null,init:function(){var t=this;this.positions=[],this.position=null;var e=!1;this.unbind=Bt(nn,"mousemove",function(n){e||(setTimeout(function(){var i=Date.now(),r=t.positions.length;r&&i-t.positions[r-1].time>100&&t.positions.splice(0,r),t.positions.push({time:i,x:n.pageX,y:n.pageY}),t.positions.length>5&&t.positions.shift(),e=!1},5),e=!0)})},cancel:function(){this.unbind&&this.unbind()},movesTo:function(t){if(this.positions.length<2)return!1;var e=ne(t),n=this.positions[this.positions.length-1],i=this.positions[0];if(e.left<=n.x&&n.x<=e.right&&e.top<=n.y&&n.y<=e.bottom)return!1;var r=[[{x:e.left,y:e.top},{x:e.right,y:e.bottom}],[{x:e.right,y:e.top},{x:e.left,y:e.bottom}]];return e.right<=n.x||(e.left>=n.x?(r[0].reverse(),r[1].reverse()):e.bottom<=n.y?r[0].reverse():e.top>=n.y&&r[1].reverse()),!!r.reduce(function(t,e){return t+(Kt(i,e[0])<Kt(n,e[0])&&Kt(i,e[1])>Kt(n,e[1]))},0)}};var Ln={};Ln.args=Ln.created=Ln.events=Ln.init=Ln.ready=Ln.connected=Ln.disconnected=Ln.destroy=function(t,e){return t=t&&!Ve(t)?[t]:t,e?t?t.concat(e):Ve(e)?e:[e]:t},Ln.update=function(t,e){return Ln.args(t,h(e)?{read:e}:e)},Ln.props=function(t,e){return Ve(e)&&(e=e.reduce(function(t,e){return t[e]=String,t},{})),Ln.methods(t,e)},Ln.computed=Ln.defaults=Ln.methods=function(t,e){return e?t?Xe({},t,e):e:t};var Mn=function(t,e){return w(e)?t:e},Bn=0,qn=function(t){this.id=++Bn,this.el=Q(t)};qn.prototype.isVideo=function(){return this.isYoutube()||this.isVimeo()||this.isHTML5()},qn.prototype.isHTML5=function(){return"VIDEO"===this.el.tagName},qn.prototype.isIFrame=function(){return"IFRAME"===this.el.tagName},qn.prototype.isYoutube=function(){return this.isIFrame()&&!!this.el.src.match(/\/\/.*?youtube\.[a-z]+\/(watch\?v=[^&\s]+|embed)|youtu\.be\/.*/)},qn.prototype.isVimeo=function(){return this.isIFrame()&&!!this.el.src.match(/vimeo\.com\/video\/.*/)},qn.prototype.enableApi=function(){var t=this;if(this.ready)return this.ready;var e,n=this.isYoutube(),i=this.isVimeo();return n||i?this.ready=new Pe(function(r){Ft(t.el,"load",function(){if(n){var i=function(){return te(t.el,{event:"listening",id:t.id})};e=setInterval(i,100),i()}}),function(t){return new Pe(function(e){Ft(en,"message",function(t,n){return e(n)},!1,function(e){var n=e.data;if(n&&v(n)){try{n=JSON.parse(n)}catch(t){return}return n&&t(n)}})})}(function(e){return n&&e.id===t.id&&"onReady"===e.event||i&&Number(e.player_id)===t.id}).then(function(){r(),e&&clearInterval(e)}),Z(t.el,"src",t.el.src+(u(t.el.src,"?")?"&":"?")+(n?"enablejsapi=1":"api=1&player_id="+Bn))}):Pe.resolve()},qn.prototype.play=function(){var t=this;this.isVideo()&&(this.isIFrame()?this.enableApi().then(function(){return te(t.el,{func:"playVideo",method:"play"})}):this.isHTML5()&&this.el.play())},qn.prototype.pause=function(){var t=this;this.isVideo()&&(this.isIFrame()?this.enableApi().then(function(){return te(t.el,{func:"pauseVideo",method:"pause"})}):this.isHTML5()&&this.el.pause())},qn.prototype.mute=function(){var t=this;this.isVideo()&&(this.isIFrame()?this.enableApi().then(function(){return te(t.el,{func:"mute",method:"setVolume",value:0})}):this.isHTML5()&&(this.el.muted=!0,Z(this.el,"muted","")))};var Fn,Rn,Wn,zn,Un={width:["x","left","right"],height:["y","top","bottom"]},Vn=oe("height"),Yn=oe("width"),Xn={};ot(function(){Bt(nn,"click",function(){return zn=!0},!0),Bt(nn,An,function(t){var e=t.target,n=me(t),i=n.x,r=n.y,o=Date.now();Xn.el="tagName"in e?e:e.parentNode,Fn&&clearTimeout(Fn),Xn.x1=i,Xn.y1=r,Xn.last&&o-Xn.last<=250&&(Xn={}),Xn.last=o,zn=t.button>0}),Bt(nn,Nn,function(t){var e=me(t),n=e.x,i=e.y;Xn.x2=n,Xn.y2=i}),Bt(nn,Dn,function(t){var e=t.target;Xn.x2&&Math.abs(Xn.x1-Xn.x2)>30||Xn.y2&&Math.abs(Xn.y1-Xn.y2)>30?Rn=setTimeout(function(){Xn.el&&(Rt(Xn.el,"swipe"),Rt(Xn.el,"swipe"+function(t){var e=t.x1,n=t.x2,i=t.y1,r=t.y2;return Math.abs(e-n)>=Math.abs(i-r)?e-n>0?"Left":"Right":i-r>0?"Up":"Down"}(Xn))),Xn={}}):"last"in Xn?(Wn=setTimeout(function(){return Xn.el&&Rt(Xn.el,"tap")}),Xn.el&&W(e,Xn.el)&&(Fn=setTimeout(function(){Fn=null,Xn.el&&!zn&&Rt(Xn.el,"click"),Xn={}},350))):Xn={}}),Bt(nn,"touchcancel",pe),Bt(en,"scroll",pe)});var Gn=!1;Bt(nn,"touchstart",function(){return Gn=!0},!0),Bt(nn,"click",function(){Gn=!1}),Bt(nn,"touchcancel",function(){return Gn=!1},!0);var Jn=Object.freeze({bind:e,hasOwn:n,Promise:Pe,classify:i,hyphenate:r,camelize:o,ucfirst:a,startsWith:l,endsWith:c,includes:u,isArray:Ve,isFunction:h,isObject:f,isPlainObject:d,isWindow:p,isDocument:g,isBoolean:m,isString:v,isNumber:y,isNumeric:b,isUndefined:w,toBoolean:x,toNumber:T,toFloat:C,toList:k,toMedia:E,coerce:S,toMs:A,swap:N,assign:Xe,each:D,clamp:_,noop:I,intersectRect:j,pointInRect:O,ajax:H,$:P,$$:L,query:B,queryAll:q,filter:R,within:W,matches:U,closest:V,parents:Y,isJQuery:X,toNode:Q,toNodes:K,attr:Z,hasAttr:tt,removeAttr:et,filterAttr:nt,data:it,win:en,doc:nn,docEl:rn,isRtl:on,isReady:rt,ready:ot,transition:st,Transition:an,animate:at,Animation:fn,isInView:lt,scrolledOver:function(t){var e=(t=Q(t)).offsetHeight,n=function(t){var e=0;do{e+=t.offsetTop}while(t=t.offsetParent);return e}(t),i=Vn(en),r=i+Math.min(0,n-i),o=Math.max(0,i-(Vn(nn)-(n+e)));return _((r+en.pageYOffset-n)/((r+(e-(o<i?o:0)))/100)/100)},getIndex:ct,isVoidElement:ut,Dimensions:pn,preventClick:function(){var t=setTimeout(function(){return Rt(nn,"click")},0);Ft(nn,"click",function(e){e.preventDefault(),e.stopImmediatePropagation(),clearTimeout(t)},!0)},isVisible:ht,selInput:gn,isInput:ft,empty:dt,html:pt,prepend:function(t,e){return(t=Q(t)).hasChildNodes()?yt(e,function(e){return t.insertBefore(e,t.firstChild)}):gt(t,e)},append:gt,before:mt,after:vt,remove:bt,wrapAll:wt,wrapInner:xt,unwrap:Tt,fragment:$t,index:Ct,css:kt,getStyles:Et,getStyle:St,getCssVar:At,addClass:Dt,removeClass:_t,removeClasses:It,replaceClass:jt,hasClass:Ot,toggleClass:Ht,Observer:$n,requestAnimationFrame:Cn,hasTouch:Sn,pointerDown:An,pointerMove:Nn,pointerUp:Dn,pointerEnter:_n,pointerLeave:In,transitionend:jn,animationstart:On,animationend:Hn,getImage:function(t){return new Pe(function(e,n){var i=new Image;i.onerror=n,i.onload=function(){return e(i)},i.src=t})},on:Bt,off:qt,once:Ft,trigger:Rt,createEvent:Wt,toEventTargets:Yt,fastdom:Pn,MouseTracker:Qt,mergeOptions:Zt,Player:qn,positionAt:ee,offset:ne,position:re,height:Vn,width:Yn,flipPosition:he,isTouch:ge,getPos:me}),Qn=function(t){this._init(t)};Qn.util=Jn,Qn.data="__uikit__",Qn.prefix="nc-",Qn.options={},Qn.instances={},Qn.elements=[],function(t){function e(t){return new Function("return function "+i(t)+" (options) { this._init(options); }")()}function n(t,e){if(1===t.nodeType)for(e(t),t=t.firstElementChild;t;)n(t,e),t=t.nextElementSibling}function r(t,e){if(t)for(var n in t)t[n]._isReady&&t[n]._callUpdate(e)}var o=t.data;t.use=function(t){if(!t.installed)return t.call(null,this),t.installed=!0,this},t.mixin=function(e,n){n=(v(n)?t.components[n]:n)||this,(e=Zt({},e)).mixins=n.options.mixins,delete n.options.mixins,n.options=Zt(e,n.options)},t.extend=function(t){var n=this,i=e((t=t||{}).name||n.options.name||"ncUIkitComponent");return i.prototype=Object.create(n.prototype),i.prototype.constructor=i,i.options=Zt(n.options,t),i.super=n,i.extend=n.extend,i},t.update=function(e,i,s){if(void 0===s&&(s=!1),e=Wt(e||"update"),i)if(i=Q(i),s)do{r(i[o],e),i=i.parentNode}while(i);else n(i,function(t){return r(t[o],e)});else r(t.instances,e)};var s;Object.defineProperty(t,"container",{get:function(){return s||nn.body},set:function(t){s=t}})}(Qn),function(t){t.prototype._callHook=function(t){var e=this,n=this.$options[t];n&&n.forEach(function(t){return t.call(e)})},t.prototype._callReady=function(){this._isReady||(this._isReady=!0,this._callHook("ready"),this._callUpdate())},t.prototype._callConnected=function(){var e=this;this._connected||(u(t.elements,this.$options.el)||t.elements.push(this.$options.el),t.instances[this._uid]=this,this._initEvents(),this._callHook("connected"),this._connected=!0,this._initObserver(),this._isReady||ot(function(){return e._callReady()}),this._callUpdate())},t.prototype._callDisconnected=function(){if(this._connected){this._observer&&(this._observer.disconnect(),this._observer=null);var e=t.elements.indexOf(this.$options.el);~e&&t.elements.splice(e,1),delete t.instances[this._uid],this._unbindEvents(),this._callHook("disconnected"),this._connected=!1}},t.prototype._callUpdate=function(t){var e=this,n=(t=Wt(t||"update")).type,i=t.detail;"update"===n&&i&&i.mutation&&(this._computeds={});var r=this.$options.update;r&&r.forEach(function(i,r){("update"===n||u(i.events,n))&&(i.read&&!u(Pn.reads,e._frames.reads[r])&&(e._frames.reads[r]=Pn.measure(function(){i.read.call(e,t),delete e._frames.reads[r]})),i.write&&!u(Pn.writes,e._frames.writes[r])&&(e._frames.writes[r]=Pn.mutate(function(){i.write.call(e,t),delete e._frames.writes[r]})))})}}(Qn),function(t){function i(t,e){var n={},i=t.args;void 0===i&&(i=[]);var a=t.props;void 0===a&&(a={});var c,u,h=t.el;if(!a)return n;for(c in a)if(u=r(c),tt(h,u)){var f=S(a[c],Z(h,u),h);if("target"===u&&(!f||l(f,"_")))continue;n[c]=f}var d=s(it(h,e),i);for(c in d)void 0!==a[u=o(c)]&&(n[u]=S(a[u],d[c],h));return n}function s(t,e){void 0===e&&(e=[]);try{return t?l(t,"{")?JSON.parse(t):e.length&&!u(t,":")?(n={},n[e[0]]=t,n):t.split(";").reduce(function(t,e){var n=e.split(/:(.+)/),i=n[0],r=n[1];return i&&r&&(t[i.trim()]=r.trim()),t},{}):{};var n}catch(t){return{}}}function a(t,e,i){Object.defineProperty(t,e,{enumerable:!0,get:function(){var r=t._computeds,o=t.$props,s=t.$el;return n(r,e)||(r[e]=i.call(t,o,s)),r[e]},set:function(n){t._computeds[e]=n}})}function c(t,n,i){d(n)||(n={name:i,handler:n});var r=n.name,o=n.el,s=n.delegate,a=n.self,l=n.filter,u=n.handler;o=h(o)?o.call(t):o||t.$el,Ve(o)?o.forEach(function(e){return c(t,Xe({},n,{el:e}),i)}):!o||l&&!l.call(t)||(u=function(t){return function(e){return Ve(e.detail)?t.apply(t,[e].concat(e.detail)):t(e)}}(v(u)?t[u]:e(u,t)),a&&(u=function(t){return function(e){if(e.target===e.currentTarget||e.target===e.current)return t.call(null,e)}}(u)),t._events.push(Bt(o,r,s?v(s)?s:s.call(t):null,u)))}function f(t,e){return t.every(function(t){return!t||!n(t,e)})}var p=0;t.prototype.props={},t.prototype._init=function(e){e=e||{},e=this.$options=Zt(this.constructor.options,e),this.$el=null,this.$name=t.prefix+r(this.$options.name),this.$props={},this._frames={reads:{},writes:{}},this._events=[],this._uid=p++,this._initData(),this._initMethods(),this._initComputeds(),this._callHook("created"),e.el&&this.$mount(e.el)},t.prototype._initData=function(){var t=this.$options,e=t.defaults,i=t.data;void 0===i&&(i={});var r=t.args;void 0===r&&(r=[]);var o=t.props;void 0===o&&(o={});var s=t.el;r.length&&Ve(i)&&(i=i.slice(0,r.length).reduce(function(t,e,n){return d(e)?Xe(t,e):t[r[n]]=e,t},{}));for(var a in e)this.$props[a]=this[a]=n(i,a)&&!w(i[a])?S(o[a],i[a],s):Ve(e[a])?e[a].concat():e[a]},t.prototype._initMethods=function(){var t=this.$options.methods;if(t)for(var n in t)this[n]=e(t[n],this)},t.prototype._initComputeds=function(){var t=this.$options.computed;if(this._computeds={},t)for(var e in t)a(this,e,t[e])},t.prototype._initProps=function(t){var e=this;this._computeds={},Xe(this.$props,t||i(this.$options,this.$name));var n=[this.$options.computed,this.$options.methods];for(var r in e.$props)f(n,r)&&(e[r]=e.$props[r])},t.prototype._initEvents=function(){var t=this,e=this.$options.events;e&&e.forEach(function(e){if(n(e,"handler"))c(t,e);else for(var i in e)c(t,e[i],i)})},t.prototype._unbindEvents=function(){this._events.forEach(function(t){return t()}),this._events=[]},t.prototype._initObserver=function(){var t=this,e=this.$options,n=e.attrs,o=e.props,s=e.el;!this._observer&&o&&n&&$n&&(n=Ve(n)?n:Object.keys(o).map(function(t){return r(t)}),this._observer=new $n(function(){var e=i(t.$options,t.$name);n.some(function(n){return!w(e[n])&&e[n]!==t.$props[n]})&&t.$reset(e)}),this._observer.observe(s,{attributes:!0,attributeFilter:n.concat([this.$name,"data-"+this.$name])}))}}(Qn),function(t){var e=t.data;t.prototype.$mount=function(t){var n=this.$options.name;t[e]||(t[e]={}),t[e][n]||(t[e][n]=this,this.$el=this.$options.el=this.$options.el||t,this._initProps(),this._callHook("init"),W(t,rn)&&this._callConnected())},t.prototype.$emit=function(t){this._callUpdate(t)},t.prototype.$update=function(e,n){t.update(e,this.$options.el,n)},t.prototype.$reset=function(t){this._callDisconnected(),this._initProps(t),this._callConnected()},t.prototype.$destroy=function(t){void 0===t&&(t=!1);var n=this.$options,i=n.el,r=n.name;i&&this._callDisconnected(),this._callHook("destroy"),i&&i[e]&&(delete i[e][r],Object.keys(i[e]).length||delete i[e],t&&bt(this.$el))}}(Qn),function(t){var e=t.data;t.components={},t.component=function(e,n){var i=o(e);if(d(n))n.name=i,n=t.extend(n);else{if(w(n))return t.components[i];n.options.name=i}return t.components[i]=n,t[i]=function(e,n){function r(e){return t.getComponent(e,i)||new t.components[i]({el:e,data:n||{}})}for(var o=arguments.length,s=Array(o);o--;)s[o]=arguments[o];return d(e)?new t.components[i]({data:e}):t.components[i].options.functional?new t.components[i]({data:[].concat(s)}):e&&e.nodeType?r(e):L(e).map(r)[0]},t._initialized&&!n.options.functional&&Pn.measure(function(){return t[i]("[nc-"+e+"],[data-nc-"+e+"]")}),t.components[i]},t.getComponents=function(t){return t&&(t=X(t)?t[0]:t)&&t[e]||{}},t.getComponent=function(e,n){return t.getComponents(e)[n]},t.connect=function(n){var i;if(n[e])for(i in n[e])n[e][i]._callConnected();for(var r=0;r<n.attributes.length;r++)(l(i=n.attributes[r].name,"nc-")||l(i,"data-nc-"))&&(i=o(i.replace("data-nc-","").replace("nc-","")),t[i]&&t[i](n))},t.disconnect=function(t){for(var n in t[e])t[e][n]._callDisconnected()}}(Qn);var Kn,Zn,ti,ei={init:function(){Dt(this.$el,this.$name)}},ni={props:{container:Boolean},defaults:{container:!0},computed:{container:function(t){var e=t.container;return!0===e&&Qn.container||e&&$(e)||Qn.container}}},ii={props:{cls:Boolean,animation:"list",duration:Number,origin:String,transition:String,queued:Boolean},defaults:{cls:!1,animation:[!1],duration:200,origin:!1,transition:"linear",queued:!1,initProps:{overflow:"",height:"",paddingTop:"",paddingBottom:"",marginTop:"",marginBottom:""},hideProps:{overflow:"hidden",height:0,paddingTop:0,paddingBottom:0,marginTop:0,marginBottom:0}},computed:{hasAnimation:function(t){return!!t.animation[0]},hasTransition:function(t){var e=t.animation;return this.hasAnimation&&!0===e[0]}},methods:{toggleElement:function(t,e,n){var i=this;return new Pe(function(r){var o,s=function(t){return Pe.all(t.map(function(t){return i._toggleElement(t,e,n)}))},a=(t=K(t)).filter(function(t){return i.isToggled(t)}),l=t.filter(function(t){return!u(a,t)});if(i.queued&&w(n)&&w(e)&&i.hasAnimation&&!(t.length<2)){var c=nn.body,h=c.scrollTop,f=a[0],d=fn.inProgress(f)&&Ot(f,"nc-animation-leave")||an.inProgress(f)&&"0px"===f.style.height;o=s(a),d||(o=o.then(function(){var t=s(l);return c.scrollTop=h,t}))}else o=s(l.concat(a));o.then(r,I)})},toggleNow:function(t,e){var n=this;return new Pe(function(i){return Pe.all(K(t).map(function(t){return n._toggleElement(t,e,!1)})).then(i,I)})},isToggled:function(t){var e=K(t||this.$el);return this.cls?Ot(e,this.cls.split(" ")[0]):!tt(e,"hidden")},updateAria:function(t){!1===this.cls&&Z(t,"aria-hidden",!this.isToggled(t))},_toggleElement:function(t,e,n){var i=this;if(e=m(e)?e:fn.inProgress(t)?Ot(t,"nc-animation-leave"):an.inProgress(t)?"0px"===t.style.height:!this.isToggled(t),!Rt(t,"before"+(e?"show":"hide"),[this]))return Pe.reject();var r=(!1!==n&&this.hasAnimation?this.hasTransition?this._toggleHeight:this._toggleAnimation:this._toggleImmediate)(t,e);return Rt(t,e?"show":"hide",[this]),r.then(function(){Rt(t,e?"shown":"hidden",[i]),Qn.update(null,t)})},_toggle:function(t,e){this.cls?Ht(t,this.cls,u(this.cls," ")?void 0:e):Z(t,"hidden",e?null:""),L("[autofocus]",t).some(function(t){return ht(t)&&(t.focus()||!0)}),this.updateAria(t),Qn.update(null,t)},_toggleImmediate:function(t,e){return this._toggle(t,e),Pe.resolve()},_toggleHeight:function(t,e){var n,i=this,r=an.inProgress(t),o=t.hasChildNodes?C(kt(t.firstElementChild,"marginTop"))+C(kt(t.lastElementChild,"marginBottom")):0,s=ht(t)?Vn(t)+(r?0:o):0;return an.cancel(t),this.isToggled(t)||this._toggle(t,!0),Vn(t,""),Pn.flush(),n=Vn(t)+(r?0:o),Vn(t,s),(e?an.start(t,Xe({},this.initProps,{overflow:"hidden",height:n}),Math.round(this.duration*(1-s/n)),this.transition):an.start(t,this.hideProps,Math.round(this.duration*(s/n)),this.transition).then(function(){return i._toggle(t,!1)})).then(function(){return kt(t,i.initProps)})},_toggleAnimation:function(t,e){var n=this;return fn.cancel(t),e?(this._toggle(t,!0),fn.in(t,this.animation[0],this.duration,this.origin)):fn.out(t,this.animation[1]||this.animation[0],this.duration,this.origin).then(function(){return n._toggle(t,!1)})}}},ri={mixins:[ei,ni,ii],props:{clsPanel:String,selClose:String,escClose:Boolean,bgClose:Boolean,stack:Boolean},defaults:{cls:"nc-open",escClose:!0,bgClose:!0,overlay:!0,stack:!1},computed:{panel:function(t,e){return P("."+t.clsPanel,e)},transitionElement:function(){return this.panel},transitionDuration:function(){return A(kt(this.transitionElement,"transitionDuration"))}},events:[{name:"click",delegate:function(){return this.selClose},handler:function(t){t.preventDefault(),this.hide()}},{name:"toggle",handler:function(t){t.defaultPrevented||(t.preventDefault(),this.toggle())}},{name:"show",self:!0,handler:function(){Ot(rn,this.clsPage)||(this.scrollbarWidth=Yn(en)-rn.offsetWidth,kt(nn.body,"overflowY",this.scrollbarWidth&&this.overlay?"scroll":"")),Dt(rn,this.clsPage)}},{name:"hidden",self:!0,handler:function(){for(var t,e=this.prev;e;){if(e.clsPage===this.clsPage){t=!0;break}e=e.prev}t||_t(rn,this.clsPage),!this.prev&&kt(nn.body,"overflowY","")}}],methods:{toggle:function(){return this.isToggled()?this.hide():this.show()},show:function(){if(!this.isToggled()){this.container&&this.$el.parentNode!==this.container&&(gt(this.container,this.$el),this._callConnected());var t=Kn&&Kn!==this&&Kn;if(Kn=this,t){if(!this.stack)return void t.hide().then(this.show);this.prev=t}return Zn||(Zn=[Bt(rn,"click",function(t){var e=t.target,n=t.defaultPrevented;Kn&&Kn.bgClose&&!n&&!W(e,Kn.panel)&&Kn.hide()}),Bt(nn,"keydown",function(t){27===t.keyCode&&Kn&&Kn.escClose&&(t.preventDefault(),Kn.hide())})]),this.toggleNow(this.$el,!0)}},hide:function(){if(this.isToggled())return(Kn=Kn&&Kn!==this&&Kn||this.prev)||(Zn&&Zn.forEach(function(t){return t()}),Zn=null),this.toggleNow(this.$el,!1)},getActive:function(){return Kn},_toggleImmediate:function(t,e){var n=this;return new Pe(function(i){return Cn(function(){n._toggle(t,e),n.transitionDuration?Ft(n.transitionElement,jn,i,!1,function(t){return t.target===n.transitionElement}):i()})})}}},oi={props:{pos:String,offset:null,flip:Boolean,clsPos:String},defaults:{pos:"bottom-"+(on?"right":"left"),flip:!0,offset:!1,clsPos:""},computed:{pos:function(t){var e=t.pos;return(e+(u(e,"-")?"":"-center")).split("-")},dir:function(){return this.pos[0]},align:function(){return this.pos[1]}},methods:{positionAt:function(t,e,n){It(t,this.clsPos+"-(top|bottom|left|right)(-[a-z]+)?"),kt(t,{top:"",left:""});var i=T(this.offset)||0,r=this.getAxis(),o=ee(t,e,"x"===r?he(this.dir)+" "+this.align:this.align+" "+he(this.dir),"x"===r?this.dir+" "+this.align:this.align+" "+this.dir,"x"===r?""+("left"===this.dir?-1*i:i):" "+("top"===this.dir?-1*i:i),null,this.flip,n).target,s=o.x,a=o.y;this.dir="x"===r?s:a,this.align="x"===r?a:s,Ht(t,this.clsPos+"-"+this.dir+"-"+this.align,!1===this.offset)},getAxis:function(){return"top"===this.dir||"bottom"===this.dir?"y":"x"}}},si={};Qn.version="3.0.0-beta.34",function(t){t.mixin.class=ei,t.mixin.container=ni,t.mixin.modal=ri,t.mixin.position=oi,t.mixin.togglable=ii}(Qn),function(t){var e=0,n=0;Bt(en,"load resize",t.update),Bt(en,"scroll",function(n){n.dir=e<en.pageYOffset?"down":"up",e=en.pageYOffset,t.update(n),Pn.flush()}),On&&Bt(nn,On,function(t){var e=t.target;(kt(e,"animationName")||"").match(/^nc-.*(left|right)/)&&(n++,nn.body.style.overflowX="hidden",setTimeout(function(){--n||(nn.body.style.overflowX="")},A(kt(e,"animationDuration"))+100))},!0),t.use(function(t){t.component("toggle",{mixins:[t.mixin.togglable],args:"target",props:{href:String,target:null,mode:"list",media:"media"},defaults:{href:!1,target:!1,mode:"click",queued:!0,media:!1},computed:{target:function(t,e){var n=t.href,i=t.target;return(i=q(i||n,e)).length&&i||[e]}},events:[{name:_n+" "+In,filter:function(){return u(this.mode,"hover")},handler:function(t){ge(t)||this.toggle("toggle"+(t.type===_n?"show":"hide"))}},{name:"click",filter:function(){return u(this.mode,"click")||Sn},handler:function(t){if(ge(t)||u(this.mode,"click")){var e;(V(t.target,'a[href="#"], button')||(e=V(t.target,"a[href]"))&&(this.cls||!ht(this.target)||e.hash&&U(this.target,e.hash)))&&t.preventDefault(),this.toggle()}}}],update:{write:function(){if(u(this.mode,"media")&&this.media){var t=this.isToggled(this.target);(en.matchMedia(this.media).matches?!t:t)&&this.toggle()}},events:["load","resize"]},methods:{toggle:function(t){Rt(this.target,t||"toggle",[this])&&this.toggleElement(this.target)}}})}),t.use(function(t){t.component("accordion",{mixins:[ei,ii],props:{targets:String,active:null,collapsible:Boolean,multiple:Boolean,toggle:String,content:String,transition:String},defaults:{targets:"> *",active:!1,animation:[!0],collapsible:!0,multiple:!1,clsOpen:"nc-open",toggle:"> .nc-accordion-title",content:"> .nc-accordion-content",transition:"ease"},computed:{items:function(t,e){return L(t.targets,e)}},events:[{name:"click",self:!0,delegate:function(){return this.targets+" "+this.$props.toggle},handler:function(t){t.preventDefault(),this.toggle(Ct(L(this.targets+" "+this.$props.toggle,this.$el),t.current))}}],ready:function(){var t=!1!==this.active&&this.items[Number(this.active)]&&!Ot(t,this.clsOpen);t&&this.toggle(t,!1)},update:function(){var t=this;this.items.forEach(function(e){return t.toggleNow(P(t.content,e),Ot(e,t.clsOpen))});var e=!this.collapsible&&!Ot(this.items,this.clsOpen)&&this.items[0];e&&this.toggle(e,!1)},methods:{toggle:function(t,e){var n=this,i=ct(t,this.items),r=R(this.items,"."+this.clsOpen);(t=this.items[i])&&[t].concat(!this.multiple&&!u(r,t)&&r||[]).forEach(function(i){var o=i===t,s=o&&!Ot(i,n.clsOpen);if(s||!o||n.collapsible||!(r.length<2)){Ht(i,n.clsOpen,s);var a=i._wrapper?i._wrapper.firstElementChild:P(n.content,i);i._wrapper||(i._wrapper=wt(a,"<div>"),Z(i._wrapper,"hidden",s?"":null)),n._toggleImmediate(a,!0),n.toggleElement(i._wrapper,s,e).then(function(){Ot(i,n.clsOpen)===s&&(s||n._toggleImmediate(a,!1),i._wrapper=null,Tt(a))})}})}}})}),t.use(function(t){t.component("alert",{attrs:!0,mixins:[ei,ii],args:"animation",props:{close:String},defaults:{animation:[!0],selClose:".nc-alert-close",duration:150,hideProps:Xe({opacity:0},ii.defaults.hideProps)},events:[{name:"click",delegate:function(){return this.selClose},handler:function(t){t.preventDefault(),this.close()}}],methods:{close:function(){var t=this;this.toggleElement(this.$el).then(function(){return t.$destroy(!0)})}}})}),t.use(function(t){t.component("video",{props:{automute:Boolean,autoplay:Boolean},defaults:{automute:!1,autoplay:!0},ready:function(){this.player=new qn(this.$el),this.automute&&this.player.mute()},update:{write:function(){this.player&&(ht(this.$el)&&"hidden"!==kt(this.$el,"visibility")?this.autoplay&&this.player.play():this.player.pause())},events:["load"]}})}),t.use(function(t){t.component("cover",{mixins:[ei,t.components.video.options],props:{width:Number,height:Number},defaults:{automute:!0},update:{write:function(){var t=this.$el;if(ht(t)){var e=t.parentNode,n=e.offsetHeight,i=e.offsetWidth;kt(kt(t,{width:"",height:""}),pn.cover({width:this.width||t.clientWidth,height:this.height||t.clientHeight},{width:i+(i%2?1:0),height:n+(n%2?1:0)}))}},events:["load","resize"]},events:{loadedmetadata:function(){this.$emit()}}})}),t.use(function(t){var e;t.component("drop",{mixins:[oi,ii],args:"pos",props:{mode:"list",toggle:Boolean,boundary:"query",boundaryAlign:Boolean,delayShow:Number,delayHide:Number,clsDrop:String},defaults:{mode:["click","hover"],toggle:!0,boundary:en,boundaryAlign:!1,delayShow:0,delayHide:800,clsDrop:!1,hoverIdle:200,animation:["nc-animation-fade"],cls:"nc-open"},init:function(){this.tracker=new Qt,this.clsDrop=this.clsDrop||"nc-"+this.$options.name,this.clsPos=this.clsDrop,Dt(this.$el,this.clsDrop)},ready:function(){this.updateAria(this.$el),this.toggle&&(this.toggle=t.toggle(v(this.toggle)?B(this.toggle,this.$el):this.$el.previousElementSibling,{target:this.$el,mode:this.mode}))},events:[{name:"click",delegate:function(){return"."+this.clsDrop+"-close"},handler:function(t){t.preventDefault(),this.hide(!1)}},{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(t){if(!t.defaultPrevented){var e=t.target.hash;e||t.preventDefault(),e&&W(e,this.$el)||this.hide(!1)}}},{name:"beforescroll",handler:function(){this.hide(!1)}},{name:"toggle",self:!0,handler:function(t,e){t.preventDefault(),this.isToggled()?this.hide(!1):this.show(e,!1)}},{name:_n,filter:function(){return u(this.mode,"hover")},handler:function(t){ge(t)||(e&&e!==this&&e.toggle&&u(e.toggle.mode,"hover")&&!W(t.target,e.toggle.$el)&&!O({x:t.pageX,y:t.pageY},ne(e.$el))&&e.hide(!1),t.preventDefault(),this.show(this.toggle))}},{name:"toggleshow",handler:function(t,e){e&&!u(e.target,this.$el)||(t.preventDefault(),this.show(e||this.toggle))}},{name:"togglehide "+In,handler:function(t,e){ge(t)||e&&!u(e.target,this.$el)||(t.preventDefault(),this.toggle&&u(this.toggle.mode,"hover")&&this.hide())}},{name:"beforeshow",self:!0,handler:function(){this.clearTimers()}},{name:"show",self:!0,handler:function(){this.tracker.init(),Dt(this.toggle.$el,this.cls),Z(this.toggle.$el,"aria-expanded","true"),n||(n=!0,Bt(rn,"click",function(t){var n,i=t.target;if(!t.defaultPrevented)for(;e&&e!==n&&!W(i,e.$el)&&(!e.toggle||!W(i,e.toggle.$el));)n=e,e.hide(!1)}))}},{name:"beforehide",self:!0,handler:function(){this.clearTimers()}},{name:"hide",handler:function(t){var n=t.target;this.$el===n?(e=this.isActive()?null:e,_t(this.toggle.$el,this.cls),Z(this.toggle.$el,"aria-expanded","false"),this.toggle.$el.blur(),L("a, button",this.toggle.$el).forEach(function(t){return t.blur()}),this.tracker.cancel()):e=null===e&&W(n,this.$el)&&this.isToggled()?this:e}}],update:{write:function(){this.isToggled()&&!fn.inProgress(this.$el)&&this.position()},events:["resize"]},methods:{show:function(t,n){var i=this;void 0===n&&(n=!0);var r=function(){i.isToggled()||(i.position(),i.toggleElement(i.$el,!0))},o=function(){if(i.toggle=t||i.toggle,i.clearTimers(),!i.isActive())if(n&&e&&e!==i&&e.isDelaying)i.showTimer=setTimeout(i.show,10);else{if(i.isParentOf(e)){if(!e.hideTimer)return;e.hide(!1)}else if(e&&!i.isChildOf(e)&&!i.isParentOf(e))for(var o;e&&e!==o&&!i.isChildOf(e);)o=e,e.hide(!1);n&&i.delayShow?i.showTimer=setTimeout(r,i.delayShow):r(),e=i}};t&&this.toggle&&t.$el!==this.toggle.$el?(Ft(this.$el,"hide",o),this.hide(!1)):o()},hide:function(t){var e=this;void 0===t&&(t=!0);var n=function(){return e.toggleNow(e.$el,!1)};this.clearTimers(),this.isDelaying=this.tracker.movesTo(this.$el),t&&this.isDelaying?this.hideTimer=setTimeout(this.hide,this.hoverIdle):t&&this.delayHide?this.hideTimer=setTimeout(n,this.delayHide):n()},clearTimers:function(){clearTimeout(this.showTimer),clearTimeout(this.hideTimer),this.showTimer=null,this.hideTimer=null,this.isDelaying=!1},isActive:function(){return e===this},isChildOf:function(t){return t&&t!==this&&W(this.$el,t.$el)},isParentOf:function(t){return t&&t!==this&&W(t.$el,this.$el)},position:function(){It(this.$el,this.clsDrop+"-(stack|boundary)"),kt(this.$el,{top:"",left:"",display:"block"}),Ht(this.$el,this.clsDrop+"-boundary",this.boundaryAlign);var t=ne(this.boundary),e=this.boundaryAlign?t:ne(this.toggle.$el);if("justify"===this.align){var n="y"===this.getAxis()?"width":"height";kt(this.$el,n,e[n])}else this.$el.offsetWidth>Math.max(t.right-e.left,e.right-t.left)&&(Dt(this.$el,this.clsDrop+"-stack"),Rt(this.$el,"stack",[this]));this.positionAt(this.$el,this.boundaryAlign?this.boundary:this.toggle.$el,this.boundary),kt(this.$el,"display","")}}}),t.drop.getActive=function(){return e};var n}),t.use(function(t){t.component("dropdown",t.components.drop.extend({name:"dropdown"}))}),t.use(function(t){t.component("form-custom",{mixins:[ei],args:"target",props:{target:Boolean},defaults:{target:!1},computed:{input:function(t,e){return P(gn,e)},state:function(){return this.input.nextElementSibling},target:function(t,e){var n=t.target;return n&&(!0===n&&this.input.parentNode===e&&this.input.nextElementSibling||B(n,e))}},connected:function(){Rt(this.input,"change")},events:[{name:"focusin focusout mouseenter mouseleave",delegate:gn,handler:function(t){var e=t.type;t.current===this.input&&Ht(this.state,"nc-"+(u(e,"focus")?"focus":"hover"),u(["focusin","mouseenter"],e))}},{name:"change",handler:function(){var t,e=this.target,n=this.input;e&&(e[ft(e)?"value":"textContent"]=n.files&&n.files[0]?n.files[0].name:U(n,"select")&&(t=L("option",n).filter(function(t){return t.selected})[0])?t.textContent:n.value)}}]})}),t.use(function(t){t.component("height-match",{args:"target",props:{target:String,row:Boolean},defaults:{target:"> *",row:!0},computed:{elements:function(t,e){return L(t.target,e)}},update:{read:function(){var t=this,e=!1;kt(this.elements,"minHeight",""),this.rows=this.row?this.elements.reduce(function(t,n){return e!==n.offsetTop?t.push([n]):t[t.length-1].push(n),e=n.offsetTop,t},[]).map(function(e){return t.match(e)}):[this.match(this.elements)]},write:function(){this.rows.forEach(function(t){var e=t.height;return kt(t.elements,"minHeight",e)})},events:["load","resize"]},methods:{match:function(t){if(t.length<2)return{};var e=0,n=[];return t.forEach(function(t){var i,r;ht(t)||(i=Z(t,"style"),r=Z(t,"hidden"),Z(t,{style:(i||"")+";display:block !important;",hidden:null})),e=Math.max(e,t.offsetHeight),n.push(t.offsetHeight),w(i)||Z(t,{style:i,hidden:r})}),t=t.filter(function(t,i){return n[i]<e}),{height:e,elements:t}}}})}),t.use(function(t){function e(t){return t&&t.offsetHeight||0}t.component("height-viewport",{props:{expand:Boolean,offsetTop:Boolean,offsetBottom:Boolean,minHeight:Number},defaults:{expand:!1,offsetTop:!1,offsetBottom:!1,minHeight:0},update:{write:function(){kt(this.$el,"boxSizing","border-box");var t,n=Vn(en),i=0;if(this.expand){kt(this.$el,{height:"",minHeight:""});var r=n-e(rn);r>0&&(t=e(this.$el)+r)}else{var o=ne(this.$el).top;o<n/2&&this.offsetTop&&(i+=o),!0===this.offsetBottom?i+=e(this.$el.nextElementSibling):b(this.offsetBottom)?i+=n/100*this.offsetBottom:this.offsetBottom&&c(this.offsetBottom,"px")?i+=C(this.offsetBottom):v(this.offsetBottom)&&(i+=e(B(this.offsetBottom,this.$el))),t=i?"calc(100vh - "+i+"px)":"100vh"}if(t){kt(this.$el,{height:"",minHeight:t});var s=this.$el.offsetHeight;this.minHeight&&this.minHeight>s&&kt(this.$el,"minHeight",this.minHeight),n-i>=s&&kt(this.$el,"height",t)}},events:["load","resize"]}})}),t.use(function(t){ot(function(){if(Sn){var e="nc-hover";Bt(nn,"tap",function(t){var n=t.target;return L("."+e).forEach(function(t,i){return!W(n,i)&&_t(i,e)})}),Object.defineProperty(t,"hoverSelector",{set:function(t){Bt(nn,"tap",t,function(t){return Dt(t.current,e)})}}),t.hoverSelector=".nc-animation-toggle, .nc-transition-toggle, [nc-hover]"}})}),t.use(function(t){t.component("margin",{props:{margin:String,firstColumn:Boolean},defaults:{margin:"nc-margin-small-top",firstColumn:"nc-first-column"},update:{read:function(){var t=this.$el.children;if(t.length&&ht(this.$el)){this.stacks=!0;for(var e=[[]],n=0;n<t.length;n++){var i=t[n],r=i.getBoundingClientRect();if(r.height)for(var o=e.length-1;o>=0;o--){var s=e[o];if(!s[0]){s.push(i);break}var a=s[0].getBoundingClientRect();if(r.top>=Math.floor(a.bottom)){e.push([i]);break}if(Math.floor(r.bottom)>a.top){if(this.stacks=!1,r.left<a.left&&!on){s.unshift(i);break}s.push(i);break}if(0===o){e.unshift([i]);break}}}this.rows=e}else this.rows=!1},write:function(){var t=this;this.rows&&this.rows.forEach(function(e,n){return e.forEach(function(e,i){Ht(e,t.margin,0!==n),Ht(e,t.firstColumn,0===i)})})},events:["load","resize"]}})}),t.use(function(t){t.component("gif",{update:{read:function(){var t=lt(this.$el);!this.isInView&&t&&(this.$el.src=this.$el.src),this.isInView=t},events:["scroll","load","resize"]}})}),t.use(function(t){t.component("grid",t.components.margin.extend({mixins:[ei],name:"grid",defaults:{margin:"nc-grid-margin",clsStack:"nc-grid-stack"},update:{write:function(){Ht(this.$el,this.clsStack,this.stacks)},events:["load","resize"]}}))}),t.use(function(t){t.component("leader",{mixins:[ei],props:{fill:String,media:"media"},defaults:{fill:"",media:!1,clsWrapper:"nc-leader-fill",clsHide:"nc-leader-hide",attrFill:"data-fill"},computed:{fill:function(t){return t.fill||At("leader-fill")}},connected:function(){this.wrapper=xt(this.$el,'<span class="'+this.clsWrapper+'">')[0]},disconnected:function(){Tt(this.wrapper.childNodes),delete this._width},update:[{read:function(){var t=this._width;this._width=Math.floor(this.$el.offsetWidth/2),this._changed=t!==this._width,this._hide=this.media&&!en.matchMedia(this.media).matches},write:function(){Ht(this.wrapper,this.clsHide,this._hide),this._changed&&Z(this.wrapper,this.attrFill,new Array(this._width).join(this.fill))},events:["load","resize"]}]})}),t.use(function(t){t.component("modal",{mixins:[ri],defaults:{clsPage:"nc-modal-page",clsPanel:"nc-modal-dialog",selClose:".nc-modal-close, .nc-modal-close-default, .nc-modal-close-outside, .nc-modal-close-full"},events:[{name:"show",self:!0,handler:function(){Ot(this.panel,"nc-margin-auto-vertical")?Dt(this.$el,"nc-flex"):kt(this.$el,"display","block"),Vn(this.$el)}},{name:"hidden",self:!0,handler:function(){kt(this.$el,"display",""),_t(this.$el,"nc-flex")}}]}),t.component("overflow-auto",{mixins:[ei],computed:{modal:function(t,e){return V(e,".nc-modal")},panel:function(t,e){return V(e,".nc-modal-dialog")}},connected:function(){kt(this.$el,"minHeight",150)},update:{write:function(){if(this.panel&&this.modal){var t=kt(this.$el,"maxHeight");kt(kt(this.$el,"maxHeight",150),"maxHeight",Math.max(150,150+Vn(this.modal)-this.panel.offsetHeight)),t!==kt(this.$el,"maxHeight")&&Rt(this.$el,"resize")}},events:["load","resize"]}}),t.modal.dialog=function(e,n){var i=t.modal(' <div class="nc-modal"> <div class="nc-modal-dialog">'+e+"</div> </div> ",n);return Bt(i.$el,"hidden",function(t){t.target===t.current&&i.$destroy(!0)}),i.show(),i},t.modal.alert=function(e,n){return n=Xe({bgClose:!1,escClose:!1,labels:t.modal.labels},n),new Pe(function(i){return Bt(t.modal.dialog(' <div class="nc-modal-body">'+(v(e)?e:pt(e))+'</div> <div class="nc-modal-footer nc-text-right"> <button class="nc-button nc-button-primary nc-modal-close" autofocus>'+n.labels.ok+"</button> </div> ",n).$el,"hide",i)})},t.modal.confirm=function(e,n){return n=Xe({bgClose:!1,escClose:!1,labels:t.modal.labels},n),new Pe(function(i,r){return Bt(t.modal.dialog(' <div class="nc-modal-body">'+(v(e)?e:pt(e))+'</div> <div class="nc-modal-footer nc-text-right"> <button class="nc-button nc-button-default nc-modal-close">'+n.labels.cancel+'</button> <button class="nc-button nc-button-primary nc-modal-close" autofocus>'+n.labels.ok+"</button> </div> ",n).$el,"click",".nc-modal-footer button",function(t){return 0===Ct(t.target)?r():i()})})},t.modal.prompt=function(e,n,i){return i=Xe({bgClose:!1,escClose:!1,labels:t.modal.labels},i),new Pe(function(r){var o=!1,s=t.modal.dialog(' <form class="nc-form-stacked"> <div class="nc-modal-body"> <label>'+(v(e)?e:pt(e))+'</label> <input class="nc-input" autofocus> </div> <div class="nc-modal-footer nc-text-right"> <button class="nc-button nc-button-default nc-modal-close" type="button">'+i.labels.cancel+'</button> <button class="nc-button nc-button-primary">'+i.labels.ok+"</button> </div> </form> ",i),a=P("input",s.$el);a.value=n,Bt(s.$el,"submit","form",function(t){t.preventDefault(),r(a.value),o=!0,s.hide()}),Bt(s.$el,"hide",function(){o||r(null)})})},t.modal.labels={ok:"Ok",cancel:"Cancel"}}),t.use(function(t){t.component("nav",t.components.accordion.extend({name:"nav",defaults:{targets:"> .nc-parent",toggle:"> a",content:"> ul"}}))}),t.use(function(t){t.component("navbar",{mixins:[ei],props:{dropdown:String,mode:"list",align:String,offset:Number,boundary:Boolean,boundaryAlign:Boolean,clsDrop:String,delayShow:Number,delayHide:Number,dropbar:Boolean,dropbarMode:String,dropbarAnchor:"query",duration:Number},defaults:{dropdown:".nc-navbar-nav > li",align:on?"right":"left",clsDrop:"nc-navbar-dropdown",mode:void 0,offset:void 0,delayShow:void 0,delayHide:void 0,boundaryAlign:void 0,flip:"x",boundary:!0,dropbar:!1,dropbarMode:"slide",dropbarAnchor:!1,duration:200},computed:{boundary:function(t,e){var n=t.boundary,i=t.boundaryAlign;return!0===n||i?e:n},pos:function(t){return"bottom-"+t.align}},ready:function(){this.dropbar&&t.navbarDropbar(B(this.dropbar,this.$el)||vt(this.dropbarAnchor||this.$el,"<div></div>"),{clsDrop:this.clsDrop,mode:this.dropbarMode,duration:this.duration,navbar:this})},update:function(){t.drop(L(this.dropdown+" ."+this.clsDrop,this.$el).filter(function(e){return!t.getComponent(e,"dropdown")}),Xe({},this.$props,{boundary:this.boundary,pos:this.pos}))},events:[{name:"mouseover",delegate:function(){return this.dropdown},handler:function(t){var e=t.current,n=this.getActive();n&&n.toggle&&!W(n.toggle.$el,e)&&!n.tracker.movesTo(n.$el)&&n.hide(!1)}}],methods:{getActive:function(){var e=t.drop.getActive();return e&&u(e.mode,"hover")&&W(e.toggle.$el,this.$el)&&e}}}),t.component("navbar-dropbar",{mixins:[ei],defaults:{clsDrop:"",mode:"slide",navbar:null,duration:200},init:function(){"slide"===this.mode&&Dt(this.$el,"nc-navbar-dropbar-slide")},events:[{name:"beforeshow",el:function(){return this.navbar.$el},handler:function(t,e){var n=e.$el;"bottom"!==e.dir||W(n,this.$el)||(gt(this.$el,n),e.show(),t.preventDefault())}},{name:"mouseleave",handler:function(){var t=this.navbar.getActive();t&&!U(this.$el,":hover")&&t.hide()}},{name:"show",handler:function(t,e){var n=e.$el;this.clsDrop&&Dt(n,this.clsDrop+"-dropbar"),this.transitionTo(n.offsetHeight+C(kt(n,"margin-top"))+C(kt(n,"margin-bottom")))}},{name:"beforehide",handler:function(t,e){var n=e.$el,i=this.navbar.getActive();U(this.$el,":hover")&&i&&i.$el===n&&t.preventDefault()}},{name:"hide",handler:function(t,e){var n=e.$el,i=this.navbar.getActive();(!i||i&&i.$el===n)&&this.transitionTo(0)}}],methods:{transitionTo:function(t){return Vn(this.$el,ht(this.$el)?Vn(this.$el):0),an.cancel(this.$el),an.start(this.$el,{height:t},this.duration).catch(I)}}})}),t.use(function(t){t.component("offcanvas",{mixins:[ri],args:"mode",props:{content:String,mode:String,flip:Boolean,overlay:Boolean},defaults:{content:".nc-offcanvas-content",mode:"slide",flip:!1,overlay:!1,clsPage:"nc-offcanvas-page",clsContainer:"nc-offcanvas-container",clsPanel:"nc-offcanvas-bar",clsFlip:"nc-offcanvas-flip",clsContent:"nc-offcanvas-content",clsContentAnimation:"nc-offcanvas-content-animation",clsSidebarAnimation:"nc-offcanvas-bar-animation",clsMode:"nc-offcanvas",clsOverlay:"nc-offcanvas-overlay",selClose:".nc-offcanvas-close"},computed:{content:function(t){return P(t.content)},clsFlip:function(t){var e=t.flip,n=t.clsFlip;return e?n:""},clsOverlay:function(t){var e=t.overlay,n=t.clsOverlay;return e?n:""},clsMode:function(t){var e=t.mode;return t.clsMode+"-"+e},clsSidebarAnimation:function(t){var e=t.mode,n=t.clsSidebarAnimation;return"none"===e||"reveal"===e?"":n},clsContentAnimation:function(t){var e=t.mode,n=t.clsContentAnimation;return"push"!==e&&"reveal"!==e?"":n},transitionElement:function(t){return"reveal"===t.mode?this.panel.parentNode:this.panel}},update:{write:function(){this.getActive()===this&&((this.overlay||this.clsContentAnimation)&&Yn(this.content,Yn(en)-this.scrollbarWidth),this.overlay&&(Vn(this.content,Vn(en)),ti&&(this.content.scrollTop=ti.y)))},events:["resize"]},events:[{name:"click",delegate:function(){return'a[href^="#"]'},handler:function(t){var e=t.current;e.hash&&P(e.hash,this.content)&&(ti=null,this.hide())}},{name:"beforescroll",filter:function(){return this.overlay},handler:function(t,e,n){e&&n&&this.isToggled()&&P(n,this.content)&&(Ft(this.$el,"hidden",function(){return e.scrollTo(n)}),t.preventDefault())}},{name:"show",self:!0,handler:function(){ti=ti||{x:en.pageXOffset,y:en.pageYOffset},"reveal"!==this.mode||Ot(this.panel,this.clsMode)||(wt(this.panel,"<div>"),Dt(this.panel.parentNode,this.clsMode)),kt(rn,"overflowY",(!this.clsContentAnimation||this.flip)&&this.scrollbarWidth&&this.overlay?"scroll":""),Dt(nn.body,this.clsContainer+" "+this.clsFlip+" "+this.clsOverlay),Vn(nn.body),Dt(this.content,this.clsContentAnimation),Dt(this.panel,this.clsSidebarAnimation+" "+("reveal"!==this.mode?this.clsMode:"")),Dt(this.$el,this.clsOverlay),kt(this.$el,"display","block"),Vn(this.$el)}},{name:"hide",self:!0,handler:function(){_t(this.content,this.clsContentAnimation);var t=this.getActive();("none"===this.mode||t&&t!==this&&t!==this.prev)&&Rt(this.panel,jn)}},{name:"hidden",self:!0,handler:function(){if("reveal"===this.mode&&Tt(this.panel),this.overlay){if(!ti){var t=this.content,e=t.scrollLeft,n=t.scrollTop;ti={x:e,y:n}}}else ti={x:en.pageXOffset,y:en.pageYOffset};_t(this.panel,this.clsSidebarAnimation+" "+this.clsMode),_t(this.$el,this.clsOverlay),kt(this.$el,"display",""),_t(nn.body,this.clsContainer+" "+this.clsFlip+" "+this.clsOverlay),nn.body.scrollTop=ti.y,kt(rn,"overflow-y",""),Yn(this.content,""),Vn(this.content,""),en.scrollTo(ti.x,ti.y),ti=null}},{name:"swipeLeft swipeRight",handler:function(t){this.isToggled()&&ge(t)&&("swipeLeft"===t.type&&!this.flip||"swipeRight"===t.type&&this.flip)&&this.hide()}}]})}),t.use(function(t){t.component("responsive",{props:["width","height"],init:function(){Dt(this.$el,"nc-responsive-width")},update:{read:function(){this.dim=!!(ht(this.$el)&&this.width&&this.height)&&{width:Yn(this.$el.parentNode),height:this.height}},write:function(){this.dim&&Vn(this.$el,pn.contain({height:this.height,width:this.width},this.dim).height)},events:["load","resize"]}})}),t.use(function(t){t.component("scroll",{props:{duration:Number,offset:Number},defaults:{duration:1e3,offset:0},methods:{scrollTo:function(t){var e=this,n=ne(t=t&&P(v(t)?t.replace(/\//g,"\\/"):t)||nn.body).top-this.offset,i=Vn(nn),r=Vn(en);if(n+r>i&&(n=i-r),Rt(this.$el,"beforescroll",[this,t])){var o=Date.now(),s=en.pageYOffset,a=function(){var i=s+(n-s)*function(t){return.5*(1-Math.cos(Math.PI*t))}(_((Date.now()-o)/e.duration));en.scrollTo(en.pageXOffset,i),i!==n?Cn(a):Rt(e.$el,"scrolled",[e,t])};a()}}},events:{click:function(t){t.defaultPrevented||(t.preventDefault(),this.scrollTo(this.$el.hash))}}})}),t.use(function(t){t.component("scrollspy",{args:"cls",props:{cls:"list",target:String,hidden:Boolean,offsetTop:Number,offsetLeft:Number,repeat:Boolean,delay:Number},defaults:{cls:["nc-scrollspy-inview"],target:!1,hidden:!0,offsetTop:0,offsetLeft:0,repeat:!1,delay:0,inViewClass:"nc-scrollspy-inview"},computed:{elements:function(t,e){var n=t.target;return n&&L(n,e)||[e]}},update:[{write:function(){this.hidden&&kt(R(this.elements,":not(."+this.inViewClass+")"),"visibility","hidden")}},{read:function(){var t=this;this.elements.forEach(function(e){if(!e._scrollspy){var n=Z(e,"nc-scrollspy-class");e._scrollspy={toggles:n&&n.split(",")||t.cls}}e._scrollspy.show=lt(e,t.offsetTop,t.offsetLeft)})},write:function(){var t=this,e=1===this.elements.length?1:0;this.elements.forEach(function(n,i){var r=n._scrollspy,o=r.toggles[i]||r.toggles[0];if(r.show){if(!r.inview&&!r.timer){var s=function(){kt(n,"visibility",""),Dt(n,t.inViewClass),Ht(n,o),Rt(n,"inview"),t.$update(),r.inview=!0,delete r.timer};t.delay&&e?r.timer=setTimeout(s,t.delay*e):s(),e++}}else r.inview&&t.repeat&&(r.timer&&(clearTimeout(r.timer),delete r.timer),kt(n,"visibility",t.hidden?"hidden":""),_t(n,t.inViewClass),Ht(n,o),Rt(n,"outview"),t.$update(),r.inview=!1)})},events:["scroll","load","resize"]}]})}),t.use(function(t){t.component("scrollspy-nav",{props:{cls:String,closest:String,scroll:Boolean,overflow:Boolean,offset:Number},defaults:{cls:"nc-active",closest:!1,scroll:!1,overflow:!0,offset:0},computed:{links:function(t,e){return L('a[href^="#"]',e).filter(function(t){return t.hash})},elements:function(){return this.closest?V(this.links,this.closest):this.links},targets:function(){return L(this.links.map(function(t){return t.hash}).join(","))}},update:[{read:function(){this.scroll&&t.scroll(this.links,{offset:this.offset||0})}},{read:function(){var t=this,e=en.pageYOffset+this.offset+1,n=Vn(nn)-Vn(en)+this.offset;this.active=!1,this.targets.every(function(i,r){var o=ne(i).top,s=r+1===t.targets.length;if(!t.overflow&&(0===r&&o>e||s&&o+i.offsetTop<e))return!1;if(!s&&ne(t.targets[r+1]).top<=e)return!0;if(e>=n)for(var a=t.targets.length-1;a>r;a--)if(lt(t.targets[a])){i=t.targets[a];break}return!(t.active=P(R(t.links,'[href="#'+i.id+'"]')))})},write:function(){this.links.forEach(function(t){return t.blur()}),_t(this.elements,this.cls),this.active&&Rt(this.$el,"active",[this.active,Dt(this.closest?V(this.active,this.closest):this.active,this.cls)])},events:["scroll","load","resize"]}]})}),t.use(function(t){t.component("sticky",{mixins:[ei],attrs:!0,props:{top:null,bottom:Boolean,offset:Number,animation:String,clsActive:String,clsInactive:String,clsFixed:String,clsBelow:String,selTarget:String,widthElement:"query",showOnUp:Boolean,media:"media",target:Number},defaults:{top:0,bottom:!1,offset:0,animation:"",clsActive:"nc-active",clsInactive:"",clsFixed:"nc-sticky-fixed",clsBelow:"nc-sticky-below",selTarget:"",widthElement:!1,showOnUp:!1,media:!1,target:!1},computed:{selTarget:function(t,e){var n=t.selTarget;return n&&P(n,e)||e}},connected:function(){this.placeholder=P('<div class="nc-sticky-placeholder"></div>'),this.widthElement=this.$props.widthElement||this.placeholder,this.isActive||this.hide()},disconnected:function(){this.isActive&&(this.isActive=!1,this.hide(),_t(this.$el,this.clsInactive)),bt(this.placeholder),this.placeholder=null,this.widthElement=null},ready:function(){var t=this;if(this.target&&location.hash&&en.pageYOffset>0){var e=P(location.hash);e&&Cn(function(){var n=ne(e).top,i=ne(t.$el).top,r=t.$el.offsetHeight;i+r>=n&&i<=n+e.offsetHeight&&en.scrollTo(0,n-r-t.target-t.offset)})}},events:[{name:"active",self:!0,handler:function(){jt(this.selTarget,this.clsInactive,this.clsActive)}},{name:"inactive",self:!0,handler:function(){jt(this.selTarget,this.clsActive,this.clsInactive)}}],update:[{write:function(){var t,e=this,n=this.placeholder,i=(this.isActive?n:this.$el).offsetHeight;kt(n,Xe({height:"absolute"!==kt(this.$el,"position")?i:""},kt(this.$el,["marginTop","marginBottom","marginLeft","marginRight"]))),W(n,rn)||(vt(this.$el,n),Z(n,"hidden","")),Z(this.widthElement,"hidden",null),this.width=this.widthElement.offsetWidth,Z(this.widthElement,"hidden",this.isActive?null:""),this.topOffset=ne(this.isActive?n:this.$el).top,this.bottomOffset=this.topOffset+i,["top","bottom"].forEach(function(n){e[n]=e.$props[n],e[n]&&(b(e[n])?e[n]=e[n+"Offset"]+C(e[n]):v(e[n])&&e[n].match(/^-?\d+vh$/)?e[n]=Vn(en)*C(e[n])/100:(t=!0===e[n]?e.$el.parentNode:B(e[n],e.$el))&&(e[n]=ne(t).top+t.offsetHeight))}),this.top=Math.max(C(this.top),this.topOffset)-this.offset,this.bottom=this.bottom&&this.bottom-i,this.inactive=this.media&&!en.matchMedia(this.media).matches,this.isActive&&this.update()},events:["load","resize"]},{read:function(){this.offsetTop=ne(this.$el).top,this.scroll=en.pageYOffset,this.visible=ht(this.$el)},write:function(t){var e=this;void 0===t&&(t={});var n=t.dir,i=this.scroll;if(!(i<0||!this.visible||this.disabled||this.showOnUp&&!n))if(this.inactive||i<this.top||this.showOnUp&&(i<=this.top||"down"===n||"up"===n&&!this.isActive&&i<=this.bottomOffset)){if(!this.isActive)return;this.isActive=!1,this.animation&&i>this.topOffset?(fn.cancel(this.$el),fn.out(this.$el,this.animation).then(function(){return e.hide()},I)):this.hide()}else this.isActive?this.update():this.animation?(fn.cancel(this.$el),this.show(),fn.in(this.$el,this.animation).catch(I)):this.show()},events:["scroll"]}],methods:{show:function(){this.isActive=!0,this.update(),Z(this.placeholder,"hidden",null)},hide:function(){this.isActive&&!Ot(this.selTarget,this.clsActive)||Rt(this.$el,"inactive"),_t(this.$el,this.clsFixed,this.clsBelow),kt(this.$el,{position:"",top:"",width:""}),Z(this.placeholder,"hidden","")},update:function(){var t=Math.max(0,this.offset),e=this.scroll>this.top;this.bottom&&this.scroll>this.bottom-this.offset&&(t=this.bottom-this.scroll),kt(this.$el,{position:"fixed",top:t+"px",width:this.width}),Ot(this.selTarget,this.clsActive)?e||Rt(this.$el,"inactive"):e&&Rt(this.$el,"active"),Ht(this.$el,this.clsBelow,this.scroll>this.bottomOffset),Dt(this.$el,this.clsFixed)}}})}),t.use(function(t){function e(t,e){if(!i[t]){i[t]={};for(var r;r=n.exec(t);)i[t][r[3]]='<svg xmlns="http://www.w3.org/2000/svg"'+r[1]+"svg>"}return i[t][e]}t.component("svg",{attrs:!0,props:{id:String,icon:String,src:String,style:String,width:Number,height:Number,ratio:Number,class:String},defaults:{ratio:1,id:!1,exclude:["src"],class:""},init:function(){this.class+=" nc-svg"},connected:function(){var t=this;if(!this.icon&&u(this.src,"#")){var n=this.src.split("#");n.length>1&&(this.src=n[0],this.icon=n[1])}this.svg=this.getSvg().then(function(n){var i;if(v(n)?(t.icon&&u(n,"<symbol")&&(n=e(n,t.icon)||n),i=P(n.substr(n.indexOf("<svg")))):i=n.cloneNode(!0),!i)return Pe.reject("SVG not found.");var r=Z(i,"viewBox");r&&(r=r.split(" "),t.width=t.$props.width||r[2],t.height=t.$props.height||r[3]),t.width*=t.ratio,t.height*=t.ratio;for(var o in t.$options.props)t[o]&&!u(t.exclude,o)&&Z(i,o,t[o]);t.id||et(i,"id"),t.width&&!t.height&&et(i,"height"),t.height&&!t.width&&et(i,"width");var s=t.$el;if(ut(s)||"CANVAS"===s.tagName){Z(s,{hidden:!0,id:null});var a=s.nextElementSibling;a&&i.isEqualNode(a)?i=a:vt(s,i)}else{var l=s.lastElementChild;l&&i.isEqualNode(l)?i=l:gt(s,i)}return t.svgEl=i,i},I)},disconnected:function(){var t=this;ut(this.$el)&&Z(this.$el,{hidden:null,id:this.id||null}),this.svg&&this.svg.then(function(e){return(!t._connected||e!==t.svgEl)&&bt(e)},I),this.svg=this.svgEl=null},methods:{getSvg:function(){var t=this;return this.src?si[this.src]?si[this.src]:(si[this.src]=new Pe(function(e,n){l(t.src,"data:")?e(decodeURIComponent(t.src.split(",")[1])):H(t.src).then(function(t){return e(t.response)},function(){return n("SVG not found.")})}),si[this.src]):Pe.reject()}}});var n=/<symbol(.*?id=(['"])(.*?)\2[^]*?<\/)symbol>/g,i={}}),t.use(function(t){function e(e,n){t.component(e,t.components.icon.extend({name:e,mixins:n?[n]:[],defaults:{icon:e}}))}var n={},i={spinner:'<svg width="30" height="30" viewBox="0 0 30 30" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" cx="15" cy="15" r="14"></circle></svg>',totop:'<svg width="18" height="10" viewBox="0 0 18 10" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 9 9 1 17 9 "></polyline></svg>',marker:'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect x="9" y="4" width="1" height="11"></rect><rect x="4" y="9" width="11" height="1"></rect></svg>',"close-icon":'<svg width="14" height="14" viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.1" x1="1" y1="1" x2="13" y2="13"></line><line fill="none" stroke="#000" stroke-width="1.1" x1="13" y1="1" x2="1" y2="13"></line></svg>',"close-large":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><line fill="none" stroke="#000" stroke-width="1.4" x1="1" y1="1" x2="19" y2="19"></line><line fill="none" stroke="#000" stroke-width="1.4" x1="19" y1="1" x2="1" y2="19"></line></svg>',"navbar-toggle-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><rect y="9" width="20" height="2"></rect><rect y="3" width="20" height="2"></rect><rect y="15" width="20" height="2"></rect></svg>',"overlay-icon":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><rect x="19" y="0" width="1" height="40"></rect><rect x="0" y="19" width="40" height="1"></rect></svg>',"pagination-next":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="1 1 6 6 1 11"></polyline></svg>',"pagination-previous":'<svg width="7" height="12" viewBox="0 0 7 12" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.2" points="6 1 1 6 6 11"></polyline></svg>',"search-icon":'<svg width="20" height="20" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="9" cy="9" r="7"></circle><path fill="none" stroke="#000" stroke-width="1.1" d="M14,14 L18,18 L14,14 Z"></path></svg>',"search-large":'<svg width="40" height="40" viewBox="0 0 40 40" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.8" cx="17.5" cy="17.5" r="16.5"></circle><line fill="none" stroke="#000" stroke-width="1.8" x1="38" y1="39" x2="29" y2="30"></line></svg>',"search-navbar":'<svg width="24" height="24" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"><circle fill="none" stroke="#000" stroke-width="1.1" cx="10.5" cy="10.5" r="9.5"/><line fill="none" stroke="#000" stroke-width="1.1" x1="23" y1="23" x2="17" y2="17"/></svg>',"slidenav-next":'<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="1.225,23 12.775,12 1.225,1 "></polyline></svg>',"slidenav-next-large":'<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="4.002,38.547 22.527,20.024 4,1.5 "></polyline></svg>',"slidenav-previous":'<svg width="14px" height="24px" viewBox="0 0 14 24" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="1.4" points="12.775,1 1.225,12 12.775,23 "></polyline></svg>',"slidenav-previous-large":'<svg width="25px" height="40px" viewBox="0 0 25 40" xmlns="http://www.w3.org/2000/svg"><polyline fill="none" stroke="#000" stroke-width="2" points="20.527,1.5 2,20.024 20.525,38.547 "></polyline></svg>'};t.component("icon",t.components.svg.extend({attrs:["icon","ratio"],mixins:[ei],name:"icon",args:"icon",props:["icon"],defaults:{exclude:["id","style","class","src","icon"]},init:function(){Dt(this.$el,"nc-icon"),on&&(this.icon=N(N(this.icon,"left","right"),"previous","next"))},disconnected:function(){delete this.delay},methods:{getSvg:function(){var t=function(t){return i[t]?(n[t]||(n[t]=P(i[t].trim())),n[t]):null}(this.icon);return t?Pe.resolve(t):Pe.reject("Icon not found.")}}})),["marker","navbar-toggle-icon","overlay-icon","pagination-previous","pagination-next","totop"].forEach(function(t){return e(t)}),["slidenav-previous","slidenav-next"].forEach(function(t){return e(t,{init:function(){Dt(this.$el,"nc-slidenav"),Ot(this.$el,"nc-slidenav-large")&&(this.icon+="-large")}})}),e("search-icon",{init:function(){Ot(this.$el,"nc-search-icon")&&Y(this.$el,".nc-search-large").length?this.icon="search-large":Y(this.$el,".nc-search-navbar").length&&(this.icon="search-navbar")}}),e("close",{init:function(){this.icon="close-"+(Ot(this.$el,"nc-close-large")?"large":"icon")}}),e("spinner",{connected:function(){var t=this;this.svg.then(function(e){return 1!==t.ratio&&kt(P("circle",e),"stroke-width",1/t.ratio)},I)}}),t.icon.add=function(e){Object.keys(e).forEach(function(t){i[t]=e[t],delete n[t]}),t._initialized&&D(t.instances,function(t){"icon"===t.$options.name&&t.$reset()})}}),t.use(function(t){t.component("switcher",{mixins:[ii],args:"connect",props:{connect:String,toggle:String,active:Number,swiping:Boolean},defaults:{connect:"~.nc-switcher",toggle:"> *",active:0,swiping:!0,cls:"nc-active",clsContainer:"nc-switcher",attrItem:"nc-switcher-item",queued:!0},computed:{connects:function(t,e){return q(t.connect,e)},toggles:function(t,e){return L(t.toggle,e)}},events:[{name:"click",delegate:function(){return this.toggle+":not(.nc-disabled)"},handler:function(t){t.preventDefault(),this.show(t.current)}},{name:"click",el:function(){return this.connects},delegate:function(){return"["+this.attrItem+"],[data-"+this.attrItem+"]"},handler:function(t){t.preventDefault(),this.show(it(t.current,this.attrItem))}},{name:"swipeRight swipeLeft",filter:function(){return this.swiping},el:function(){return this.connects},handler:function(t){ge(t)&&(t.preventDefault(),en.getSelection().toString()||this.show("swipeLeft"===t.type?"next":"previous"))}}],update:function(){var t=this;this.connects.forEach(function(e){return t.updateAria(e.children)}),this.show(R(this.toggles,"."+this.cls)[0]||this.toggles[this.active]||this.toggles[0])},methods:{show:function(t){for(var e,n=this,i=this.toggles.length,r=this.connects.length&&Ct(R(this.connects[0].children,"."+this.cls)[0]),o=r>=0,s=ct(t,this.toggles,r),a="previous"===t?-1:1,l=0;l<i;l++,s=(s+a+i)%i)if(!U(n.toggles[s],".nc-disabled, [disabled]")){e=n.toggles[s];break}!e||r>=0&&Ot(e,this.cls)||r===s||(_t(this.toggles,this.cls),Z(this.toggles,"aria-expanded",!1),Dt(e,this.cls),Z(e,"aria-expanded",!0),this.connects.forEach(function(t){o?n.toggleElement([t.children[r],t.children[s]]):n.toggleNow(t.children[s])}))}}})}),t.use(function(t){t.component("tab",t.components.switcher.extend({mixins:[ei],name:"tab",props:{media:"media"},defaults:{media:960,attrItem:"nc-tab-item"},init:function(){var e=Ot(this.$el,"nc-tab-left")?"nc-tab-left":!!Ot(this.$el,"nc-tab-right")&&"nc-tab-right";e&&t.toggle(this.$el,{cls:e,mode:"media",media:this.media})}}))})}(Qn);var ai=function(t){var e=t.util.css,n={slide:{show:function(t){return[{transform:be(-100*t)},{transform:be()}]},percent:function(t){return n.translated(t)},translate:function(t,e){return[{transform:be(-100*e*t)},{transform:be(100*e*(1-t))}]}},translated:function(t){return Math.abs(e(t,"transform").split(",")[4]/t.offsetWidth)}};return n},li=function(t){var e=t.mixin,n=t.util,i=n.assign,r=n.css;return i({},e.slideshow.defaults.Animations,{fade:{show:function(){return[{opacity:0},{opacity:1}]},percent:function(t){return 1-r(t,"opacity")},translate:function(t){return[{opacity:1-t},{opacity:t}]}},scale:{show:function(){return[{opacity:0,transform:we(.8)},{opacity:1,transform:we(1)}]},percent:function(t){return 1-r(t,"opacity")},translate:function(t){return[{opacity:1-t,transform:we(1-.2*t)},{opacity:t,transform:we(.8+.2*t)}]}}})},ci=function(t){var e=t.mixin,n=t.util,i=n.assign,r=n.css,o=i({},e.slideshow.defaults.Animations,{fade:{show:function(){return[{opacity:0,zIndex:0},{zIndex:-1}]},percent:function(t){return 1-r(t,"opacity")},translate:function(t){return[{opacity:1-t,zIndex:0},{zIndex:-1}]}},scale:{show:function(){return[{opacity:0,transform:we(1.5),zIndex:0},{zIndex:-1}]},percent:function(t){return 1-r(t,"opacity")},translate:function(t){return[{opacity:1-t,transform:we(1+.5*t),zIndex:0},{zIndex:-1}]}},pull:{show:function(t){return t<0?[{transform:be(30),zIndex:-1},{transform:be(),zIndex:0}]:[{transform:be(-100),zIndex:0},{transform:be(),zIndex:-1}]},percent:function(t,e,n){return n<0?1-o.translated(e):o.translated(t)},translate:function(t,e){return e<0?[{transform:be(30*t),zIndex:-1},{transform:be(-100*(1-t)),zIndex:0}]:[{transform:be(100*-t),zIndex:0},{transform:be(30*(1-t)),zIndex:-1}]}},push:{show:function(t){return t<0?[{transform:be(100),zIndex:0},{transform:be(),zIndex:-1}]:[{transform:be(-30),zIndex:-1},{transform:be(),zIndex:0}]},percent:function(t,e,n){return n>0?1-o.translated(e):o.translated(t)},translate:function(t,e){return e<0?[{transform:be(100*t),zIndex:0},{transform:be(-30*(1-t)),zIndex:-1}]:[{transform:be(-30*t),zIndex:-1},{transform:be(100*(1-t)),zIndex:0}]}}});return o};return Qn.use(ve),Qn.use(ye),Qn.use(Te),Qn.use($e),Qn.use(Ce),Qn.use(ke),Qn.use(Ee),Qn.use(Se),Qn.use(Ae),function(t){function e(){n(nn.body,i),Pn.flush(),new $n(function(e){return e.forEach(function(e){for(var o=e.addedNodes,s=e.removedNodes,a=e.target,l=0;l<o.length;l++)n(o[l],i);for(l=0;l<s.length;l++)n(s[l],r);t.update(Wt("update",!0,!1,{mutation:!0}),a,!0)})}).observe(rn,{childList:!0,subtree:!0,characterData:!0,attributes:!0,attributeFilter:["href"]}),t._initialized=!0}function n(t,e){if(1===t.nodeType&&!tt(t,"nc-no-boot"))for(e(t),t=t.firstElementChild;t;){var i=t.nextElementSibling;n(t,e),t=i}}var i=t.connect,r=t.disconnect;$n?nn.body?e():new $n(function(){nn.body&&(this.disconnect(),e())}).observe(rn,{childList:!0,subtree:!0}):ot(function(){n(nn.body,i),Bt(rn,"DOMNodeInserted",function(t){return n(t.target,i)}),Bt(rn,"DOMNodeRemoved",function(t){return n(t.target,r)})})}(Qn),Qn});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
